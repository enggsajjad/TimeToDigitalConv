C51 COMPILER V6.11.4C,  MAIN                      06/07/113  08:53:08  PAGE  1

QCW(0x00002D1A)

WIN32 C51 COMPILER V6.11.4C, COMPILATION OF MODULE MAIN      
OBJECT MODULE PLACED IN c:\documents and settings\sajjad hussain\desktop\chrono3
            -2c_c51_r3\main.obj
COMPILER INVOKED BY: C51.EXE C:\DOCUMENTS AND SETTINGS\SAJJAD HUSSAIN\DESKTOP\CH
            -RONO32C_C51_R3\MAIN.C OBJECT(C:\DOCUMENTS AND SETTINGS\SAJJAD HUSSA
            -IN\DESKTOP\CHRONO32C_C51_R3\MAIN.OBJ) PIN(C:\FSI\INC) NOAM PR(C:\DO
            -CUMENTS AND SETTINGS\SAJJAD HUSSAIN\DESKTOP\CHRONO32C_C51_R3\MAIN.L
            -ST) CD SB OE(1) SM FP(NOFLOAT) PW(80) 

stmt level    source
   1          /*================================================================
            -========================
   2          Project Name:  CHRONO-32C	Version 3 Rev. 2
   3          Author Name:   Sajjad Hussain SE SD-PD
   4          Date,Place:		30-11-2011, ESDG, ICCC, Islamabad. 
   5          					'Chrono32C_MC_R1' against quotation No.Q-SmartPCBs/6049 dated
            - 19-09-2012
   6          Microctroller:	AT89C51RC2
   7          Crystal 			22.1184 MHz
   8          					see ReadMe.C file
   9          ==================================================================
            -=======================*/
  10          #include "chrono32c.h"
  11          #include <intrins.h>
  12          
  13          
  14          //CHRONO32C
  15          unsigned char beepCnt,beepLmt;
  16          
  17          
  18          bit autoprint;
  19          void main(void)
  20          {
  21   1      	Initialize();
  22   1      	while(1)
  23   1      	{
  24   2      		switch (state) 
  25   2      		{
  26   3      			//=============================================================
            -==
  27   3      			//				RST Button
  28   3      			// Here the TDC is reseted, buffer is emptied, READY LDE is on,
            - START, STOP LED are off
  29   3      			//=============================================================
            -==
  30   3      			case RST:
  31   3      				switch(last)
  32   3      				{
  33   4      					case lst_remote:
  34   4      						break;
  35   4      					default:
  36   4      						// Update the Screen
  37   4      						gClear(0);
  38   4      						gDrawRect(14,136,24,146,0);
  39   4      						gGotoXY(0,3);	gPutStr(TITLE);//gPutStr(TITLE);
  40   4      						gGotoXY(3,3);gPutStr("SYSTEM STATUS");
  41   4      						gGotoXY(5,2);gPutStr("Setting= ");gPutStr(mStr);
  42   4      						StopTh1 = ROM_Read(0x7003);
  43   4      						StartTh2 = ROM_Read(0x7004);
  44   4      						gGotoXY(7,2);gPutStr("Start Th= ");
  45   4      						gPutc((StartTh2/10)+48);gPutc('0');
  46   4      					   gGotoXY(8,2);gPutStr("Stop  Th= ");
  47   4      						gPutc((StopTh1/10)+48);gPutc('0');
  48   4      						
  49   4      						gGotoXY(10,2);gPutStr("PRN:");
  50   4      						gPutc((prntCh/10)+48);gPutc((prntCh%10)+48);
  51   4      						gPutStr("  SCN:");
  52   4      						gPutc('0');gPutc(scrn+1+48);
  53   4      						
  54   4      						gGotoXY(12,2);gPutStr("ID :");
  55   4      						gPutc((system/10)+48);gPutc((system%10)+48);
  56   4      						gPutStr("  REF:");
  57   4      						gPutc((jtrCh/10)+48);gPutc((jtrCh%10)+48);
  58   4      						
  59   4      						//Testing
  60   4      						/*
  61   4      						ROM_Write(0x7000,0);
  62   4      						ROM_Write(0x7001,0);
  63   4      						ROM_Write(0x7005,8);
  64   4      	               */
  65   4      						last = lst_reset;
  66   4      						next = sav_n_disp; state = reset_tdc;
  67   4      						rxState = rx_null;
  68   4      						break;
  69   4      				}
  70   3      				break;
  71   3      			case reset_tdc:
  72   3      				// Reset the Variables
  73   3      				LDRDY = 1;
  74   3      				LDSRT = 0;
  75   3      				LDSTP = 0;
  76   3      				qHits = 0;
  77   3        				// Empty the Buffer
  78   3      				//for (p=0;p<32;p++)
  79   3      				//	Interval[p]= 0;
  80   3      				// Enable the Exertnal one Interrupt and Make it Edge Triggere
            -d
  81   3      				EX1 = 1;IT1 = 1;
  82   3      				PX1H = 1; PX1L = 1;
  83   3      				// Send Command to Chrono-32
  84   3      				SelectLines(TDC);
  85   3      				ChronoCmd(RST_GLB);
  86   3      				ChronoCmd(SEL_FPGA1);
  87   3      				//ChronoCmd(TRG_TEST);
  88   3      				SelectLines(PC);
  89   3      				state = update_rtc;
  90   3      				break;
  91   3      			//=============================================================
            -==
  92   3      			//							START TH DAC2	Button	Hit=1
  93   3      			// Show the Start DAC, and Read the Data from TDC
  94   3      			//=============================================================
            -==
  95   3      			case TH1:
  96   3      				switch(last)
  97   3      				{
  98   4      					case lst_reset:
  99   4      						// Update the Screen
 100   4      						gClear(0);
 101   4      						gDrawRect(14,136,24,146,0);
 102   4      						gGotoXY(0,3);	gPutStr(TITLE);
 103   4      						gGotoXY(3,1);gPutStr("THRESHOLD SETTING");
 104   4      						gGotoXY(5,2);gPutStr("Start Channel");
 105   4      						gGotoXY(7,2);gPutStr("Start Th= ");
 106   4      			   		gGotoXY(8,2);gPutStr("Stop  Th= ");			
 107   4      						// Set the Variables
 108   4      						rxState = rx_dac2_frm_uc; //dac2 = 1;
 109   4      		    			rxCnt = 0;FPGA = 0;
 110   4      	   		 		// Send Commands to Chrono-32
 111   4      	   		 		SelectLines(TDC);
 112   4      						ChronoCmd(45+128);
 113   4      						last = lst_dac1;
 114   4      						state = update_rtc;
 115   4      						break;
 116   4      					case lst_dac1:
 117   4      					case lst_dac2:
 118   4      						gGotoXY(5,2);gPutStr("Start Channel");
 119   4      						rxState = rx_dac2_frm_uc;//dac2 = 1;
 120   4      		   		 	rxCnt = 0;FPGA = 0;
 121   4      						// Send Commands to Chrono-32
 122   4      						SelectLines(TDC);
 123   4      						ChronoCmd(INC_DAC2);
 124   4      						ChronoCmd(45+128);
 125   4      						state = update_rtc;
 126   4      						break;
 127   4      				}//switch
 128   3      				break;
 129   3      			//=============================================================
            -==
 130   3      			//							STOP TH DAC1	Button	Hit = 1 
 131   3      			// Show the Stop DAC, and Read the Data from TDC
 132   3      			//=============================================================
            -==
 133   3      			case TH2:
 134   3      				switch(last)
 135   3      				{
 136   4      					case lst_reset:
 137   4      						// Update the Screen
 138   4      						gClear(0);
 139   4      						gDrawRect(14,136,24,146,0);
 140   4      						gGotoXY(0,3);	gPutStr(TITLE);
 141   4      						gGotoXY(3,1);gPutStr("THRESHOLD SETTING");
 142   4      						gGotoXY(5,2);gPutStr("Stop Channels");
 143   4      						gGotoXY(7,2);gPutStr("Start Th= ");
 144   4      			   		gGotoXY(8,2);gPutStr("Stop  Th= ");
 145   4      					   // Send the Variables
 146   4      						rxState = rx_dac1_frm_uc;//dac1 = 1;
 147   4          					rxCnt = 0;FPGA = 0;
 148   4      						// Set Commands to Chrono-32
 149   4      						SelectLines(TDC);
 150   4      						ChronoCmd(44+128);
 151   4      						last = lst_dac2;
 152   4        						state = update_rtc;
 153   4        						break;
 154   4        					case lst_dac1:
 155   4        					case lst_dac2:
 156   4        						gGotoXY(5,2);gPutStr("Stop Channels");
 157   4        						rxState = rx_dac1_frm_uc;//dac1 = 1;
 158   4          					rxCnt = 0;FPGA = 0;
 159   4      						// Send Commands to Chrono-32
 160   4      						SelectLines(TDC);
 161   4      						ChronoCmd(INC_DAC1);
 162   4      						ChronoCmd(44+128);
 163   4      		  				state = update_rtc;
 164   4        						break;
 165   4        				}//switch
 166   3      				break;
 167   3      			//=============================================================
            -==
 168   3      			//				NEXT	Button
 169   3      			// Here the time value; either current or saved ,can be display
            - in decimal formate
 170   3      			// it displays upto one decimal points
 171   3      			//=============================================================
            -==
 172   3      			case NXT:
 173   3      		 		switch(last)
 174   3      		 		{
 175   4       					case lst_reset:
 176   4      				      //scrn = scrn%5;
 177   4      				      gClear(0);
 178   4      		      		gDrawRect(14,136,24,146,0);
 179   4      				      gGotoXY(0,3);	gPutStr(TITLE);
 180   4      						gGotoXY(3,1);gPutStr("SET DEFAULT SCREEN");
 181   4      						gGotoXY(8,2);
 182   4      						gPutStr("Screen No:");
 183   4      						gPutc('0');gPutc(scrn+1+48);
 184   4      		  				last = lst_screen;
 185   4      		  				state = update_rtc;
 186   4      		  				break;
 187   4      		  			case lst_screen:
 188   4      		  				scrn++;
 189   4      				      if(scrn==4)
 190   4      				      	scrn = 0;
 191   4      						gGotoXY(8,12);
 192   4      						gPutc('0');gPutc(scrn+1+48);
 193   4      		  				state = update_rtc;
 194   4      		  				break;
 195   4       					case lst_data:
 196   4      		 			case lst_listing:
 197   4      		 			case lst_calc_jtr:
 198   4      		 			case lst_disp_next:
 199   4      						gClear(0);
 200   4      						gGotoXY(0,3);	gPutStr("CHRONO32 ICCC");
 201   4      						gGotoXY(3,3);gPutStr("CH TIME(ns)");
 202   4      						Display(FPGA++,0);
 203   4      						gDrawRect(14,136,24,146,1);
 204   4      						gGotoXY(2,17);gPutc(FPGA+48);
 205   4      						if (FPGA==4) FPGA=0;
 206   4      						last = lst_disp_next;
 207   4      						state = update_rtc;
 208   4      						break;
 209   4      				}
 210   3      				break;
 211   3      			//=============================================================
            -==
 212   3      			//				CALCULATE JITTER 	Button
 213   3      			// Min was already calculated in main, here it shows the Jitter
            - of each channel
 214   3      			// the Jitter Information can only be printed if this button is
            - pressed
 215   3      			//=============================================================
            -==
 216   3      			case JTR:
 217   3      				switch(last)
 218   3      				{
 219   4      					case lst_data:
 220   4      					case lst_listing:
 221   4      					case lst_calc_jtr:
 222   4      					case lst_disp_next:
 223   4      						gClear(0);
 224   4      						gGotoXY(0,3);	gPutStr(TITLE);
 225   4      						gGotoXY(3,3);gPutStr("CH JITTER(ns)");
 226   4      			 			// Calculate the Default Jitter Value
 227   4         		   		if(jtrCh != 0 && Interval[jtrCh-1]!= -1)
 228   4      		   		   	min = Interval[jtrCh-1];
 229   4      						// Calculate the Jitte Difference
 230   4      						Display(FPGA++,min);
 231   4      						gDrawRect(14,136,24,146,1);
 232   4      						gGotoXY(2,17);gPutc(FPGA+48);
 233   4      						if (FPGA==4) FPGA=0;
 234   4      						last = lst_calc_jtr;
 235   4        						state = update_rtc;
 236   4        						break;
 237   4        				}
 238   3      				break;
 239   3      			//=============================================================
            -==
 240   3      			//				Select JITTER CHANNEL	Button	Hit 1
 241   3      			// Show the Jitter Reference Channel;From 1 to 32
 242   3      			// The Jitter than will be calculated from that channel
 243   3      			//=============================================================
            -==
 244   3      			case REF:
 245   3      				switch(last)
 246   3      				{
 247   4      					case lst_reset:
 248   4      					//case lst_data:
 249   4      					//case lst_listing:
 250   4      				      jtrCh = jtrCh%33;
 251   4      				      gClear(0);
 252   4      		      		gDrawRect(14,136,24,146,0);
 253   4      				      gGotoXY(0,3);	gPutStr(TITLE);
 254   4      						gGotoXY(3,1);gPutStr("SET JITTER CHANNEL");
 255   4      						gGotoXY(8,2);
 256   4      						gPutStr("The Reference");
 257   4      						gGotoXY(9,2);
 258   4      						gPutStr("Channel is:");
 259   4      						gPutc((jtrCh/10)+48);gPutc((jtrCh%10)+48);		
 260   4      		  				last = lst_jtr_ref;
 261   4      		  				state = update_rtc;
 262   4      		  				break;
 263   4      		  			case lst_jtr_ref:
 264   4      		  				jtrCh++;
 265   4      				      jtrCh = jtrCh%33;
 266   4      						gGotoXY(9,13);
 267   4      						gPutc((jtrCh/10)+48);gPutc((jtrCh%10)+48);		
 268   4      		  				state = update_rtc;
 269   4      		  				break;
 270   4      		  		}
 271   3      				break;
 272   3      			//=============================================================
            -==
 273   3      			//				REMOTE Button
 274   3      			//=============================================================
            -==
 275   3      			case RMT:
 276   3      				switch(last)
 277   3      				{
 278   4      				 	case lst_reset:
 279   4      				 	case lst_local:
 280   4      				 		SelectLines(TDC);
 281   4      				 		mStr = "MULTI ";
 282   4      				 		gGotoXY(5,2);gPutStr("Setting= ");gPutStr(mStr);
 283   4      				 		multi = 1;
 284   4      				 		LDRMT = 0;
 285   4      				 		autoprint = 0;
 286   4      				 		last = lst_multi;
 287   4      				 		rxState = rx_data_frm_uc;
 288   4      				 		state = update_rtc;
 289   4      				 		break;
 290   4      				 	case lst_multi:
 291   4      				 		SelectLines(PC);
 292   4      				 		mStr = "REMOTE";
 293   4      				 		gGotoXY(5,2);gPutStr("Setting= ");gPutStr(mStr);
 294   4      				 		multi = 0;
 295   4      				 		LDRMT = 1;
 296   4      				 		autoprint = 0;
 297   4      				 		last = lst_remote;
 298   4      				 		rxState = rx_comd_frm_pc;
 299   4      				 		state = update_rtc;
 300   4      				 		break;
 301   4      				 	case lst_remote:
 302   4      				 		SelectLines(TDC);
 303   4      				 		mStr = "PRINT ";
 304   4      				 		gGotoXY(5,2);gPutStr("Setting= ");gPutStr(mStr);
 305   4      						multi = 0;
 306   4      						LDRMT = 0;
 307   4      						autoprint = 1;
 308   4      						last = lst_autoprint;
 309   4      				 		rxState = rx_data_frm_uc;
 310   4      				 		state = update_rtc;
 311   4      				 		break;
 312   4      				 	case lst_autoprint:
 313   4      				 		SelectLines(TDC);
 314   4      				 		mStr = "SINGLE";
 315   4      				 		gGotoXY(5,2);gPutStr("Setting= ");gPutStr(mStr);
 316   4      				 		autoprint = 0;
 317   4      						last = lst_local;
 318   4      				 		rxState = rx_data_frm_uc;
 319   4      				 		state = update_rtc;
 320   4      				 		break;
 321   4      				}
 322   3      				break;
 323   3      			//=============================================================
            -==
 324   3      			//							CURSOR MOVE	Button 
 325   3      			//=============================================================
            -==
 326   3      			case CUR:
 327   3      				switch(last)
 328   3      				{
 329   4      					case lst_reset:
 330   4      				   	state = idle_state;
 331   4      				    	gClear(0);
 332   4      		   			gDrawRect(14,136,24,146,0);
 333   4      				      gGotoXY(0,3);	gPutStr(TITLE);
 334   4      						gGotoXY(3,3);gPutStr("CLOCK SETTING");
 335   4      	   	 			gGotoXY(8,2);
 336   4      						gPutStr("Setting the  ");
 337   4      						gGotoXY(9,2);
 338   4      						gPutStr("Time and Date");
 339   4      					
 340   4      						gGotoXY(15,1);					
 341   4      						rDisp_Date(time);
 342   4      						gPutc(' ');gPutc(' ');
 343   4      						rDisp_Time(time);
 344   4      				
 345   4      	   			 	DigitKey = (time[3]&0xF0)>>4;// Save last Date Byte
 346   4      	   	 			DigitKey = DigitKey*10 + (time[3]&0x0F);
 347   4      			   	 	CurCol = 1;
 348   4      	   			 	gGotoXY(15,CurCol);
 349   4      	   	 			gPutc('_');gPutc('_');
 350   4      			   	 	last = lst_cur_hit1;
 351   4      	   		 		break;
 352   4      					case lst_cur_hit1:
 353   4      	   			 	time[3] = DigitKey/10;
 354   4      						time[3] = time[3]<<4;
 355   4      			   	 	time[3] = time[3] + (DigitKey%10); // Update Month byte
 356   4      
 357   4      	   			 	gGotoXY(15,CurCol);
 358   4      	   	 			gPutc(((time[3]&0xF0)>>4)+48);
 359   4      						gPutc((time[3]&0x0F)+48);
 360   4      
 361   4      	   			 	DigitKey = (time[4]&0xF0)>>4;// Save last Month Byte
 362   4      	   	 			DigitKey = DigitKey*10 + (time[4]&0x0F);
 363   4      			    		CurCol = 4;
 364   4      	   		 		gGotoXY(15,CurCol);
 365   4      	    				gPutc('_');gPutc('_');
 366   4      			    		last = lst_cur_hit2;
 367   4      	   			 	state = idle_state;
 368   4      	    				break;
 369   4      				  	case lst_cur_hit2:
 370   4      	   				time[4] = DigitKey/10;
 371   4      						time[4] = time[4]<<4;
 372   4      			   		time[4] = time[4] + (DigitKey%10); // Update Month byte
 373   4      	   	 		
 374   4      	   				gGotoXY(15,CurCol);
 375   4      	   				gPutc(((time[4]&0xF0)>>4)+48);
 376   4      						gPutc((time[4]&0x0F)+48);
 377   4      
 378   4      	   		 		DigitKey = (time[6]&0xF0)>>4;// Save last Year Byte
 379   4      	   				DigitKey = DigitKey*10 + (time[6]&0x0F);
 380   4      			   		CurCol = 7;
 381   4      	   		 		gGotoXY(15,CurCol);
 382   4      	    				gPutc('_');gPutc('_');
 383   4      			    		last = lst_cur_hit3;
 384   4      	   			 	state = idle_state;
 385   4      	    				break;
 386   4      			    	case lst_cur_hit3:
 387   4      		    			time[6] = DigitKey/10;
 388   4      						time[6] = time[6]<<4;
 389   4         	 				time[6] = time[6] + (DigitKey%10); // Update Month byte
 390   4         	 		
 391   4      		   	 		gGotoXY(15,CurCol);
 392   4         			 		gPutc(((time[6]&0xF0)>>4)+48);
 393   4      						gPutc((time[6]&0x0F)+48);
 394   4      		    			DigitKey = (time[2]&0xF0)>>4;// Save last Hour Byte
 395   4         			 		DigitKey = DigitKey*10 + (time[2]&0x0F);
 396   4         	 				CurCol = 11;
 397   4      		    			gGotoXY(15,CurCol);
 398   4          					gPutc('_');gPutc('_');
 399   4          					last = lst_cur_hit4;
 400   4      		   	 		state = idle_state;
 401   4          					break;
 402   4      		    		case lst_cur_hit4:
 403   4         			 		time[2] = DigitKey/10;
 404   4      						time[2] = time[2]<<4;
 405   4      		   	 		time[2] = time[2] + (DigitKey%10); // Update Month byte
 406   4         	 		
 407   4         			 		gGotoXY(15,CurCol);
 408   4         	 				gPutc(((time[2]&0xF0)>>4)+48);
 409   4      						gPutc((time[2]&0x0F)+48);
 410   4          					DigitKey = (time[1]&0xF0)>>4;// Save last Minute Byte
 411   4      	  	 				DigitKey = DigitKey*10 + (time[1]&0x0F);
 412   4      			  	 		CurCol = 14;
 413   4      	  					gGotoXY(15,CurCol);
 414   4      	  					gPutc('_');gPutc('_');
 415   4      			  			last = lst_cur_hit5;
 416   4      	  			 		state = idle_state;
 417   4      	 					break;
 418   4      			    	case lst_cur_hit5:
 419   4      	  			 		time[1] = DigitKey/10;
 420   4      						time[1] = time[1]<<4;
 421   4      			  	 		time[1] = time[1] + (DigitKey%10); // Update Month byte
 422   4      	  	 		
 423   4      	  			 		gGotoXY(15,CurCol);
 424   4      	  	 				gPutc(((time[1]&0xF0)>>4)+48);
 425   4      						gPutc((time[1]&0x0F)+48);
 426   4          					DigitKey = (time[0]&0xF0)>>4;// Save last Second Byte
 427   4      		   	 		DigitKey = DigitKey*10 + (time[0]&0x0F);
 428   4         			 		CurCol = 17;
 429   4      		    			gGotoXY(15,CurCol);
 430   4          					gPutc('_');gPutc('_');
 431   4      		    			last = lst_cur_hit6;
 432   4         			 		state = idle_state;
 433   4          					break;
 434   4      			    	case lst_cur_hit6:
 435   4         			 		time[0] = DigitKey/10;
 436   4      						time[0] = time[0]<<4;
 437   4      		   	 		time[0] = time[0] + (DigitKey%10); // Update Month byte
 438   4        	 		
 439   4      		   	 		gGotoXY(15,CurCol);
 440   4         			 		gPutc(((time[0]&0xF0)>>4)+48);
 441   4      						gPutc((time[0]&0x0F)+48);
 442   4      		   	 		// Write to The RTC
 443   4      		   	 		/*
 444   4      		   	 		time[0] = 0x00;
 445   4      		   	 		time[1] = 0x00;
 446   4      		   	 		time[2] = 0x00;
 447   4      		   	 		time[3] = 0x00;
 448   4      		   	 		time[4] = 0x00;
 449   4      		   	 		time[5] = 0x00;
 450   4      		   	 		time[6] = 0x00;
 451   4      		   	 		*/
 452   4         			 		rWriteClk(0x8E,0x00); //Disable Write Protect
 453   4      						rWriteClk(0x80,time[0]); //Set Scs
 454   4      						rWriteClk(0x82,time[1]); //Set Minutes
 455   4      						rWriteClk(0x84,time[2]); //Set Hours
 456   4      						rWriteClk(0x86,time[3]); //Set Date
 457   4      						rWriteClk(0x88,time[4]); //Set Month
 458   4      						rWriteClk(0x8A,0x03); //Set Day
 459   4      						rWriteClk(0x8C,time[6]); //Set Year
 460   4      						rWriteClk(0x8E,0x80); //Enalble Write Protect
 461   4      				
 462   4          					gGotoXY(7,2);
 463   4      						gPutStr("Time and Date");
 464   4      						gGotoXY(8,2);
 465   4      						gPutStr("has Changed  ");
 466   4          					gGotoXY(9,2);
 467   4      						gPutStr("               ");
 468   4      						gGotoXY(10,2);
 469   4      						gPutStr("Press RST to");
 470   4      						gGotoXY(11,2);
 471   4      						gPutStr("continue");
 472   4      						last = lst_cur_hit7;
 473   4         	 				state = update_rtc;
 474   4      		    			break;
 475   4      		    }
 476   3      		    break;
 477   3          		//==========================================================
            -=====
 478   3      			//							Digit Increment
 479   3      			//=============================================================
            -==
 480   3          		case INC: 
 481   3          			switch(last)
 482   3          			{
 483   4          				case lst_cur_hit1:
 484   4      				   	DigitKey++;
 485   4      	   		 		if (DigitKey==32) DigitKey=1;	// Date
 486   4      	    				gGotoXY(15,CurCol);
 487   4      						gPutc((DigitKey/10)+48);
 488   4      						gPutc((DigitKey%10)+48);
 489   4      						state = idle_state;
 490   4      						break;
 491   4      		    		case lst_cur_hit2: 
 492   4      	   		 		DigitKey++;
 493   4      	    				if (DigitKey==13) DigitKey=1;	// Month
 494   4      			    		gGotoXY(15,CurCol);
 495   4      						gPutc((DigitKey/10)+48);
 496   4      						gPutc((DigitKey%10)+48);
 497   4      						state = idle_state;
 498   4      						break;
 499   4      		    		case lst_cur_hit3: 
 500   4      	   		 		DigitKey++;
 501   4      	    				if (DigitKey==100) DigitKey=0; // Year
 502   4      			    		gGotoXY(15,CurCol);
 503   4      						gPutc((DigitKey/10)+48);
 504   4      						gPutc((DigitKey%10)+48);
 505   4      						state = idle_state;
 506   4      						break;
 507   4      		    		case lst_cur_hit4: 
 508   4      	   		 		DigitKey++;
 509   4      	    				if (DigitKey==24) DigitKey=0;	// Hour
 510   4      			    		gGotoXY(15,CurCol);
 511   4      						gPutc((DigitKey/10)+48);
 512   4      						gPutc((DigitKey%10)+48);
 513   4      						state = idle_state;
 514   4      						break;
 515   4      		    		case lst_cur_hit5: 
 516   4      	   		 		DigitKey++;
 517   4      	    				if (DigitKey==60) DigitKey=0;	// Minute
 518   4      			    		gGotoXY(15,CurCol);
 519   4      						gPutc((DigitKey/10)+48);
 520   4      						gPutc((DigitKey%10)+48);
 521   4      						state = idle_state;
 522   4      						break;
 523   4      		    		case lst_cur_hit6: 
 524   4      	   		 		DigitKey++;
 525   4      	    				if (DigitKey==60) DigitKey=0;  // Second
 526   4      			    		gGotoXY(15,CurCol);
 527   4      						gPutc((DigitKey/10)+48);
 528   4      						gPutc((DigitKey%10)+48);
 529   4      						state = idle_state;
 530   4      						break;
 531   4      			}
 532   3      			break;
 533   3      			//=============================================================
            -==
 534   3      			//							LIST	Button				
 535   3      			//=============================================================
            -==
 536   3      			case LST:
 537   3      				switch(last)
 538   3      				{
 539   4      					case lst_reset:
 540   4      					case lst_listing:
 541   4      						// Updating the Screen
 542   4      						state = idle_state;
 543   4      						gClear(0);
 544   4      						gDrawRect(14,136,24,146,0);
 545   4      						gGotoXY(0,3);	gPutStr(TITLE);
 546   4      						gGotoXY(3,3);gPutStr("STORED RECORDS");
 547   4      						FPGA = 0;
 548   4      						//Get the Number of Reading, one by one		
 549   4      						qReadings = ROM_Read(0x7000);
 550   4      						qRear = ROM_Read(0x7001)-1;
 551   4      						// Check for No of Readings
 552   4      						if (!qReadings)
 553   4      						{
 554   5      						 	gGotoXY(8,2);
 555   5      						 	gPutStr("No Records");
 556   5      						 	
 557   5      						 	gGotoXY(10,2);
 558   5      							gPutStr("Press RST to");
 559   5      							gGotoXY(11,2);
 560   5      							gPutStr("continue");
 561   5      						}
 562   4      						else// There is a reading
 563   4      						{
 564   5      							gGotoXY(6,2);
 565   5      							gPutStr("Plz Wait...");
 566   5      							gGotoXY(6,2);
 567   5      							if ((qRear-qHits)<0)
 568   5      								qPtr = READINGS + qRear - qHits;
 569   5      							else
 570   5      								qPtr = qRear -qHits;
 571   5      							// Fetch the saved data into buffer
 572   5      							for(p=0;p<32;p++)
 573   5      							{
 574   6      								Interval[p]= (long)ROM_Read(512*qPtr+4*p+3);
 575   6      								Interval[p]= (Interval[p]<<8) + (long)ROM_Read(512*qPtr+4*
            -p+2);
 576   6      								Interval[p]= (Interval[p]<<8) + (long)ROM_Read(512*qPtr+4*
            -p+1);
 577   6      								Interval[p]= (Interval[p]<<8) + (long)ROM_Read(512*qPtr+4*
            -p+0);
 578   6      							}
 579   5      							
 580   5      							StopTh1 = ROM_Read(512*qPtr+384);
 581   5      					 		StartTh2 = ROM_Read(512*qPtr+385);
 582   5      			 				for(p=0;p<8;p++)
 583   5      			 					tSave [p] = ROM_Read(512*qPtr+p+386);
 584   5      			 		
 585   5      					 		min = (long)ROM_Read(512*qPtr+396);
 586   5      							min = (min<<8) + (long)ROM_Read(512*qPtr+395);
 587   5      							min = (min<<8) + (long)ROM_Read(512*qPtr+394);
 588   5      							min = (min<<8) + (long)ROM_Read(512*qPtr+393);
 589   5      					
 590   5      							max = (long)ROM_Read(512*qPtr+400);
 591   5      							max = (max<<8) + (long)ROM_Read(512*qPtr+399);
 592   5      							max = (max<<8) + (long)ROM_Read(512*qPtr+398);
 593   5      							max = (max<<8) + (long)ROM_Read(512*qPtr+397);
 594   5      								
 595   5      				      	// Counting Hit on the Key
 596   5      							qHits++;
 597   5      							gPutStr("Record No. ");
 598   5      							gPutc((qHits/10)+48);
 599   5      							gPutc((qHits%10)+48);
 600   5      						   // Roll over if scrolling is done
 601   5      							if(qHits==qReadings)
 602   5      								qHits=0;
 603   5      							// Display the Date and Time
 604   5      							gGotoXY(8,2);gPutStr("Time:");
 605   5      							rDisp_Time(tSave);
 606   5      							gGotoXY(9,2);gPutStr("Date:");
 607   5      							rDisp_Date(tSave);
 608   5      							
 609   5      							gGotoXY(11,2);
 610   5      							gPutStr("Press NXT for");
 611   5      							gGotoXY(12,2);
 612   5      							gPutStr("details");
 613   5      							last = lst_listing;
 614   5         					}// End There is a reading
 615   4      		  				state = update_rtc;
 616   4      						break;
 617   4      					default:
 618   4      						break;
 619   4      				}//switch
 620   3      				break;
 621   3      			//=============================================================
            -==
 622   3      			//							RS232 INTERFACE TO PC	Button	
 623   3      			//=============================================================
            -==
 624   3      			case RS232:
 625   3      				switch(last)
 626   3      				{
 627   4      					case lst_data:
 628   4      					case lst_listing:
 629   4        					case lst_disp_next: //Added
 630   4        					case lst_calc_jtr: // Added
 631   4      						LDRMT = 1;
 632   4      						SelectLines(PC);
 633   4      						Delay5ms();
 634   4      						SendFormatedData();
 635   4      						SelectLines(TDC);
 636   4      						LDRMT = 0;
 637   4      						break;
 638   4      				}
 639   3      				state = update_rtc;
 640   3      				break;
 641   3      			//=============================================================
            -==
 642   3      			//							START/STOP PRINT	Button	
 643   3      			//=============================================================
            -==
 644   3      			case PRN:
 645   3      		  		// BLACK PRINTER
 646   3      		  		switch(last)
 647   3      				{
 648   4      					case lst_reset:
 649   4      				      //prntCh = prntCh%33;
 650   4      				      gClear(0);
 651   4      		      		gDrawRect(14,136,24,146,0);
 652   4      				      gGotoXY(0,3);	gPutStr(TITLE);
 653   4      						gGotoXY(3,1);gPutStr("SET PRINT CHANNELS");
 654   4      						gGotoXY(8,2);
 655   4      						gPutStr("Channels:");
 656   4      						gPutc((prntCh/10)+48);gPutc((prntCh%10)+48);		
 657   4      		  				last = lst_print_chan;
 658   4      		  				state = update_rtc;
 659   4      		  				break;
 660   4      		  			case lst_print_chan:
 661   4      		  				prntCh =prntCh+2;
 662   4      		  				if(prntCh==34)
 663   4      		  					prntCh = 2;
 664   4      				      //prntCh = prntCh%33;
 665   4      						gGotoXY(8,11);
 666   4      						gPutc((prntCh/10)+48);gPutc((prntCh%10)+48);		
 667   4      		  				state = update_rtc;
 668   4      		  				break;
 669   4      		  				
 670   4      					case lst_listing:
 671   4      					case lst_data:
 672   4      					case lst_disp_next:
 673   4      					//case lst_printing:
 674   4      						EX1 = 0;
 675   4      						gClear(0);
 676   4      						gDrawRect(14,136,24,146,0);
 677   4      						gGotoXY(0,3);	gPutStr(TITLE);
 678   4      						gGotoXY(3,4);gPutStr("PRINT STATUS");
 679   4      							//Enable PRINTER Serial Communication
 680   4      							SelectLines(PRINTER);
 681   4      							gGotoXY(6,2);gPutStr("Printing the");
 682   4      	   					gGotoXY(7,2);gPutStr("Channel No. 00");
 683   4      			   			gGotoXY(9,2);gPutStr("Press PRN to");
 684   4      	   					gGotoXY(10,2);gPutStr("Stop Printing");
 685   4      							// Start the text to print 
 686   4      							// hieghtx2, widthx2 Black Printer
 687   4      							PrintChar(0x1B);PrintChar(0x0C);
 688   4      				   		PrintString("   ");
 689   4      				   		PrintString(TITLE);
 690   4      				   		PrintChar('\n');
 691   4      				   		PrintChar('\n');
 692   4      							// Print System ID
 693   4      							PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 694   4      							PrintString("  System ID: ");
 695   4      							PrintChar((system/10)+48);
 696   4      							PrintChar((system%10)+48);
 697   4      							PrintChar('\n');PrintChar('\n');
 698   4      							
 699   4      						 	for(p=0;p<prntCh;p++)
 700   4      				 			{     	
 701   5      			 					gGotoXY(7,14);
 702   5      					 			gPutc(((p+1)/10)+48);
 703   5         							gPutc(((p+1)%10)+48);
 704   5      								PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 705   5      								Print(p,0);
 706   5      						 	}
 707   4      						 	// Print Jitter Information
 708   4      						 	DelayHalfSec();
 709   4      				 			PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 710   4      				 			PrintString("Jitter  = ");
 711   4      				 			PrintChar(0xF1);
 712   4      		 					EstJtr = max-min;
 713   4      		 					LongToAscii(EstJtr/2,0);
 714   4      				 			EstJtr = (EstJtr%2)*10;
 715   4      				 			PrintChar('.');
 716   4      		 					PrintChar((EstJtr/2)+48);
 717   4      				 			PrintChar('\n');
 718   4      				 			
 719   4      						 	// Print Thresholds
 720   4      						 	PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 721   4      						 	PrintString("StartTH = ");
 722   4      					  		PrintChar((StartTh2/10)+48);PrintChar('0');
 723   4      					  		PrintChar('\n');
 724   4      	  						PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer

            - 725   4      	  						PrintString("StopTH  = ");
 726   4      			  				PrintChar((StopTh1/10)+48);PrintChar('0');
 727   4      							PrintChar('\n');
 728   4      							PrintChar('\n');
 729   4      							//Print Date and time of Experiment
 730   4      						 	PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 731   4      						 	PrintString("Expr: Time.\n");
 732   4      						 	rPrint_Time(tSave);
 733   4      	 						//Print Date and time of Printing
 734   4      			 				PrintChar('\n');
 735   4      						 	PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 736   4      						 	PrintString("Print: Time.\n");
 737   4      						 	DelayHalfSec();
 738   4      						 	rPrint_Time(time);
 739   4      						 	PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 740   4      						 	PrintString("\n          -**-\n\n\n");
 741   4      							Delay25ms();	// For Select Lines
 742   4      							//Enable FPGAs Serial Communication
 743   4      							SelectLines(TDC);
 744   4      
 745   4      							//if(p==32)
 746   4      							//{
 747   4      	   						gGotoXY(8,2);gPutStr("                ");
 748   4      			   				gGotoXY(6,2);gPutStr("The Printing");
 749   4      			   				gGotoXY(7,2);gPutStr("has Completed ");
 750   4      			   				gGotoXY(9,2);gPutStr("Press PRN to");
 751   4      			   				gGotoXY(10,2);gPutStr("Print Again  ");
 752   4      			   			//}
 753   4      		  				state = update_rtc;
 754   4      		  				break;
 755   4      		  			case lst_calc_jtr:
 756   4      		  				gClear(0);
 757   4      						gDrawRect(14,136,24,146,0);
 758   4      						gGotoXY(0,3);	gPutStr(TITLE);
 759   4      						gGotoXY(3,4);gPutStr("PRINT STATUS");
 760   4      						//Enable PRINTER Serial Communication
 761   4      						SelectLines(PRINTER);
 762   4      						gGotoXY(6,2);gPutStr("Printing the");
 763   4         					gGotoXY(7,2);gPutStr("Channel No. 00");
 764   4      		   			gGotoXY(9,2);gPutStr("Press PRN to");
 765   4         					gGotoXY(10,2);gPutStr("Stop Printing");
 766   4      						// Start the text to print 
 767   4      						PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 768   4      						PrintString("   JITTER (ns)\n");
 769   4      						// Print System ID
 770   4      						PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 771   4      						PrintString("  System ID: ");
 772   4      						PrintChar((system/10)+48);PrintChar((system%10)+48);
 773   4      						PrintChar('\n');PrintChar('\n');
 774   4      					 	for(p=0;p<prntCh;p++)
 775   4      			 			{     	
 776   5      		 					gGotoXY(7,14);
 777   5      				 			gPutc(((p+1)/10)+48);
 778   5        							gPutc(((p+1)%10)+48);
 779   5      							PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 780   5      							Print(p,min);
 781   5      					 	}
 782   4      					 	DelayHalfSec();
 783   4      			 			PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 784   4      			 			PrintString("Jitter  = ");
 785   4      			 			PrintChar(0xF1);
 786   4      	 					EstJtr = max-min;
 787   4      	 					LongToAscii(EstJtr/2,0);
 788   4      			 			EstJtr = (EstJtr%2)*10;
 789   4      			 			PrintChar('.');
 790   4      	 					PrintChar((EstJtr/2)+48);
 791   4      			 			PrintChar('\n');
 792   4      					 	PrintChar(0x1B);PrintChar(0x04); //widthx2 Black Printer
 793   4      					 	PrintString("\n          -**-\n\n\n");
 794   4      						Delay25ms();	// For Select Lines
 795   4      						//Enable FPGAs Serial Communication
 796   4      						SelectLines(TDC);
 797   4      						//if(p==32)
 798   4      						//{
 799   4         						gGotoXY(8,2);gPutStr("                ");
 800   4      		   				gGotoXY(6,2);gPutStr("The Printing");
 801   4      		   				gGotoXY(7,2);gPutStr("has Completed ");
 802   4      		   				gGotoXY(9,2);gPutStr("Press PRN to");
 803   4      		   				gGotoXY(10,2);gPutStr("Print Again  ");
 804   4      		   			//}
 805   4      		  				last = lst_data;
 806   4      		  				state = update_rtc;
 807   4      		  				break;
 808   4      		  		}
 809   3      				break;
 810   3      			//=============================================================
            -==
 811   3      		 	// Check the External Interrupt (Start or Stop Pulse)
 812   3      			//=============================================================
            -==
 813   3      			case tdc_trigrd:
 814   3      		 	 	LDRDY = 0;
 815   3      		 	 	EX1 = 0;//9.5.13
 816   3      		 	 	// Save the time of Occurance of pulse
 817   3      			 	for (p=0;p<8;p++)
 818   3      		 	 		tSave[p] = time[p];
 819   3      		 	 	// Waite for 1 sec; to be save side (Max Time of TDC 671.088
            -64)
 820   3      		 	 	// Interrupt at Start/Stop
 821   3      	 	 		//for(p=0;p<40;p++)
 822   3      	 	 		//	Delay25ms();
 823   3      	 	 		// Interrupt at Counter Overflow
 824   3      	 	 		for(p=0;p<8;p++)
 825   3      	 	 			Delay25ms();
 826   3            	   // Read the data from CHRONO32
 827   3            	   SelectLines(TDC);
 828   3        				rxState = rx_data_frm_uc;
 829   3        				// Reset the Variable
 830   3      				FPGA = 0;
 831   3      				rxCnt = 0;
 832   3      				AllStops = 0;
 833   3      				min = 2147483647;	//0x7FFFFFFF;
 834   3      				max = -2147483648;//0x80000000;
 835   3      		 		FPGA = 0;
 836   3      		 		
 837   3      		 		//CHRONO32C
 838   3      	         BEEP = 1; 
 839   3      	         beepCnt = 0;
 840   3      	         beepLmt = 20;	
 841   3      	         
 842   3      		 		ChronoCmd(SEL_FPGA1);
 843   3      				ChronoCmd(128); 	 	
 844   3      				state = update_rtc;
 845   3      				break;
 846   3      			//=============================================================
            -==
 847   3      		 	// Select the next FPGA (2nd) and Start Reading 
 848   3      			//=============================================================
            -==
 849   3      		 	case calc_fpga0:
 850   3      			 	FPGA = 1;
 851   3      			 	Calculate(0);
 852   3      			 	ChronoCmd(SEL_FPGA2);
 853   3      			 	ChronoCmd(128);
 854   3      			 	state = update_rtc;
 855   3      			 	break;
 856   3      			//=============================================================
            -==
 857   3      		 	// Select the next FPGA (3rd) and Start Reading 
 858   3      			//=============================================================
            -==
 859   3      			 case calc_fpga1:
 860   3      			 	FPGA = 2;
 861   3      			 	Calculate(1);
 862   3      			 	ChronoCmd(SEL_FPGA3);
 863   3      			 	ChronoCmd(128);
 864   3      			 	state = update_rtc;
 865   3      			 	break;
 866   3      			//=============================================================
            -==
 867   3      		 	// Select the next FPGA (4th) and Start Reading 
 868   3      			//=============================================================
            -==
 869   3      			 case calc_fpga2:
 870   3      			 	FPGA = 3;
 871   3      		 		Calculate(2);
 872   3      			 	ChronoCmd(SEL_FPGA4);
 873   3      			 	ChronoCmd(128);
 874   3      			 	state = update_rtc;
 875   3      			 	break;
 876   3      			//=============================================================
            -==
 877   3      		 	// Differnetiate Between the Actual Triggering and Self Trigge
            -ring
 878   3      			//=============================================================
            -==
 879   3      			 case calc_fpga3:
 880   3      			 	//FPGA = 0;
 881   3      			 	FPGA = scrn;
 882   3      				Calculate(3);
 883   3      			 	state = next;
 884   3      			 	break;
 885   3      			//=============================================================
            -==
 886   3      		 	// After Start/Stop Pulse has occured, and 256 bytes are read 
            -from
 887   3      		 	// all the FPGA's, now save all the bytes and display the firs
            -t 8 channels,
 888   3      		 	// without saving
 889   3      			//=============================================================
            -==
 890   3      			 case sav_n_disp:
 891   3      			 	// Save the Results First
 892   3      			 	qReadings = ROM_Read(0x7000);
 893   3       				qRear = ROM_Read(0x7001);
 894   3      				//Write the buffered values and time into EEPROM
 895   3      				ROM_WritePage(512*qRear);
 896   3      				// Update Pointers
 897   3      				qRear++;
 898   3      				if(qRear==10)	qRear = 0;
 899   3      		 		if (qReadings<10)	qReadings++;
 900   3      		 		ROM_Write(0x7000,qReadings);
 901   3      	 			ROM_Write(0x7001,qRear);
 902   3      				// Display the Results Now
 903   3      				last = lst_data;
 904   3      			 	gClear(0);
 905   3      				gGotoXY(0,3);	gPutStr(TITLE);
 906   3      				gGotoXY(3,3);gPutStr("CH TIME(ns)");
 907   3      				gGotoXY(2,17);gPutc(FPGA+49);
 908   3      				gDrawRect(14,136,24,146,1);
 909   3      				Display(FPGA++,0);
 910   3      				if (FPGA==4) FPGA=0;
 911   3      				qHits = 0;
 912   3      				state = update_rtc;
 913   3      				if(multi) state = reset_tdc;
 914   3      				///
 915   3      				if (autoprint == 1)
 916   3      					state = PRN;
 917   3      				///
 918   3          			break;
 919   3      			//=============================================================
            -==
 920   3      		 	// After Self Testing Pulses has occured, and 256 bytes are re
            -ad from
 921   3      		 	// all the FPGA's, now analyse the channels and display result
            -
 922   3      			//=============================================================
            -==
 923   3          		case test_reslt:
 924   3          			gClear(0);
 925   3      				gGotoXY(0,3);	gPutStr(TITLE);
 926   3      				gGotoXY(3,6);gPutStr("SELF TEST");
 927   3      				gGotoXY(6,2);
 928   3      				AllStops = 1;
 929   3      				for(p=0;p<32;p++)
 930   3      				{
 931   4      					// Uncontrolled Counter (Runnig Always)
 932   4      					//if(Interval[p] == 0 || Interval[p] == -1)
 933   4      					//AllStops = 0;
 934   4      					// Controlled Counter (Runnig Till 0x1000000)
 935   4      					if((Interval[p]>16003) || (Interval[p]<15997))
 936   4      					AllStops = 0;
 937   4      				}
 938   3      				if((LDSRT)&&(AllStops))
 939   3      				{
 940   4      					gPutStr("Self Test Passed");
 941   4      					gGotoXY(9,2);
 942   4      					gPutStr("Press NXT for");
 943   4      					gGotoXY(10,2);
 944   4      					gPutStr("Details");
 945   4      				}
 946   3      				else
 947   3      				{
 948   4      					gPutStr("Self Test Failed");
 949   4      					gGotoXY(9,2);
 950   4      					gPutStr("Press NXT for");
 951   4      					gGotoXY(10,2);
 952   4      					gPutStr("Details");
 953   4      				}
 954   3      				// Initial Screen After Self Test
 955   3      				// Start Keyboard Interrupt
 956   3      				EX0  	= 1;
 957   3      				// Offset Values Chrono32b
 958   3      				/*offset[0]=1;	offset[1]=2;	offset[2]=2;	offset[3]=2;	offset[4
            -]=1;	offset[5]=1;	offset[6]=1;	offset[7]=1;
 959   3      				offset[8]=12;	offset[9]=12;	offset[10]=13;	offset[11]=13;	offs
            -et[12]=12;	offset[13]=12;	offset[14]=12;	offset[15]=12;
 960   3      				offset[16]=12;	offset[17]=13;	offset[18]=13;	offset[19]=13;	of
            -fset[20]=13;	offset[21]=12;	offset[22]=12;	offset[23]=12;
 961   3      				offset[24]=22;	offset[25]=24;	offset[26]=24;	offset[27]=26;	of
            -fset[28]=20;	offset[29]=25;	offset[30]=22;	offset[31]=22;
 962   3      				*/
 963   3      				// Offset Values Chrono32C
 964   3      				offset[0]=1;	offset[1]=2;	offset[2]=2;	offset[3]=3;	offset[4]=
            -5;	offset[5]=3;	offset[6]=3;	offset[7]=1;
 965   3      				offset[8]=13;	offset[9]=13;	offset[10]=13;	offset[11]=13;	offs
            -et[12]=14;	offset[13]=13;	offset[14]=13;	offset[15]=13;
 966   3      				offset[16]=17;	offset[17]=17;	offset[18]=18;	offset[19]=19;	of
            -fset[20]=19;	offset[21]=18;	offset[22]=17;	offset[23]=18;
 967   3      				offset[24]=28;	offset[25]=29;	offset[26]=29;	offset[27]=29;	of
            -fset[28]=28;	offset[29]=29;	offset[30]=28;	offset[31]=29;
 968   3      				
 969   3      				// ReCall the Saved Values
 970   3      				StopTh1 = ROM_Read(0x7003);
 971   3      				StartTh2 = ROM_Read(0x7004);
 972   3      				for(p=10;p<=StopTh1;p=p+10)
 973   3      					ChronoCmd(INC_DAC1);
 974   3      				for(p=10;p<=StartTh2;p=p+10)
 975   3      					ChronoCmd(INC_DAC2);
 976   3                  last = lst_data;//lst_testing;
 977   3      				state = update_rtc;
 978   3      				break;
 979   3      			case pc_send_data:
 980   3      				//SelectLines(PC);
 981   3      				SEL1 = 0; SEL0 = 1;
 982   3      				Delay5ms();
 983   3      				SendFormatedData();
 984   3      				//
 985   3      				// Send Command to Chrono-32
 986   3      				SelectLines(TDC);
 987   3      				Delay5ms();
 988   3      				ChronoCmd(SEL_FPGA1);
 989   3      				SelectLines(PC);
 990   3      				//
 991   3      				//SelectLines(PC);
 992   3      				SEL1 = 0; SEL0 = 1;
 993   3      				rxState = rx_comd_frm_pc;
 994   3      				state = update_rtc;
 995   3      				break;
 996   3      			case pc_inc_dac1:
 997   3       		 		LDRDY = 0;
 998   3       		 		rxState = rx_dac1_frm_pc;
 999   3         		 	rxCnt = 0;FPGA = 0;
1000   3      				// Send Commands to Chrono-32
1001   3      				SelectLines(TDC);
1002   3      				ChronoCmd(INC_DAC1);
1003   3      				ChronoCmd(44+128);
1004   3      				state = update_rtc;
1005   3      				break;
1006   3      			case pc_send_dac1:
1007   3      				SelectLines(PC);
1008   3      				PrintChar(StopTh1);
1009   3      				rxState = rx_comd_frm_pc;
1010   3      				state = update_rtc;
1011   3      				break;
1012   3      			case pc_inc_dac2:
1013   3      				LDRDY = 0;
1014   3       		 		rxState = rx_dac2_frm_pc;
1015   3         		 	rxCnt = 0;FPGA = 0;
1016   3      				// Send Commands to Chrono-32
1017   3      				SelectLines(TDC);
1018   3      				ChronoCmd(INC_DAC2);
1019   3      				ChronoCmd(45+128);
1020   3      				state = update_rtc;
1021   3      				break;
1022   3      			case pc_send_dac2:
1023   3      				SelectLines(PC);
1024   3      				PrintChar(StartTh2);
1025   3      				rxState = rx_comd_frm_pc;
1026   3      				state = update_rtc;
1027   3      				break;
1028   3      			case pc_chng_id:
1029   3      				LDRDY = 0;
1030   3      				// Send Commands to Chrono-32
1031   3      				SelectLines(TDC);
1032   3      				ChronoCmd(RST_DAC);
1033   3      				state = update_rtc;
1034   3      				break;
1035   3      			case pc_send_dacs:
1036   3      				SendChar('@');Delay25ms();
1037   3      				SendChar('@');Delay25ms();
1038   3      				SendChar(StopTh1);Delay25ms();
1039   3      				SendChar(StartTh2);
1040   3      				state = update_rtc;
1041   3      				break;
1042   3      			//=============================================================
            -==
1043   3      		 	// Idle State	1
1044   3      			//=============================================================
            -==
1045   3      			case idle_state:
1046   3      				break;
1047   3      			//=============================================================
            -==
1048   3      		 	// Idle State	2: Updating time from RTC
1049   3      			//=============================================================
            -==
1050   3      			case update_rtc:	
1051   3      			 	rBrstReadClk(time);
1052   3       				gGotoXY(15,1);					
1053   3      				rDisp_Date(time);
1054   3      				gPutc(' ');gPutc(' ');
1055   3      				rDisp_Time(time);
1056   3      				break;
1057   3      		}//Endswitch
1058   2      	}//End while(1)
1059   1      }
1060          
1061          //====== 		I N T E R R U P T     S E R V I C E    R O U T I N E S	
            -		=======
1062          
1063          //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            -1064          //External interrupt 0 used for 4x3 keypad thru 74HC9
            -22 encoder
1065          
1066          //CHRONO32C
1067          void KeyInt() interrupt 0 
1068          {
1069   1      	// External Interrupt 0 Has Occured, key pressed?
1070   1      	if(isInit)
1071   1      	{
1072   2      	kBus = 0xFF;	// Make Input
1073   2      	gCE = 1;			// Disable GLCD
1074   2      	_nop_();
1075   2      	kCE = 0;			// Enable Key Pad
1076   2      	_nop_();	
1077   2      	Key = kBus&0xF0;	// Read Keypad Bus
1078   2      	_nop_();
1079   2      	kCE = 1;			// Disable Key Pad
1080   2      	_nop_();
1081   2      	gCE = 0;			// Enable GLCD
1082   2      	_nop_();	
1083   2      	BEEP=1;
1084   2         beepCnt = 0;
1085   2         beepLmt = 3;
1086   2      	Key = Key>>4;
1087   2      	LDRDY = 0;
1088   2      	state = Key;
1089   2      	}
1090   1      }
1091          
1092          /*
1093          //CHRONO32B
1094          void KeyInt() interrupt 0 
1095          {
1096          	// External Interrupt 0 Has Occured, key pressed?
1097          	if(isInit)
1098          	{
1099          	Key = kBus&0x0F;	// Read Keypad Bus
1100          	LDRDY = 0;
1101          	state = Key;
1102          	}
1103          }
1104          */
1105          //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            -1106          //External interrupt 1 used to detect the occurance o
            -f START pulse
1107          void StartInt() interrupt 2 
1108          {
1109   1      	// External interrupt 1 has occured
1110   1      	// That is startpulse has occured
1111   1      	state = tdc_trigrd;
1112   1      }
1113          
1114          //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

            -1115          //Serial port interrupt, used for only recieve interr
            -upt.
1116          void Serial() interrupt 4
1117          {
1118   1      	if (RI)
1119   1      	{
1120   2        		RI = 0;
1121   2        		rxChr = SBUF;
1122   2      		switch(rxState)
1123   2        		{
1124   3        		 	case rx_dac1_frm_pc:
1125   3        		 		state = pc_send_dac1;
1126   3        		 	case rx_dac1_frm_uc://DAC1 For Stop
1127   3      		 		StopTh1 = (rxChr)*10;
1128   3      			 	gGotoXY(7,12);
1129   3      		 		gPutc((StartTh2/10)+48);gPutc('0');
1130   3      			 	gGotoXY(8,12);
1131   3      			 	gPutc((StopTh1/10)+48);gPutc('0');
1132   3      			 	ROM_Write(0x7003,StopTh1);  		 	
1133   3        		 		break;
1134   3        		 	case rx_dac2_frm_pc:
1135   3        		 		state = pc_send_dac2;
1136   3        		 	case rx_dac2_frm_uc://DAC2 For Start
1137   3      	 			StartTh2 = (rxChr)*10;
1138   3      			 	gGotoXY(7,12);
1139   3      			 	gPutc((StartTh2/10)+48);gPutc('0');
1140   3      			 	gGotoXY(8,12);
1141   3      		 		gPutc((StopTh1/10)+48);gPutc('0');
1142   3      			 	ROM_Write(0x7004,StartTh2);
1143   3        		 		break;
1144   3        		 	case rx_data_frm_uc://Read From FPGA 1,2,3,4
1145   3        		 		rxBuf[rxCnt]=rxChr;
1146   3      				if (rxCnt==63)
1147   3      				{
1148   4         				rxCnt = 0;
1149   4         				state = calc_fpga0 + FPGA;
1150   4          			}
1151   3      	    		else
1152   3         	 		{	                          	
1153   4          				rxCnt++;
1154   4          				ChronoCmd(128+rxCnt);
1155   4      	    		}// End if rxCnt
1156   3        		 		break;
1157   3        		 	case rx_comd_frm_pc://PC Communication
1158   3        		 		switch(rxChr)
1159   3      		 		{
1160   4      		 		 	case reset_tdc_cntrs:// Reset the tdc
1161   4      	 			 		next  = pc_send_data;
1162   4      	 			 		state = reset_tdc;
1163   4      	 		 			break;
1164   4       		 		 	case change_sys_id:// reset the dac
1165   4      		 		 		//state = get_id_frm_pc;
1166   4      		 		 		break;
1167   4       		 		 	case inc_n_read_dac1:// increment dac2 and send value to p
            -c
1168   4      		 		 		state = pc_inc_dac1;
1169   4      		 		 		break;
1170   4      	 			 	case inc_n_read_dac2:// increment dac2 and send value to pc
            -
1171   4      	 			 		state = pc_inc_dac2;
1172   4      	 		 			break;
1173   4        		 		 	case send_info_2_pc:// send dac values to pc
1174   4      		 		 		state = pc_send_dacs;
1175   4      		 		 		break;
1176   4      		 		 	//case switch_2_single:
1177   4      		 		 	//	multi = 0;
1178   4      		 		 	//	break;
1179   4      		 		 	//case switch_2_multi:
1180   4      		 		 	//	multi = 1;
1181   4      		 		 	//	break;
1182   4      	 			}
1183   3        		 		break;
1184   3        		 	case rx_data_frm_pr:// Printer_Communication
1185   3        		 		break;
1186   3        		 	default:
1187   3        		 		break;
1188   3        		}//End Switch
1189   2         }// End if RI
1190   1      }
1191          
1192          
1193          //CHRONO32C
1194          void Timer1_OneSec() interrupt 3
1195          {
1196   1       	TF1 = 0;
1197   1      	TH0 = 0x4C;	TL0 = 0x00;
1198   1       	beepCnt++;
1199   1       	if(beepCnt==beepLmt)
1200   1       		BEEP = 0;
1201   1      }
1202          
1203          
1204          
1205          
1206          
1207          
1208          
1209          
1210          
1211          
1212          
1213          
1214          
1215          
1216          
1217          
1218          
1219          
1220          
1221          
1222          
1223          
1224          
1225          
1226          
1227          
1228          
1229          
1230          
1231          
1232          
1233          
1234          
1235          
1236          
1237          
1238          
1239          
1240          
1241          
1242          
1243          
1244          
1245          
1246          
1247          
1248          
1249          
1250          
1251          
1252          
1253          
1254          
1255          
1256          
1257          
1258          
1259          
1260          
1261          
1262          
1263          
1264          
1265          
1266          
1267          
1268          
1269          
1270          
1271          
1272          
1273          
1274          
1275          
1276          
1277          
1278          
1279          
1280          
1281          
1282          
1283          
1284          
1285          
1286          
1287          
1288          
1289          
1290          
1291          
1292          
1293          
1294          
1295          
C51 COMPILER V6.11.4C,  MAIN                      06/07/113  08:53:08  PAGE  2

ASSEMBLY LISTING OF GENERATED OBJECT CODE

            ; FUNCTION _SelectLines (BEGIN)
              ; Register R7 is assigned to parameter device
                                           ; SOURCE LINE # 207 
0000 EF             MOV    A,R7
0001 6007           JZ     ?CASE3
0003 14             DEC    A
0004 6009           JZ     ?CASE4
0006 14             DEC    A
0007 600B           JZ     ?CASE5
0009 22             RET    
000A         ?CASE3:
                                           ; SOURCE LINE # 210 
000A C291           CLR    SEL1
000C C293           CLR    SEL0
                                           ; SOURCE LINE # 211 
000E 22             RET    
000F         ?CASE4:
                                           ; SOURCE LINE # 213 
000F C291           CLR    SEL1
0011 D293           SETB   SEL0
                                           ; SOURCE LINE # 214 
0013 22             RET    
0014         ?CASE5:
                                           ; SOURCE LINE # 216 
0014 D291           SETB   SEL1
0016 C293           CLR    SEL0
                                           ; SOURCE LINE # 217 
0018 22             RET    

            ; FUNCTION _SelectLines (END)

            ; FUNCTION _Calculate (BEGIN)
                                           ; SOURCE LINE # 255 
0000 8F00    R      MOV    FPGA_No,R7
                                           ; SOURCE LINE # 228 
0002 E500    R      MOV    A,FPGA_No
0004 23             RL     A
0005 23             RL     A
0006 23             RL     A
0007 F500    R      MOV    FPGA_No,A
                                           ; SOURCE LINE # 229 
0009 900000  R      MOV    DPTR,#rxBuf+01H
000C E0             MOVX   A,@DPTR
000D F500    R      MOV    Start,A
                                           ; SOURCE LINE # 230 
000F E500    R      MOV    A,Start
0011 6002           JZ     ?NXT11
0013 D281           SETB   LDSRT
0015         ?NXT11:
                                           ; SOURCE LINE # 231 
0015 750000  R      MOV    pp,#000H
0018         ?FOR1:
                                           ; SOURCE LINE # 234 
0018 E500    R      MOV    A,pp
001A 2400    R      ADD    A,#LOW (rxBuf)+002H
001C F582           MOV    DPL,A
001E E4             CLR    A
001F 3400    R      ADDC   A,#HIGH (rxBuf)+002H
0021 F583           MOV    DPH,A
0023 E0             MOVX   A,@DPTR
0024 F500    R      MOV    Stop,A
                                           ; SOURCE LINE # 236 
0026 E500    R      MOV    A,pp
0028 75F004         MOV    B,#004H
002B A4             MUL    AB
002C 2400    R      ADD    A,#LOW (rxBuf + 0DH)
002E F582           MOV    DPL,A
0030 E5F0           MOV    A,B
0032 3400    R      ADDC   A,#HIGH (rxBuf + 0DH)
0034 F583           MOV    DPH,A
0036 E0             MOVX   A,@DPTR
0037 FF             MOV    R7,A
0038 E4             CLR    A
0039 C0E0           PUSH   ACC
003B FC             MOV    R4,A
003C FD             MOV    R5,A
003D D006           POP    AR6
003F 75F010         MOV    B,#010H
0042 120000  R      LCALL  ?C_LSHL
0045 C004           PUSH   AR4
0047 C005           PUSH   AR5
0049 C006           PUSH   AR6
004B C007           PUSH   AR7
004D E500    R      MOV    A,pp
004F 75F004         MOV    B,#004H
0052 A4             MUL    AB
0053 2400    R      ADD    A,#LOW (rxBuf + 0EH)
0055 F582           MOV    DPL,A
0057 E5F0           MOV    A,B
0059 3400    R      ADDC   A,#HIGH (rxBuf + 0EH)
005B F583           MOV    DPH,A
005D E0             MOVX   A,@DPTR
005E FF             MOV    R7,A
005F E4             CLR    A
0060 C0E0           PUSH   ACC
0062 FC             MOV    R4,A
0063 FD             MOV    R5,A
0064 D006           POP    AR6
0066 75F018         MOV    B,#018H
0069 120000  R      LCALL  ?C_LSHL
006C 120000  R      LCALL  ?C_LADD
006F C004           PUSH   AR4
0071 C005           PUSH   AR5
0073 C006           PUSH   AR6
0075 C007           PUSH   AR7
0077 E500    R      MOV    A,pp
0079 75F004         MOV    B,#004H
007C A4             MUL    AB
007D 2400    R      ADD    A,#LOW (rxBuf + 0CH)
007F F582           MOV    DPL,A
0081 E5F0           MOV    A,B
0083 3400    R      ADDC   A,#HIGH (rxBuf + 0CH)
0085 F583           MOV    DPH,A
0087 E0             MOVX   A,@DPTR
0088 FE             MOV    R6,A
0089 E4             CLR    A
008A FF             MOV    R7,A
008B FD             MOV    R5,A
008C FC             MOV    R4,A
008D 120000  R      LCALL  ?C_LADD
0090 C004           PUSH   AR4
0092 C005           PUSH   AR5
0094 C006           PUSH   AR6
0096 C007           PUSH   AR7
0098 E500    R      MOV    A,pp
009A 75F004         MOV    B,#004H
009D A4             MUL    AB
009E 2400    R      ADD    A,#LOW (rxBuf + 0BH)
00A0 F582           MOV    DPL,A
00A2 E5F0           MOV    A,B
00A4 3400    R      ADDC   A,#HIGH (rxBuf + 0BH)
00A6 F583           MOV    DPH,A
00A8 E4             CLR    A
00A9 FE             MOV    R6,A
00AA FC             MOV    R4,A
00AB FD             MOV    R5,A
00AC E0             MOVX   A,@DPTR
00AD FF             MOV    R7,A
00AE 120000  R      LCALL  ?C_LADD
00B1 8C00    R      MOV    Counter,R4
00B3 8D00    R      MOV    Counter+01H,R5
00B5 8E00    R      MOV    Counter+02H,R6
00B7 8F00    R      MOV    Counter+03H,R7
                                           ; SOURCE LINE # 237 
00B9 C000    R      PUSH   Counter
00BB C000    R      PUSH   Counter+01H
00BD C000    R      PUSH   Counter+02H
00BF C000    R      PUSH   Counter+03H
00C1 7401           MOV    A,#001H
00C3 FC             MOV    R4,A
00C4 E4             CLR    A
00C5 FF             MOV    R7,A
00C6 FD             MOV    R5,A
00C7 FE             MOV    R6,A
00C8 120000  R      LCALL  ?C_CMPLS
00CB BFFF02         CJNE   R7,#0FFH,$ + 5
00CE 8003           SJMP   $ + 5
00D0 020000  R      LJMP   ?ELSE6
                                           ; SOURCE LINE # 239 
00D3 E500    R      MOV    A,Stop
00D5 6002           JZ     ?NXT15
00D7 D282           SETB   LDSTP
00D9         ?NXT15:
                                           ; SOURCE LINE # 240 
00D9 C000    R      PUSH   Counter
00DB C000    R      PUSH   Counter+01H
00DD C000    R      PUSH   Counter+02H
00DF C000    R      PUSH   Counter+03H
00E1 E4             CLR    A
00E2 FC             MOV    R4,A
00E3 FD             MOV    R5,A
00E4 FE             MOV    R6,A
00E5 741E           MOV    A,#01EH
00E7 FF             MOV    R7,A
00E8 120000  R      LCALL  ?C_LMUL
00EB C004           PUSH   AR4
00ED C005           PUSH   AR5
00EF C006           PUSH   AR6
00F1 C007           PUSH   AR7
00F3 E500    R      MOV    A,Start
00F5 AF00    R      MOV    R7,Start
00F7 33             RLC    A
00F8 95E0           SUBB   A,ACC
00FA FE             MOV    R6,A
00FB 33             RLC    A
00FC E4             CLR    A
00FD 5001           JNC    ?NXT16
00FF 14             DEC    A
0100         ?NXT16:
0100 FC             MOV    R4,A
0101 FD             MOV    R5,A
0102 120000  R      LCALL  ?C_LADD
0105 C004           PUSH   AR4
0107 C005           PUSH   AR5
0109 C006           PUSH   AR6
010B C007           PUSH   AR7
010D E500    R      MOV    A,Stop
010F AF00    R      MOV    R7,Stop
0111 33             RLC    A
0112 95E0           SUBB   A,ACC
0114 FE             MOV    R6,A
0115 33             RLC    A
0116 E4             CLR    A
0117 5001           JNC    ?NXT17
0119 14             DEC    A
011A         ?NXT17:
011A FC             MOV    R4,A
011B FD             MOV    R5,A
011C 120000  R      LCALL  ?C_LSUB
011F C004           PUSH   AR4
0121 C005           PUSH   AR5
0123 C006           PUSH   AR6
0125 C007           PUSH   AR7
0127 E500    R      MOV    A,pp
0129 2500    R      ADD    A,FPGA_No
012B FF             MOV    R7,A
012C E4             CLR    A
012D 3400           ADDC   A,#000H
012F EF             MOV    A,R7
0130 23             RL     A
0131 23             RL     A
0132 54FC           ANL    A,#0FCH
0134 2400    R      ADD    A,#LOW (Interval)
0136 F582           MOV    DPL,A
0138 E4             CLR    A
0139 3400    R      ADDC   A,#HIGH (Interval)
013B F583           MOV    DPH,A
013D A3             INC    DPTR
013E A3             INC    DPTR
013F A3             INC    DPTR
0140 D0E0           POP    ACC
0142 F0             MOVX   @DPTR,A
0143 120000  R      LCALL  ?C_DECDPTR
0146 D0E0           POP    ACC
0148 F0             MOVX   @DPTR,A
0149 120000  R      LCALL  ?C_DECDPTR
014C D0E0           POP    ACC
014E F0             MOVX   @DPTR,A
014F 120000  R      LCALL  ?C_DECDPTR
0152 D0E0           POP    ACC
0154 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 242 
0155 75F003         MOV    B,#003H
0158 E500    R      MOV    A,FPGA_No
015A 2500    R      ADD    A,pp
015C 2400    R      ADD    A,#LOW (offset)
015E F582           MOV    DPL,A
0160 E4             CLR    A
0161 3400    R      ADDC   A,#HIGH (offset)
0163 F583           MOV    DPH,A
0165 E0             MOVX   A,@DPTR
0166 A4             MUL    AB
0167 FF             MOV    R7,A
0168 E4             CLR    A
0169 C0E0           PUSH   ACC
016B C0E0           PUSH   ACC
016D C0F0           PUSH   B
016F C007           PUSH   AR7
0171 E500    R      MOV    A,pp
0173 2500    R      ADD    A,FPGA_No
0175 FF             MOV    R7,A
0176 E4             CLR    A
0177 3400           ADDC   A,#000H
0179 EF             MOV    A,R7
017A 23             RL     A
017B 23             RL     A
017C 54FC           ANL    A,#0FCH
017E 2400    R      ADD    A,#LOW (Interval)
0180 F582           MOV    DPL,A
0182 E4             CLR    A
0183 3400    R      ADDC   A,#HIGH (Interval)
0185 F583           MOV    DPH,A
0187 120000  R      LCALL  MV4_XD2RG?C
018A 120000  R      LCALL  ?C_LADD
018D C004           PUSH   AR4
018F C005           PUSH   AR5
0191 C006           PUSH   AR6
0193 C007           PUSH   AR7
0195 E500    R      MOV    A,pp
0197 2500    R      ADD    A,FPGA_No
0199 FF             MOV    R7,A
019A E4             CLR    A
019B 3400           ADDC   A,#000H
019D EF             MOV    A,R7
019E 23             RL     A
019F 23             RL     A
01A0 54FC           ANL    A,#0FCH
01A2 FB             MOV    R3,A
01A3 2400    R      ADD    A,#LOW (Interval)
01A5 F582           MOV    DPL,A
01A7 E4             CLR    A
01A8 3400    R      ADDC   A,#HIGH (Interval)
01AA F583           MOV    DPH,A
01AC A3             INC    DPTR
01AD A3             INC    DPTR
01AE A3             INC    DPTR
01AF D0E0           POP    ACC
01B1 F0             MOVX   @DPTR,A
01B2 120000  R      LCALL  ?C_DECDPTR
01B5 D0E0           POP    ACC
01B7 F0             MOVX   @DPTR,A
01B8 120000  R      LCALL  ?C_DECDPTR
01BB D0E0           POP    ACC
01BD F0             MOVX   @DPTR,A
01BE 120000  R      LCALL  ?C_DECDPTR
01C1 D0E0           POP    ACC
01C3 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 243 
01C4 EB             MOV    A,R3
01C5 2400    R      ADD    A,#LOW (Interval)
01C7 F582           MOV    DPL,A
01C9 E4             CLR    A
01CA 3400    R      ADDC   A,#HIGH (Interval)
01CC F583           MOV    DPH,A
01CE 120000  R      LCALL  MV4_XD2SN?C
01D1 E4             CLR    A
01D2 FE             MOV    R6,A
01D3 FC             MOV    R4,A
01D4 FD             MOV    R5,A
01D5 7403           MOV    A,#003H
01D7 FF             MOV    R7,A
01D8 120000  R      LCALL  ?C_SLDIV_SP
01DB C004           PUSH   AR4
01DD C005           PUSH   AR5
01DF C006           PUSH   AR6
01E1 C007           PUSH   AR7
01E3 E500    R      MOV    A,pp
01E5 2500    R      ADD    A,FPGA_No
01E7 FF             MOV    R7,A
01E8 E4             CLR    A
01E9 3400           ADDC   A,#000H
01EB EF             MOV    A,R7
01EC 23             RL     A
01ED 23             RL     A
01EE 54FC           ANL    A,#0FCH
01F0 FB             MOV    R3,A
01F1 2400    R      ADD    A,#LOW (Interval)
01F3 F582           MOV    DPL,A
01F5 E4             CLR    A
01F6 3400    R      ADDC   A,#HIGH (Interval)
01F8 F583           MOV    DPH,A
01FA A3             INC    DPTR
01FB A3             INC    DPTR
01FC A3             INC    DPTR
01FD D0E0           POP    ACC
01FF F0             MOVX   @DPTR,A
0200 120000  R      LCALL  ?C_DECDPTR
0203 D0E0           POP    ACC
0205 F0             MOVX   @DPTR,A
0206 120000  R      LCALL  ?C_DECDPTR
0209 D0E0           POP    ACC
020B F0             MOVX   @DPTR,A
020C 120000  R      LCALL  ?C_DECDPTR
020F D0E0           POP    ACC
0211 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 244 
0212 EB             MOV    A,R3
0213 2400    R      ADD    A,#LOW (Interval)
0215 F582           MOV    DPL,A
0217 E4             CLR    A
0218 3400    R      ADDC   A,#HIGH (Interval)
021A F583           MOV    DPH,A
021C 120000  R      LCALL  MV4_XD2SN?C
021F AC00    R      MOV    R4,min
0221 AD00    R      MOV    R5,min+01H
0223 AE00    R      MOV    R6,min+02H
0225 AF00    R      MOV    R7,min+03H
0227 120000  R      LCALL  ?C_CMPLS
022A BFFF25         CJNE   R7,#0FFH,?NXT18
                                           ; SOURCE LINE # 245 
022D E500    R      MOV    A,pp
022F 2500    R      ADD    A,FPGA_No
0231 FD             MOV    R5,A
0232 E4             CLR    A
0233 3400           ADDC   A,#000H
0235 ED             MOV    A,R5
0236 23             RL     A
0237 23             RL     A
0238 54FC           ANL    A,#0FCH
023A 2400    R      ADD    A,#LOW (Interval)
023C F582           MOV    DPL,A
023E E4             CLR    A
023F 3400    R      ADDC   A,#HIGH (Interval)
0241 F583           MOV    DPH,A
0243 E0             MOVX   A,@DPTR
0244 F500    R      MOV    min,A
0246 A3             INC    DPTR
0247 E0             MOVX   A,@DPTR
0248 F500    R      MOV    min+01H,A
024A A3             INC    DPTR
024B E0             MOVX   A,@DPTR
024C F500    R      MOV    min+02H,A
024E A3             INC    DPTR
024F E0             MOVX   A,@DPTR
0250 F500    R      MOV    min+03H,A
0252         ?NXT18:
                                           ; SOURCE LINE # 246 
0252 E500    R      MOV    A,pp
0254 2500    R      ADD    A,FPGA_No
0256 FF             MOV    R7,A
0257 E4             CLR    A
0258 3400           ADDC   A,#000H
025A EF             MOV    A,R7
025B 23             RL     A
025C 23             RL     A
025D 54FC           ANL    A,#0FCH
025F 2400    R      ADD    A,#LOW (Interval)
0261 F582           MOV    DPL,A
0263 E4             CLR    A
0264 3400    R      ADDC   A,#HIGH (Interval)
0266 F583           MOV    DPH,A
0268 120000  R      LCALL  MV4_XD2SN?C
026B AC00    R      MOV    R4,max
026D AD00    R      MOV    R5,max+01H
026F AE00    R      MOV    R6,max+02H
0271 AF00    R      MOV    R7,max+03H
0273 120000  R      LCALL  ?C_CMPLS
0276 BF0144         CJNE   R7,#001H,?NXT14
                                           ; SOURCE LINE # 247 
0279 E500    R      MOV    A,pp
027B 2500    R      ADD    A,FPGA_No
027D FD             MOV    R5,A
027E E4             CLR    A
027F 3400           ADDC   A,#000H
0281 ED             MOV    A,R5
0282 23             RL     A
0283 23             RL     A
0284 54FC           ANL    A,#0FCH
0286 2400    R      ADD    A,#LOW (Interval)
0288 F582           MOV    DPL,A
028A E4             CLR    A
028B 3400    R      ADDC   A,#HIGH (Interval)
028D F583           MOV    DPH,A
028F E0             MOVX   A,@DPTR
0290 F500    R      MOV    max,A
0292 A3             INC    DPTR
0293 E0             MOVX   A,@DPTR
0294 F500    R      MOV    max+01H,A
0296 A3             INC    DPTR
0297 E0             MOVX   A,@DPTR
0298 F500    R      MOV    max+02H,A
029A A3             INC    DPTR
029B E0             MOVX   A,@DPTR
029C F500    R      MOV    max+03H,A
029E 801D           SJMP   ?NXT13
02A0         ?ELSE6:
                                           ; SOURCE LINE # 251 
02A0 E500    R      MOV    A,pp
02A2 2500    R      ADD    A,FPGA_No
02A4 FD             MOV    R5,A
02A5 E4             CLR    A
02A6 3400           ADDC   A,#000H
02A8 ED             MOV    A,R5
02A9 23             RL     A
02AA 23             RL     A
02AB 54FC           ANL    A,#0FCH
02AD 2400    R      ADD    A,#LOW (Interval)
02AF F582           MOV    DPL,A
02B1 E4             CLR    A
02B2 3400    R      ADDC   A,#HIGH (Interval)
02B4 F583           MOV    DPH,A
02B6 120000  R      LCALL  MV4_CS2XD?C
02B9                DB      0FFH, 0FFH, 0FFH, 0FFH 
02BD         ?NXT14:

02BD         ?NXT13:
                                           ; SOURCE LINE # 231 
02BD 0500    R      INC    pp
02BF E500    R      MOV    A,pp
02C1 B40802         CJNE   A,#008H,$ + 5
02C4 8003           SJMP   $ + 5
02C6 020000  R      LJMP   ?FOR1
                                           ; SOURCE LINE # 254 
02C9 900000  R      MOV    DPTR,#rxBuf+02CH
02CC E0             MOVX   A,@DPTR
02CD 75F00A         MOV    B,#00AH
02D0 A4             MUL    AB
02D1 F500    R      MOV    StopTh1,A
                                           ; SOURCE LINE # 255 
02D3 900000  R      MOV    DPTR,#rxBuf+02DH
02D6 E0             MOVX   A,@DPTR
02D7 75F00A         MOV    B,#00AH
02DA A4             MUL    AB
02DB F500    R      MOV    StartTh2,A
02DD 22             RET    

            ; FUNCTION _Calculate (END)

            ; FUNCTION SendFormatedData (BEGIN)
                                           ; SOURCE LINE # 262 
0000 750005  R      MOV    Divisor,#005H
0003 7500F5  R      MOV    Divisor+01H,#0F5H
0006 7500E1  R      MOV    Divisor+02H,#0E1H
0009 E4             CLR    A
000A F500    R      MOV    Divisor+03H,A
                                           ; SOURCE LINE # 264 
000C 7F33           MOV    R7,#033H
000E 120000  R      LCALL  _SendChar
0011 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 265 
0014 7F32           MOV    R7,#032H
0016 120000  R      LCALL  _SendChar
0019 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 266 
001C 7F54           MOV    R7,#054H
001E 120000  R      LCALL  _SendChar
0021 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 267 
0024 7F44           MOV    R7,#044H
0026 120000  R      LCALL  _SendChar
0029 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 268 
002C 7F43           MOV    R7,#043H
002E 120000  R      LCALL  _SendChar
0031 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 269 
0034 7F3A           MOV    R7,#03AH
0036 120000  R      LCALL  _SendChar
0039 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 270 
003C 7F20           MOV    R7,#020H
003E 120000  R      LCALL  _SendChar
0041 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 271 
0044 75F00A         MOV    B,#00AH
0047 E500    R      MOV    A,system
0049 84             DIV    AB
004A 2430           ADD    A,#030H
004C FF             MOV    R7,A
004D 120000  R      LCALL  _SendChar
0050 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 272 
0053 75F00A         MOV    B,#00AH
0056 E500    R      MOV    A,system
0058 84             DIV    AB
0059 E5F0           MOV    A,B
005B 2430           ADD    A,#030H
005D FF             MOV    R7,A
005E 120000  R      LCALL  _SendChar
0061 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 273 
0064 7F20           MOV    R7,#020H
0066 120000  R      LCALL  _SendChar
0069 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 274 
006C 7F56           MOV    R7,#056H
006E 120000  R      LCALL  _SendChar
0071 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 275 
0074 7F20           MOV    R7,#020H
0076 120000  R      LCALL  _SendChar
0079 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 276 
007C 7F52           MOV    R7,#052H
007E 120000  R      LCALL  _SendChar
0081 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 277 
0084 7F45           MOV    R7,#045H
0086 120000  R      LCALL  _SendChar
0089 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 278 
008C 7F46           MOV    R7,#046H
008E 120000  R      LCALL  _SendChar
0091 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 279 
0094 7F3A           MOV    R7,#03AH
0096 120000  R      LCALL  _SendChar
0099 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 280 
009C 7F20           MOV    R7,#020H
009E 120000  R      LCALL  _SendChar
00A1 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 281 
00A4 7F30           MOV    R7,#030H
00A6 120000  R      LCALL  _SendChar
00A9 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 282 
00AC 7F30           MOV    R7,#030H
00AE 120000  R      LCALL  _SendChar
00B1 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 283 
00B4 7F0D           MOV    R7,#00DH
00B6 120000  R      LCALL  _SendChar
00B9 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 284 
00BC 7F0A           MOV    R7,#00AH
00BE 120000  R      LCALL  _SendChar
00C1 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 285 
00C4 750000  R      MOV    pp,#000H
00C7         ?FOR5:
                                           ; SOURCE LINE # 287 
00C7 E500    R      MOV    A,pp
00C9 2401           ADD    A,#001H
00CB FF             MOV    R7,A
00CC E4             CLR    A
00CD 3400           ADDC   A,#000H
00CF FE             MOV    R6,A
00D0 E4             CLR    A
00D1 FC             MOV    R4,A
00D2 7D0A           MOV    R5,#00AH
00D4 120000  R      LCALL  ?C_UIDIV
00D7 EF             MOV    A,R7
00D8 2430           ADD    A,#030H
00DA FF             MOV    R7,A
00DB 120000  R      LCALL  _SendChar
00DE 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 288 
00E1 E500    R      MOV    A,pp
00E3 2401           ADD    A,#001H
00E5 FF             MOV    R7,A
00E6 E4             CLR    A
00E7 3400           ADDC   A,#000H
00E9 FE             MOV    R6,A
00EA E4             CLR    A
00EB FC             MOV    R4,A
00EC 7D0A           MOV    R5,#00AH
00EE 120000  R      LCALL  ?C_UIDIV
00F1 ED             MOV    A,R5
00F2 2430           ADD    A,#030H
00F4 FF             MOV    R7,A
00F5 120000  R      LCALL  _SendChar
00F8 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 289 
00FB 7F20           MOV    R7,#020H
00FD 120000  R      LCALL  _SendChar
0100 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 291 
0103 E500    R      MOV    A,pp
0105 23             RL     A
0106 23             RL     A
0107 FB             MOV    R3,A
0108 2400    R      ADD    A,#LOW (Interval)
010A F582           MOV    DPL,A
010C E4             CLR    A
010D 3400    R      ADDC   A,#HIGH (Interval)
010F F583           MOV    DPH,A
0111 120000  R      LCALL  MV4_XD2SN?C
0114 74FF           MOV    A,#0FFH
0116 FF             MOV    R7,A
0117 FE             MOV    R6,A
0118 FC             MOV    R4,A
0119 FD             MOV    R5,A
011A 120000  R      LCALL  ?C_CMPL
011D BF0003         CJNE   R7,#000H,?LAB17
0120 020000  R      LJMP   ?ELSE11
0123         ?LAB17:
                                           ; SOURCE LINE # 293 
0123 7F20           MOV    R7,#020H
0125 120000  R      LCALL  _SendChar
0128 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 294 
012B E500    R      MOV    A,pp
012D 23             RL     A
012E 23             RL     A
012F 2400    R      ADD    A,#LOW (Interval)
0131 F582           MOV    DPL,A
0133 E4             CLR    A
0134 3400    R      ADDC   A,#HIGH (Interval)
0136 F583           MOV    DPH,A
0138 E0             MOVX   A,@DPTR
0139 F500    R      MOV    tempInterval,A
013B A3             INC    DPTR
013C E0             MOVX   A,@DPTR
013D F500    R      MOV    tempInterval+01H,A
013F A3             INC    DPTR
0140 E0             MOVX   A,@DPTR
0141 F500    R      MOV    tempInterval+02H,A
0143 A3             INC    DPTR
0144 E0             MOVX   A,@DPTR
0145 F500    R      MOV    tempInterval+03H,A
                                           ; SOURCE LINE # 295 
0147 750005  R      MOV    Divisor,#005H
014A 7500F5  R      MOV    Divisor+01H,#0F5H
014D 7500E1  R      MOV    Divisor+02H,#0E1H
0150 E4             CLR    A
0151 F500    R      MOV    Divisor+03H,A
                                           ; SOURCE LINE # 296 
0153 F500    R      MOV    dg,A
0155         ?FOR6:
                                           ; SOURCE LINE # 298 
0155 C000    R      PUSH   tempInterval
0157 C000    R      PUSH   tempInterval+01H
0159 C000    R      PUSH   tempInterval+02H
015B C000    R      PUSH   tempInterval+03H
015D AC00    R      MOV    R4,Divisor
015F AD00    R      MOV    R5,Divisor+01H
0161 AE00    R      MOV    R6,Divisor+02H
0163 AF00    R      MOV    R7,Divisor+03H
0165 120000  R      LCALL  ?C_ULDIV_SP
0168 EF             MOV    A,R7
0169 2430           ADD    A,#030H
016B FF             MOV    R7,A
016C 120000  R      LCALL  _SendChar
016F 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 299 
0172 C000    R      PUSH   tempInterval
0174 C000    R      PUSH   tempInterval+01H
0176 C000    R      PUSH   tempInterval+02H
0178 C000    R      PUSH   tempInterval+03H
017A AC00    R      MOV    R4,Divisor
017C AD00    R      MOV    R5,Divisor+01H
017E AE00    R      MOV    R6,Divisor+02H
0180 AF00    R      MOV    R7,Divisor+03H
0182 120000  R      LCALL  ?C_LMOD_SP
0185 8C00    R      MOV    tempInterval,R4
0187 8D00    R      MOV    tempInterval+01H,R5
0189 8E00    R      MOV    tempInterval+02H,R6
018B 8F00    R      MOV    tempInterval+03H,R7
                                           ; SOURCE LINE # 300 
018D C000    R      PUSH   Divisor
018F C000    R      PUSH   Divisor+01H
0191 C000    R      PUSH   Divisor+02H
0193 C000    R      PUSH   Divisor+03H
0195 E4             CLR    A
0196 FE             MOV    R6,A
0197 FC             MOV    R4,A
0198 FD             MOV    R5,A
0199 740A           MOV    A,#00AH
019B FF             MOV    R7,A
019C 120000  R      LCALL  ?C_ULDIV_SP
019F 8C00    R      MOV    Divisor,R4
01A1 8D00    R      MOV    Divisor+01H,R5
01A3 8E00    R      MOV    Divisor+02H,R6
01A5 8F00    R      MOV    Divisor+03H,R7
                                           ; SOURCE LINE # 296 
01A7 0500    R      INC    dg
01A9 E500    R      MOV    A,dg
01AB B409A7         CJNE   A,#009H,?FOR6
01AE 801A           SJMP   ?NXT29
01B0         ?ELSE11:
                                           ; SOURCE LINE # 305 
01B0 7F44           MOV    R7,#044H
01B2 120000  R      LCALL  _SendChar
01B5 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 306 
01B8 750000  R      MOV    dg,#000H
01BB         ?FOR7:
                                           ; SOURCE LINE # 308 
01BB 7F30           MOV    R7,#030H
01BD 120000  R      LCALL  _SendChar
01C0 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 296 
01C3 0500    R      INC    dg
01C5 E500    R      MOV    A,dg
01C7 B409F1         CJNE   A,#009H,?FOR7
01CA         ?NXT29:
                                           ; SOURCE LINE # 311 
01CA 7F0D           MOV    R7,#00DH
01CC 120000  R      LCALL  _SendChar
01CF 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 312 
01D2 7F0A           MOV    R7,#00AH
01D4 120000  R      LCALL  _SendChar
01D7 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 285 
01DA 0500    R      INC    pp
01DC E500    R      MOV    A,pp
01DE B42002         CJNE   A,#020H,$ + 5
01E1 8003           SJMP   $ + 5
01E3 020000  R      LJMP   ?FOR5
                                           ; SOURCE LINE # 314 
01E6 7F0D           MOV    R7,#00DH
01E8 120000  R      LCALL  _SendChar
01EB 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 315 
01EE 7F0A           MOV    R7,#00AH
01F0 120000  R      LCALL  _SendChar
01F3 120000  R      LCALL  Delay25ms
01F6 22             RET    

            ; FUNCTION SendFormatedData (END)

            ; FUNCTION _Display (BEGIN)
                                           ; SOURCE LINE # 352 
0000 8F00    R      MOV    FPGA_No,R7
                                           ; SOURCE LINE # 326 
0002 E500    R      MOV    A,FPGA_No
0004 23             RL     A
0005 23             RL     A
0006 23             RL     A
0007 F500    R      MOV    FPGA_No,A
                                           ; SOURCE LINE # 327 
0009 750000  R      MOV    pp,#000H
000C         ?FOR9:
                                           ; SOURCE LINE # 329 
000C E500    R      MOV    A,pp
000E 2405           ADD    A,#005H
0010 FF             MOV    R7,A
0011 7D01           MOV    R5,#001H
0013 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 330 
0016 E500    R      MOV    A,FPGA_No
0018 2500    R      ADD    A,pp
001A FF             MOV    R7,A
001B E4             CLR    A
001C 3400           ADDC   A,#000H
001E FE             MOV    R6,A
001F EF             MOV    A,R7
0020 2401           ADD    A,#001H
0022 FF             MOV    R7,A
0023 E4             CLR    A
0024 3E             ADDC   A,R6
0025 FE             MOV    R6,A
0026 E4             CLR    A
0027 FC             MOV    R4,A
0028 7D0A           MOV    R5,#00AH
002A 120000  R      LCALL  ?C_UIDIV
002D EF             MOV    A,R7
002E 2430           ADD    A,#030H
0030 FF             MOV    R7,A
0031 120000  R      LCALL  _gPutc
0034 E500    R      MOV    A,FPGA_No
0036 2500    R      ADD    A,pp
0038 FF             MOV    R7,A
0039 E4             CLR    A
003A 3400           ADDC   A,#000H
003C FE             MOV    R6,A
003D EF             MOV    A,R7
003E 2401           ADD    A,#001H
0040 FF             MOV    R7,A
0041 E4             CLR    A
0042 3E             ADDC   A,R6
0043 FE             MOV    R6,A
0044 E4             CLR    A
0045 FC             MOV    R4,A
0046 7D0A           MOV    R5,#00AH
0048 120000  R      LCALL  ?C_UIDIV
004B ED             MOV    A,R5
004C 2430           ADD    A,#030H
004E FF             MOV    R7,A
004F 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 331 
0052 7F20           MOV    R7,#020H
0054 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 332 
0057 7F20           MOV    R7,#020H
0059 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 333 
005C E500    R      MOV    A,FPGA_No
005E 2500    R      ADD    A,pp
0060 FF             MOV    R7,A
0061 E4             CLR    A
0062 3400           ADDC   A,#000H
0064 EF             MOV    A,R7
0065 23             RL     A
0066 23             RL     A
0067 54FC           ANL    A,#0FCH
0069 FB             MOV    R3,A
006A 2400    R      ADD    A,#LOW (Interval)
006C F582           MOV    DPL,A
006E E4             CLR    A
006F 3400    R      ADDC   A,#HIGH (Interval)
0071 F583           MOV    DPH,A
0073 120000  R      LCALL  MV4_XD2SN?C
0076 74FF           MOV    A,#0FFH
0078 FF             MOV    R7,A
0079 FE             MOV    R6,A
007A FC             MOV    R4,A
007B FD             MOV    R5,A
007C 120000  R      LCALL  ?C_CMPL
007F BF0003         CJNE   R7,#000H,?LAB27
0082 020000  R      LJMP   ?ELSE16
0085         ?LAB27:
                                           ; SOURCE LINE # 335 
0085 E500    R      MOV    A,FPGA_No
0087 2500    R      ADD    A,pp
0089 FF             MOV    R7,A
008A E4             CLR    A
008B 3400           ADDC   A,#000H
008D EF             MOV    A,R7
008E 23             RL     A
008F 23             RL     A
0090 54FC           ANL    A,#0FCH
0092 FB             MOV    R3,A
0093 2400    R      ADD    A,#LOW (Interval)
0095 F582           MOV    DPL,A
0097 E4             CLR    A
0098 3400    R      ADDC   A,#HIGH (Interval)
009A F583           MOV    DPH,A
009C 120000  R      LCALL  MV4_XD2SN?C
009F AC00    R      MOV    R4,Reference
00A1 AD00    R      MOV    R5,Reference+01H
00A3 AE00    R      MOV    R6,Reference+02H
00A5 AF00    R      MOV    R7,Reference+03H
00A7 120000  R      LCALL  ?C_CMPLS
00AA BFFF02         CJNE   R7,#0FFH,?LAB29
00AD 802E           SJMP   ?ELSE17
00AF         ?LAB29:
                                           ; SOURCE LINE # 337 
00AF E500    R      MOV    A,FPGA_No
00B1 2500    R      ADD    A,pp
00B3 FD             MOV    R5,A
00B4 E4             CLR    A
00B5 3400           ADDC   A,#000H
00B7 ED             MOV    A,R5
00B8 23             RL     A
00B9 23             RL     A
00BA 54FC           ANL    A,#0FCH
00BC 2400    R      ADD    A,#LOW (Interval)
00BE F582           MOV    DPL,A
00C0 E4             CLR    A
00C1 3400    R      ADDC   A,#HIGH (Interval)
00C3 F583           MOV    DPH,A
00C5 120000  R      LCALL  MV4_XD2SN?C
00C8 AC00    R      MOV    R4,Reference
00CA AD00    R      MOV    R5,Reference+01H
00CC AE00    R      MOV    R6,Reference+02H
00CE AF00    R      MOV    R7,Reference+03H
00D0 120000  R      LCALL  ?C_LSUB
00D3 8C00    R      MOV    Whole,R4
00D5 8D00    R      MOV    Whole+01H,R5
00D7 8E00    R      MOV    Whole+02H,R6
00D9 8F00    R      MOV    Whole+03H,R7
00DB 8031           SJMP   ?NXT43
00DD         ?ELSE17:
                                           ; SOURCE LINE # 341 
00DD C000    R      PUSH   Reference
00DF C000    R      PUSH   Reference+01H
00E1 C000    R      PUSH   Reference+02H
00E3 C000    R      PUSH   Reference+03H
00E5 E500    R      MOV    A,FPGA_No
00E7 2500    R      ADD    A,pp
00E9 FD             MOV    R5,A
00EA E4             CLR    A
00EB 3400           ADDC   A,#000H
00ED ED             MOV    A,R5
00EE 23             RL     A
00EF 23             RL     A
00F0 54FC           ANL    A,#0FCH
00F2 2400    R      ADD    A,#LOW (Interval)
00F4 F582           MOV    DPL,A
00F6 E4             CLR    A
00F7 3400    R      ADDC   A,#HIGH (Interval)
00F9 F583           MOV    DPH,A
00FB 120000  R      LCALL  MV4_XD2RG?C
00FE 120000  R      LCALL  ?C_LSUB
0101 8C00    R      MOV    Whole,R4
0103 8D00    R      MOV    Whole+01H,R5
0105 8E00    R      MOV    Whole+02H,R6
0107 8F00    R      MOV    Whole+03H,R7
                                           ; SOURCE LINE # 342 
0109 7F2D           MOV    R7,#02DH
010B 120000  R      LCALL  _gPutc
010E         ?NXT43:
                                           ; SOURCE LINE # 344 
010E D200    R      SETB   _LongToAscii?BIT
0110 AC00    R      MOV    R4,Whole
0112 AD00    R      MOV    R5,Whole+01H
0114 AE00    R      MOV    R6,Whole+02H
0116 AF00    R      MOV    R7,Whole+03H
0118 120000  R      LCALL  _LongToAscii
                                           ; SOURCE LINE # 345 
011B E500    R      MOV    A,pp
011D 2405           ADD    A,#005H
011F FF             MOV    R7,A
0120 7D10           MOV    R5,#010H
0122 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 346 
0125 E500    R      MOV    A,FPGA_No
0127 2500    R      ADD    A,pp
0129 FF             MOV    R7,A
012A E4             CLR    A
012B 3400           ADDC   A,#000H
012D EF             MOV    A,R7
012E 23             RL     A
012F 23             RL     A
0130 54FC           ANL    A,#0FCH
0132 FB             MOV    R3,A
0133 2400    R      ADD    A,#LOW (Interval)
0135 F582           MOV    DPL,A
0137 E4             CLR    A
0138 3400    R      ADDC   A,#HIGH (Interval)
013A F583           MOV    DPH,A
013C 120000  R      LCALL  MV4_XD2SN?C
013F AC00    R      MOV    R4,min
0141 AD00    R      MOV    R5,min+01H
0143 AE00    R      MOV    R6,min+02H
0145 AF00    R      MOV    R7,min+03H
0147 120000  R      LCALL  ?C_CMPL
014A BF000B         CJNE   R7,#000H,?ELSE18
                                           ; SOURCE LINE # 347 
014D 7B05           MOV    R3,#005H
014F 7A00    R      MOV    R2,#000H
0151 7900    R      MOV    R1,#000H
0153 120000  R      LCALL  _gPutStr
0156 803C           SJMP   ?NXT42
0158         ?ELSE18:
                                           ; SOURCE LINE # 348 
0158 E500    R      MOV    A,FPGA_No
015A 2500    R      ADD    A,pp
015C FF             MOV    R7,A
015D E4             CLR    A
015E 3400           ADDC   A,#000H
0160 EF             MOV    A,R7
0161 23             RL     A
0162 23             RL     A
0163 54FC           ANL    A,#0FCH
0165 FB             MOV    R3,A
0166 2400    R      ADD    A,#LOW (Interval)
0168 F582           MOV    DPL,A
016A E4             CLR    A
016B 3400    R      ADDC   A,#HIGH (Interval)
016D F583           MOV    DPH,A
016F 120000  R      LCALL  MV4_XD2SN?C
0172 AC00    R      MOV    R4,max
0174 AD00    R      MOV    R5,max+01H
0176 AE00    R      MOV    R6,max+02H
0178 AF00    R      MOV    R7,max+03H
017A 120000  R      LCALL  ?C_CMPL
017D BF0014         CJNE   R7,#000H,?NXT42
                                           ; SOURCE LINE # 349 
0180 7B05           MOV    R3,#005H
0182 7A00    R      MOV    R2,#000H
0184 7900    R      MOV    R1,#000H
0186 120000  R      LCALL  _gPutStr
0189 8009           SJMP   ?NXT41
018B         ?ELSE16:
                                           ; SOURCE LINE # 352 
018B 7B05           MOV    R3,#005H
018D 7A00    R      MOV    R2,#000H
018F 7900    R      MOV    R1,#000H
0191 120000  R      LCALL  _gPutStr
0194         ?NXT42:

0194         ?NXT41:
                                           ; SOURCE LINE # 327 
0194 0500    R      INC    pp
0196 E500    R      MOV    A,pp
0198 B40802         CJNE   A,#008H,$ + 5
019B 8003           SJMP   $ + 5
019D 020000  R      LJMP   ?FOR9
01A0 22             RET    

            ; FUNCTION _Display (END)

            ; FUNCTION _Print (BEGIN)
                                           ; SOURCE LINE # 391 
0000 8F00    R      MOV    Chan,R7
                                           ; SOURCE LINE # 365 
0002 E500    R      MOV    A,Chan
0004 2401           ADD    A,#001H
0006 FF             MOV    R7,A
0007 E4             CLR    A
0008 3400           ADDC   A,#000H
000A FE             MOV    R6,A
000B E4             CLR    A
000C FC             MOV    R4,A
000D 7D0A           MOV    R5,#00AH
000F 120000  R      LCALL  ?C_UIDIV
0012 EF             MOV    A,R7
0013 2430           ADD    A,#030H
0015 FF             MOV    R7,A
0016 120000  R      LCALL  _SendChar
0019 E500    R      MOV    A,Chan
001B 2401           ADD    A,#001H
001D FF             MOV    R7,A
001E E4             CLR    A
001F 3400           ADDC   A,#000H
0021 FE             MOV    R6,A
0022 E4             CLR    A
0023 FC             MOV    R4,A
0024 7D0A           MOV    R5,#00AH
0026 120000  R      LCALL  ?C_UIDIV
0029 ED             MOV    A,R5
002A 2430           ADD    A,#030H
002C FF             MOV    R7,A
002D 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 366 
0030 7F3A           MOV    R7,#03AH
0032 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 367 
0035 7F20           MOV    R7,#020H
0037 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 368 
003A E500    R      MOV    A,Chan
003C 23             RL     A
003D 23             RL     A
003E FB             MOV    R3,A
003F 2400    R      ADD    A,#LOW (Interval)
0041 F582           MOV    DPL,A
0043 E4             CLR    A
0044 3400    R      ADDC   A,#HIGH (Interval)
0046 F583           MOV    DPH,A
0048 120000  R      LCALL  MV4_XD2SN?C
004B 74FF           MOV    A,#0FFH
004D FF             MOV    R7,A
004E FE             MOV    R6,A
004F FC             MOV    R4,A
0050 FD             MOV    R5,A
0051 120000  R      LCALL  ?C_CMPL
0054 BF0003         CJNE   R7,#000H,?LAB37
0057 020000  R      LJMP   ?ELSE24
005A         ?LAB37:
                                           ; SOURCE LINE # 370 
005A E500    R      MOV    A,Chan
005C 23             RL     A
005D 23             RL     A
005E FB             MOV    R3,A
005F 2400    R      ADD    A,#LOW (Interval)
0061 F582           MOV    DPL,A
0063 E4             CLR    A
0064 3400    R      ADDC   A,#HIGH (Interval)
0066 F583           MOV    DPH,A
0068 120000  R      LCALL  MV4_XD2SN?C
006B AC00    R      MOV    R4,Reference
006D AD00    R      MOV    R5,Reference+01H
006F AE00    R      MOV    R6,Reference+02H
0071 AF00    R      MOV    R7,Reference+03H
0073 120000  R      LCALL  ?C_CMPLS
0076 BFFF02         CJNE   R7,#0FFH,?LAB39
0079 8025           SJMP   ?ELSE25
007B         ?LAB39:
                                           ; SOURCE LINE # 372 
007B E500    R      MOV    A,Chan
007D 23             RL     A
007E 23             RL     A
007F 2400    R      ADD    A,#LOW (Interval)
0081 F582           MOV    DPL,A
0083 E4             CLR    A
0084 3400    R      ADDC   A,#HIGH (Interval)
0086 F583           MOV    DPH,A
0088 120000  R      LCALL  MV4_XD2SN?C
008B AC00    R      MOV    R4,Reference
008D AD00    R      MOV    R5,Reference+01H
008F AE00    R      MOV    R6,Reference+02H
0091 AF00    R      MOV    R7,Reference+03H
0093 120000  R      LCALL  ?C_LSUB
0096 8C00    R      MOV    Whole,R4
0098 8D00    R      MOV    Whole+01H,R5
009A 8E00    R      MOV    Whole+02H,R6
009C 8F00    R      MOV    Whole+03H,R7
009E 8028           SJMP   ?NXT51
00A0         ?ELSE25:
                                           ; SOURCE LINE # 376 
00A0 C000    R      PUSH   Reference
00A2 C000    R      PUSH   Reference+01H
00A4 C000    R      PUSH   Reference+02H
00A6 C000    R      PUSH   Reference+03H
00A8 E500    R      MOV    A,Chan
00AA 23             RL     A
00AB 23             RL     A
00AC 2400    R      ADD    A,#LOW (Interval)
00AE F582           MOV    DPL,A
00B0 E4             CLR    A
00B1 3400    R      ADDC   A,#HIGH (Interval)
00B3 F583           MOV    DPH,A
00B5 120000  R      LCALL  MV4_XD2RG?C
00B8 120000  R      LCALL  ?C_LSUB
00BB 8C00    R      MOV    Whole,R4
00BD 8D00    R      MOV    Whole+01H,R5
00BF 8E00    R      MOV    Whole+02H,R6
00C1 8F00    R      MOV    Whole+03H,R7
                                           ; SOURCE LINE # 377 
00C3 7F2D           MOV    R7,#02DH
00C5 120000  R      LCALL  _SendChar
00C8         ?NXT51:
                                           ; SOURCE LINE # 379 
00C8 C200    R      CLR    _LongToAscii?BIT
00CA AC00    R      MOV    R4,Whole
00CC AD00    R      MOV    R5,Whole+01H
00CE AE00    R      MOV    R6,Whole+02H
00D0 AF00    R      MOV    R7,Whole+03H
00D2 120000  R      LCALL  _LongToAscii
                                           ; SOURCE LINE # 380 
00D5 E500    R      MOV    A,Chan
00D7 23             RL     A
00D8 23             RL     A
00D9 FB             MOV    R3,A
00DA 2400    R      ADD    A,#LOW (Interval)
00DC F582           MOV    DPL,A
00DE E4             CLR    A
00DF 3400    R      ADDC   A,#HIGH (Interval)
00E1 F583           MOV    DPH,A
00E3 120000  R      LCALL  MV4_XD2SN?C
00E6 AC00    R      MOV    R4,min
00E8 AD00    R      MOV    R5,min+01H
00EA AE00    R      MOV    R6,min+02H
00EC AF00    R      MOV    R7,min+03H
00EE 120000  R      LCALL  ?C_CMPL
00F1 BF000B         CJNE   R7,#000H,?ELSE26
                                           ; SOURCE LINE # 381 
00F4 7B05           MOV    R3,#005H
00F6 7A00    R      MOV    R2,#000H
00F8 7900    R      MOV    R1,#000H
00FA 120000  R      LCALL  _PrintString
00FD 8032           SJMP   ?NXT50
00FF         ?ELSE26:
                                           ; SOURCE LINE # 382 
00FF E500    R      MOV    A,Chan
0101 23             RL     A
0102 23             RL     A
0103 2400    R      ADD    A,#LOW (Interval)
0105 F582           MOV    DPL,A
0107 E4             CLR    A
0108 3400    R      ADDC   A,#HIGH (Interval)
010A F583           MOV    DPH,A
010C 120000  R      LCALL  MV4_XD2SN?C
010F AC00    R      MOV    R4,max
0111 AD00    R      MOV    R5,max+01H
0113 AE00    R      MOV    R6,max+02H
0115 AF00    R      MOV    R7,max+03H
0117 120000  R      LCALL  ?C_CMPL
011A BF0014         CJNE   R7,#000H,?NXT50
                                           ; SOURCE LINE # 384 
011D 7B05           MOV    R3,#005H
011F 7A00    R      MOV    R2,#000H
0121 7900    R      MOV    R1,#000H
0123 120000  R      LCALL  _PrintString
0126 8009           SJMP   ?NXT50
0128         ?ELSE24:
                                           ; SOURCE LINE # 388 
0128 7B05           MOV    R3,#005H
012A 7A00    R      MOV    R2,#000H
012C 7900    R      MOV    R1,#000H
012E 120000  R      LCALL  _PrintString
0131         ?NXT50:
                                           ; SOURCE LINE # 389 
0131 7F0A           MOV    R7,#00AH
0133 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 390 
0136 7F0A           MOV    R7,#00AH
0138 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 391 
013B 120000  R      LCALL  DelayHalfSec
013E 22             RET    

            ; FUNCTION _Print (END)

            ; FUNCTION Initialize (BEGIN)
                                           ; SOURCE LINE # 398 
0000 750005  R      MOV    mStr,#005H
0003 750000  R      MOV    mStr+01H,#000H
0006 750000  R      MOV    mStr+02H,#000H
                                           ; SOURCE LINE # 399 
0009 758C4C         MOV    TH0,#04CH
000C 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 400 
000F 758911         MOV    TMOD,#011H
                                           ; SOURCE LINE # 401 
0012 C281           CLR    LDSRT
0014 C282           CLR    LDSTP
0016 C283           CLR    LDRDY
0018 C284           CLR    LDRMT
                                           ; SOURCE LINE # 402 
001A C290           CLR    BEEP
                                           ; SOURCE LINE # 404 
001C D281           SETB   LDSRT
001E D282           SETB   LDSTP
0020 D283           SETB   LDRDY
0022 D284           SETB   LDRMT
                                           ; SOURCE LINE # 405 
0024 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 406 
0027 C281           CLR    LDSRT
0029 C282           CLR    LDSTP
002B C283           CLR    LDRDY
002D C284           CLR    LDRMT
                                           ; SOURCE LINE # 407 
002F 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 408 
0032 D281           SETB   LDSRT
0034 D282           SETB   LDSTP
0036 D283           SETB   LDRDY
0038 D284           SETB   LDRMT
                                           ; SOURCE LINE # 409 
003A 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 410 
003D C281           CLR    LDSRT
003F C282           CLR    LDSTP
0041 C283           CLR    LDRDY
0043 C284           CLR    LDRMT
                                           ; SOURCE LINE # 412 
0045 E4             CLR    A
0046 FF             MOV    R7,A
0047 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 414 
004A 120000  R      LCALL  gInitialize
                                           ; SOURCE LINE # 415 
004D C200    R      CLR    _gClear?BIT
004F 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 416 
0052 D200    R      SETB   _gClear?BIT
0054 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 417 
0057 7F9C           MOV    R7,#09CH
0059 120000  R      LCALL  _gWriteCommand
                                           ; SOURCE LINE # 420 
005C 7E70           MOV    R6,#070H
005E E4             CLR    A
005F FF             MOV    R7,A
0060 120000  R      LCALL  _ROM_Read
0063 8F00    R      MOV    qReadings,R7
                                           ; SOURCE LINE # 421 
0065 7E70           MOV    R6,#070H
0067 7F05           MOV    R7,#005H
0069 120000  R      LCALL  _ROM_Read
006C 8F00    R      MOV    system,R7
                                           ; SOURCE LINE # 423 
006E E4             CLR    A
006F FF             MOV    R7,A
0070 7D03           MOV    R5,#003H
0072 120000  R      LCALL  _gGotoXY
0075 7B05           MOV    R3,#005H
0077 7A00    R      MOV    R2,#000H
0079 7900    R      MOV    R1,#000H
007B 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 424 
007E 750088  R      MOV    _gDrawRect?BYTE,#088H
0081 D200    R      SETB   _gDrawRect?BIT
0083 7F0A           MOV    R7,#00AH
0085 7D1C           MOV    R5,#01CH
0087 7B0A           MOV    R3,#00AH
0089 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 425 
008C 750088  R      MOV    _gDrawRect?BYTE,#088H
008F D200    R      SETB   _gDrawRect?BIT
0091 7F0C           MOV    R7,#00CH
0093 7D1C           MOV    R5,#01CH
0095 7B0C           MOV    R3,#00CH
0097 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 426 
009A 75009A  R      MOV    _gDrawRect?BYTE,#09AH
009D D200    R      SETB   _gDrawRect?BIT
009F 7F24           MOV    R7,#024H
00A1 7D08           MOV    R5,#008H
00A3 7B70           MOV    R3,#070H
00A5 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 428 
00A8 7F03           MOV    R7,#003H
00AA 7D04           MOV    R5,#004H
00AC 120000  R      LCALL  _gGotoXY
00AF 7B05           MOV    R3,#005H
00B1 7A00    R      MOV    R2,#000H
00B3 7900    R      MOV    R1,#000H
00B5 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 429 
00B8 7F06           MOV    R7,#006H
00BA 7D02           MOV    R5,#002H
00BC 120000  R      LCALL  _gGotoXY
00BF 7B05           MOV    R3,#005H
00C1 7A00    R      MOV    R2,#000H
00C3 7900    R      MOV    R1,#000H
00C5 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 430 
00C8 7F07           MOV    R7,#007H
00CA 7D02           MOV    R5,#002H
00CC 120000  R      LCALL  _gGotoXY
00CF 7B05           MOV    R3,#005H
00D1 7A00    R      MOV    R2,#000H
00D3 7900    R      MOV    R1,#000H
00D5 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 431 
00D8 7F0A           MOV    R7,#00AH
00DA 7D02           MOV    R5,#002H
00DC 120000  R      LCALL  _gGotoXY
00DF 7B05           MOV    R3,#005H
00E1 7A00    R      MOV    R2,#000H
00E3 7900    R      MOV    R1,#000H
00E5 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 434 
00E8 759850         MOV    SCON,#050H
                                           ; SOURCE LINE # 435 
00EB 539BEC         ANL    BDRCON,#0ECH
00EE 859B9B         MOV    BDRCON,BDRCON
                                           ; SOURCE LINE # 436 
00F1 439B0C         ORL    BDRCON,#00CH
00F4 859B9B         MOV    BDRCON,BDRCON
                                           ; SOURCE LINE # 437 
00F7 759AFA         MOV    BRL,#0FAH
                                           ; SOURCE LINE # 438 
00FA 439B10         ORL    BDRCON,#010H
00FD 859B9B         MOV    BDRCON,BDRCON
                                           ; SOURCE LINE # 441 
0100 D2AC           SETB   ES
                                           ; SOURCE LINE # 444 
0102 D2AB           SETB   ET1
                                           ; SOURCE LINE # 447 
0104 D2AF           SETB   EA
                                           ; SOURCE LINE # 448 
0106 D288           SETB   IT0
                                           ; SOURCE LINE # 449 
0108 D28A           SETB   IT1
                                           ; SOURCE LINE # 456 
010A E4             CLR    A
010B 900000  R      MOV    DPTR,#offset
010E F0             MOVX   @DPTR,A
010F 900000  R      MOV    DPTR,#offset+01H
0112 F0             MOVX   @DPTR,A
0113 900000  R      MOV    DPTR,#offset+02H
0116 F0             MOVX   @DPTR,A
0117 900000  R      MOV    DPTR,#offset+03H
011A F0             MOVX   @DPTR,A
011B 900000  R      MOV    DPTR,#offset+04H
011E F0             MOVX   @DPTR,A
011F 900000  R      MOV    DPTR,#offset+05H
0122 F0             MOVX   @DPTR,A
0123 900000  R      MOV    DPTR,#offset+06H
0126 F0             MOVX   @DPTR,A
0127 900000  R      MOV    DPTR,#offset+07H
012A F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 457 
012B 900000  R      MOV    DPTR,#offset+08H
012E F0             MOVX   @DPTR,A
012F 900000  R      MOV    DPTR,#offset+09H
0132 F0             MOVX   @DPTR,A
0133 900000  R      MOV    DPTR,#offset+0AH
0136 F0             MOVX   @DPTR,A
0137 900000  R      MOV    DPTR,#offset+0BH
013A F0             MOVX   @DPTR,A
013B 900000  R      MOV    DPTR,#offset+0CH
013E F0             MOVX   @DPTR,A
013F 900000  R      MOV    DPTR,#offset+0DH
0142 F0             MOVX   @DPTR,A
0143 900000  R      MOV    DPTR,#offset+0EH
0146 F0             MOVX   @DPTR,A
0147 900000  R      MOV    DPTR,#offset+0FH
014A F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 458 
014B 900000  R      MOV    DPTR,#offset+010H
014E F0             MOVX   @DPTR,A
014F 900000  R      MOV    DPTR,#offset+011H
0152 F0             MOVX   @DPTR,A
0153 900000  R      MOV    DPTR,#offset+012H
0156 F0             MOVX   @DPTR,A
0157 900000  R      MOV    DPTR,#offset+013H
015A F0             MOVX   @DPTR,A
015B 900000  R      MOV    DPTR,#offset+014H
015E F0             MOVX   @DPTR,A
015F 900000  R      MOV    DPTR,#offset+015H
0162 F0             MOVX   @DPTR,A
0163 900000  R      MOV    DPTR,#offset+016H
0166 F0             MOVX   @DPTR,A
0167 900000  R      MOV    DPTR,#offset+017H
016A F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 459 
016B 900000  R      MOV    DPTR,#offset+018H
016E F0             MOVX   @DPTR,A
016F 900000  R      MOV    DPTR,#offset+019H
0172 F0             MOVX   @DPTR,A
0173 900000  R      MOV    DPTR,#offset+01AH
0176 F0             MOVX   @DPTR,A
0177 900000  R      MOV    DPTR,#offset+01BH
017A F0             MOVX   @DPTR,A
017B 900000  R      MOV    DPTR,#offset+01CH
017E F0             MOVX   @DPTR,A
017F 900000  R      MOV    DPTR,#offset+01DH
0182 F0             MOVX   @DPTR,A
0183 900000  R      MOV    DPTR,#offset+01EH
0186 F0             MOVX   @DPTR,A
0187 900000  R      MOV    DPTR,#offset+01FH
018A F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 462 
018B 7FC0           MOV    R7,#0C0H
018D 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 463 
0190 7F41           MOV    R7,#041H
0192 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 464 
0195 7F42           MOV    R7,#042H
0197 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 465 
019A 7F46           MOV    R7,#046H
019C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 469 
019F 7B02           MOV    R3,#002H
01A1 7A00    R      MOV    R2,#HIGH (time)
01A3 7900    R      MOV    R1,#LOW (time)
01A5 120000  R      LCALL  _rBrstReadClk
                                           ; SOURCE LINE # 470 
01A8 900000  R      MOV    DPTR,#time
01AB E0             MOVX   A,@DPTR
01AC B45901         CJNE   A,#059H,?LAB55
01AF D3             SETB   C
01B0         ?LAB55:
01B0 4002           JC     ?NXT61
01B2 D200    R      SETB   rtc_Problem
01B4         ?NXT61:
                                           ; SOURCE LINE # 471 
01B4 900000  R      MOV    DPTR,#time+01H
01B7 E0             MOVX   A,@DPTR
01B8 B45901         CJNE   A,#059H,?LAB57
01BB D3             SETB   C
01BC         ?LAB57:
01BC 4002           JC     ?NXT62
01BE D200    R      SETB   rtc_Problem
01C0         ?NXT62:
                                           ; SOURCE LINE # 472 
01C0 900000  R      MOV    DPTR,#time+02H
01C3 E0             MOVX   A,@DPTR
01C4 B42301         CJNE   A,#023H,?LAB59
01C7 D3             SETB   C
01C8         ?LAB59:
01C8 4002           JC     ?NXT63
01CA D200    R      SETB   rtc_Problem
01CC         ?NXT63:
                                           ; SOURCE LINE # 473 
01CC 900000  R      MOV    DPTR,#time+03H
01CF E0             MOVX   A,@DPTR
01D0 B43101         CJNE   A,#031H,?LAB61
01D3 D3             SETB   C
01D4         ?LAB61:
01D4 4002           JC     ?NXT64
01D6 D200    R      SETB   rtc_Problem
01D8         ?NXT64:
                                           ; SOURCE LINE # 474 
01D8 900000  R      MOV    DPTR,#time+04H
01DB E0             MOVX   A,@DPTR
01DC B41201         CJNE   A,#012H,?LAB63
01DF D3             SETB   C
01E0         ?LAB63:
01E0 4002           JC     ?NXT65
01E2 D200    R      SETB   rtc_Problem
01E4         ?NXT65:
                                           ; SOURCE LINE # 475 
01E4 900000  R      MOV    DPTR,#time+06H
01E7 E0             MOVX   A,@DPTR
01E8 B49901         CJNE   A,#099H,?LAB65
01EB D3             SETB   C
01EC         ?LAB65:
01EC 4002           JC     ?NXT66
01EE D200    R      SETB   rtc_Problem
01F0         ?NXT66:
                                           ; SOURCE LINE # 476 
01F0 300046  R      JNB    rtc_Problem,?NXT67
                                           ; SOURCE LINE # 479 
01F3 7F8E           MOV    R7,#08EH
01F5 E4             CLR    A
01F6 FD             MOV    R5,A
01F7 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 480 
01FA 7F80           MOV    R7,#080H
01FC E4             CLR    A
01FD FD             MOV    R5,A
01FE 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 481 
0201 7F82           MOV    R7,#082H
0203 E4             CLR    A
0204 FD             MOV    R5,A
0205 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 482 
0208 7F84           MOV    R7,#084H
020A 7D09           MOV    R5,#009H
020C 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 483 
020F 7F86           MOV    R7,#086H
0211 7D01           MOV    R5,#001H
0213 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 484 
0216 7F88           MOV    R7,#088H
0218 7D04           MOV    R5,#004H
021A 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 485 
021D 7F8A           MOV    R7,#08AH
021F 7D01           MOV    R5,#001H
0221 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 486 
0224 7F8C           MOV    R7,#08CH
0226 7D13           MOV    R5,#013H
0228 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 487 
022B 7FC0           MOV    R7,#0C0H
022D 7D40           MOV    R5,#040H
022F 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 488 
0232 7F8E           MOV    R7,#08EH
0234 7D80           MOV    R5,#080H
0236 120000  R      LCALL  _rWriteClk
0239         ?NXT67:
                                           ; SOURCE LINE # 490 
0239 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 492 
023C 7B02           MOV    R3,#002H
023E 7A00    R      MOV    R2,#HIGH (time)
0240 7900    R      MOV    R1,#LOW (time)
0242 120000  R      LCALL  _rBrstReadClk
                                           ; SOURCE LINE # 493 
0245 7F0F           MOV    R7,#00FH
0247 7D01           MOV    R5,#001H
0249 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 494 
024C 7B02           MOV    R3,#002H
024E 7A00    R      MOV    R2,#HIGH (time)
0250 7900    R      MOV    R1,#LOW (time)
0252 120000  R      LCALL  _rDisp_Date
                                           ; SOURCE LINE # 495 
0255 7F20           MOV    R7,#020H
0257 120000  R      LCALL  _gPutc
025A 7F20           MOV    R7,#020H
025C 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 496 
025F 7B02           MOV    R3,#002H
0261 7A00    R      MOV    R2,#HIGH (time)
0263 7900    R      MOV    R1,#LOW (time)
0265 120000  R      LCALL  _rDisp_Time
                                           ; SOURCE LINE # 498 
0268 750020  R      MOV    rxState,#020H
                                           ; SOURCE LINE # 499 
026B 750011  R      MOV    next,#011H
                                           ; SOURCE LINE # 500 
026E D2AA           SETB   EX1
0270 D28A           SETB   IT1
                                           ; SOURCE LINE # 504 
0272 D28E           SETB   TR1
                                           ; SOURCE LINE # 507 
0274 7F45           MOV    R7,#045H
0276 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 508 
0279 D200    R      SETB   isInit
027B 22             RET    

            ; FUNCTION Initialize (END)

            ; FUNCTION _rDisp_Time (BEGIN)
                                           ; SOURCE LINE # 523 
0000 8B00    R      MOV    tm,R3
0002 8A00    R      MOV    tm+01H,R2
0004 8900    R      MOV    tm+02H,R1
                                           ; SOURCE LINE # 516 
0006 900002         MOV    DPTR,#00002H
0009 120000  R      LCALL  MV_PTR2C1?C
000C FA             MOV    R2,A
000D 7C00           MOV    R4,#000H
000F 54F0           ANL    A,#0F0H
0011 FD             MOV    R5,A
0012 E4             CLR    A
0013 75F004         MOV    B,#004H
0016         ?LAB72:
0016 C3             CLR    C
0017 13             RRC    A
0018 CD             XCH    A,R5
0019 13             RRC    A
001A CD             XCH    A,R5
001B D5F0F8         DJNZ   B,?LAB72
001E ED             MOV    A,R5
001F 2430           ADD    A,#030H
0021 FF             MOV    R7,A
0022 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 517 
0025 AB00    R      MOV    R3,tm
0027 AA00    R      MOV    R2,tm+01H
0029 A900    R      MOV    R1,tm+02H
002B 900002         MOV    DPTR,#00002H
002E 120000  R      LCALL  MV_PTR2C1?C
0031 540F           ANL    A,#00FH
0033 2430           ADD    A,#030H
0035 FF             MOV    R7,A
0036 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 518 
0039 7F3A           MOV    R7,#03AH
003B 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 519 
003E AB00    R      MOV    R3,tm
0040 AA00    R      MOV    R2,tm+01H
0042 A900    R      MOV    R1,tm+02H
0044 900001         MOV    DPTR,#00001H
0047 120000  R      LCALL  MV_PTR2C1?C
004A FA             MOV    R2,A
004B 7C00           MOV    R4,#000H
004D 54F0           ANL    A,#0F0H
004F FD             MOV    R5,A
0050 E4             CLR    A
0051 75F004         MOV    B,#004H
0054         ?LAB73:
0054 C3             CLR    C
0055 13             RRC    A
0056 CD             XCH    A,R5
0057 13             RRC    A
0058 CD             XCH    A,R5
0059 D5F0F8         DJNZ   B,?LAB73
005C ED             MOV    A,R5
005D 2430           ADD    A,#030H
005F FF             MOV    R7,A
0060 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 520 
0063 AB00    R      MOV    R3,tm
0065 AA00    R      MOV    R2,tm+01H
0067 A900    R      MOV    R1,tm+02H
0069 900001         MOV    DPTR,#00001H
006C 120000  R      LCALL  MV_PTR2C1?C
006F 540F           ANL    A,#00FH
0071 2430           ADD    A,#030H
0073 FF             MOV    R7,A
0074 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 521 
0077 7F3A           MOV    R7,#03AH
0079 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 522 
007C AB00    R      MOV    R3,tm
007E AA00    R      MOV    R2,tm+01H
0080 A900    R      MOV    R1,tm+02H
0082 120000  R      LCALL  IPGN1?C
0085 7C00           MOV    R4,#000H
0087 54F0           ANL    A,#0F0H
0089 FD             MOV    R5,A
008A E4             CLR    A
008B 75F004         MOV    B,#004H
008E         ?LAB74:
008E C3             CLR    C
008F 13             RRC    A
0090 CD             XCH    A,R5
0091 13             RRC    A
0092 CD             XCH    A,R5
0093 D5F0F8         DJNZ   B,?LAB74
0096 ED             MOV    A,R5
0097 2430           ADD    A,#030H
0099 FF             MOV    R7,A
009A 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 523 
009D AB00    R      MOV    R3,tm
009F AA00    R      MOV    R2,tm+01H
00A1 A900    R      MOV    R1,tm+02H
00A3 120000  R      LCALL  IPGN1?C
00A6 540F           ANL    A,#00FH
00A8 2430           ADD    A,#030H
00AA FF             MOV    R7,A
00AB 120000  R      LCALL  _gPutc
00AE 22             RET    

            ; FUNCTION _rDisp_Time (END)

            ; FUNCTION _rDisp_Date (BEGIN)
                                           ; SOURCE LINE # 537 
0000 8B00    R      MOV    tm,R3
0002 8A00    R      MOV    tm+01H,R2
0004 8900    R      MOV    tm+02H,R1
                                           ; SOURCE LINE # 530 
0006 900003         MOV    DPTR,#00003H
0009 120000  R      LCALL  MV_PTR2C1?C
000C FA             MOV    R2,A
000D 7C00           MOV    R4,#000H
000F 54F0           ANL    A,#0F0H
0011 FD             MOV    R5,A
0012 E4             CLR    A
0013 75F004         MOV    B,#004H
0016         ?LAB80:
0016 C3             CLR    C
0017 13             RRC    A
0018 CD             XCH    A,R5
0019 13             RRC    A
001A CD             XCH    A,R5
001B D5F0F8         DJNZ   B,?LAB80
001E ED             MOV    A,R5
001F 2430           ADD    A,#030H
0021 FF             MOV    R7,A
0022 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 531 
0025 AB00    R      MOV    R3,tm
0027 AA00    R      MOV    R2,tm+01H
0029 A900    R      MOV    R1,tm+02H
002B 900003         MOV    DPTR,#00003H
002E 120000  R      LCALL  MV_PTR2C1?C
0031 540F           ANL    A,#00FH
0033 2430           ADD    A,#030H
0035 FF             MOV    R7,A
0036 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 532 
0039 7F2F           MOV    R7,#02FH
003B 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 533 
003E AB00    R      MOV    R3,tm
0040 AA00    R      MOV    R2,tm+01H
0042 A900    R      MOV    R1,tm+02H
0044 900004         MOV    DPTR,#00004H
0047 120000  R      LCALL  MV_PTR2C1?C
004A FA             MOV    R2,A
004B 7C00           MOV    R4,#000H
004D 54F0           ANL    A,#0F0H
004F FD             MOV    R5,A
0050 E4             CLR    A
0051 75F004         MOV    B,#004H
0054         ?LAB81:
0054 C3             CLR    C
0055 13             RRC    A
0056 CD             XCH    A,R5
0057 13             RRC    A
0058 CD             XCH    A,R5
0059 D5F0F8         DJNZ   B,?LAB81
005C ED             MOV    A,R5
005D 2430           ADD    A,#030H
005F FF             MOV    R7,A
0060 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 534 
0063 AB00    R      MOV    R3,tm
0065 AA00    R      MOV    R2,tm+01H
0067 A900    R      MOV    R1,tm+02H
0069 900004         MOV    DPTR,#00004H
006C 120000  R      LCALL  MV_PTR2C1?C
006F 540F           ANL    A,#00FH
0071 2430           ADD    A,#030H
0073 FF             MOV    R7,A
0074 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 535 
0077 7F2F           MOV    R7,#02FH
0079 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 536 
007C AB00    R      MOV    R3,tm
007E AA00    R      MOV    R2,tm+01H
0080 A900    R      MOV    R1,tm+02H
0082 900006         MOV    DPTR,#00006H
0085 120000  R      LCALL  MV_PTR2C1?C
0088 FA             MOV    R2,A
0089 7C00           MOV    R4,#000H
008B 54F0           ANL    A,#0F0H
008D FD             MOV    R5,A
008E E4             CLR    A
008F 75F004         MOV    B,#004H
0092         ?LAB82:
0092 C3             CLR    C
0093 13             RRC    A
0094 CD             XCH    A,R5
0095 13             RRC    A
0096 CD             XCH    A,R5
0097 D5F0F8         DJNZ   B,?LAB82
009A ED             MOV    A,R5
009B 2430           ADD    A,#030H
009D FF             MOV    R7,A
009E 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 537 
00A1 AB00    R      MOV    R3,tm
00A3 AA00    R      MOV    R2,tm+01H
00A5 A900    R      MOV    R1,tm+02H
00A7 900006         MOV    DPTR,#00006H
00AA 120000  R      LCALL  MV_PTR2C1?C
00AD 540F           ANL    A,#00FH
00AF 2430           ADD    A,#030H
00B1 FF             MOV    R7,A
00B2 120000  R      LCALL  _gPutc
00B5 22             RET    

            ; FUNCTION _rDisp_Date (END)

            ; FUNCTION _rPrint_Time (BEGIN)
                                           ; SOURCE LINE # 561 
0000 8B00    R      MOV    tm,R3
0002 8A00    R      MOV    tm+01H,R2
0004 8900    R      MOV    tm+02H,R1
                                           ; SOURCE LINE # 545 
0006 900002         MOV    DPTR,#00002H
0009 120000  R      LCALL  MV_PTR2C1?C
000C FA             MOV    R2,A
000D 7C00           MOV    R4,#000H
000F 54F0           ANL    A,#0F0H
0011 FD             MOV    R5,A
0012 E4             CLR    A
0013 75F004         MOV    B,#004H
0016         ?LAB91:
0016 C3             CLR    C
0017 13             RRC    A
0018 CD             XCH    A,R5
0019 13             RRC    A
001A CD             XCH    A,R5
001B D5F0F8         DJNZ   B,?LAB91
001E ED             MOV    A,R5
001F 2430           ADD    A,#030H
0021 FF             MOV    R7,A
0022 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 546 
0025 AB00    R      MOV    R3,tm
0027 AA00    R      MOV    R2,tm+01H
0029 A900    R      MOV    R1,tm+02H
002B 900002         MOV    DPTR,#00002H
002E 120000  R      LCALL  MV_PTR2C1?C
0031 540F           ANL    A,#00FH
0033 2430           ADD    A,#030H
0035 FF             MOV    R7,A
0036 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 547 
0039 7F3A           MOV    R7,#03AH
003B 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 548 
003E AB00    R      MOV    R3,tm
0040 AA00    R      MOV    R2,tm+01H
0042 A900    R      MOV    R1,tm+02H
0044 900001         MOV    DPTR,#00001H
0047 120000  R      LCALL  MV_PTR2C1?C
004A FA             MOV    R2,A
004B 7C00           MOV    R4,#000H
004D 54F0           ANL    A,#0F0H
004F FD             MOV    R5,A
0050 E4             CLR    A
0051 75F004         MOV    B,#004H
0054         ?LAB92:
0054 C3             CLR    C
0055 13             RRC    A
0056 CD             XCH    A,R5
0057 13             RRC    A
0058 CD             XCH    A,R5
0059 D5F0F8         DJNZ   B,?LAB92
005C ED             MOV    A,R5
005D 2430           ADD    A,#030H
005F FF             MOV    R7,A
0060 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 549 
0063 AB00    R      MOV    R3,tm
0065 AA00    R      MOV    R2,tm+01H
0067 A900    R      MOV    R1,tm+02H
0069 900001         MOV    DPTR,#00001H
006C 120000  R      LCALL  MV_PTR2C1?C
006F 540F           ANL    A,#00FH
0071 2430           ADD    A,#030H
0073 FF             MOV    R7,A
0074 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 550 
0077 7F3A           MOV    R7,#03AH
0079 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 551 
007C AB00    R      MOV    R3,tm
007E AA00    R      MOV    R2,tm+01H
0080 A900    R      MOV    R1,tm+02H
0082 120000  R      LCALL  IPGN1?C
0085 7C00           MOV    R4,#000H
0087 54F0           ANL    A,#0F0H
0089 FD             MOV    R5,A
008A E4             CLR    A
008B 75F004         MOV    B,#004H
008E         ?LAB93:
008E C3             CLR    C
008F 13             RRC    A
0090 CD             XCH    A,R5
0091 13             RRC    A
0092 CD             XCH    A,R5
0093 D5F0F8         DJNZ   B,?LAB93
0096 ED             MOV    A,R5
0097 2430           ADD    A,#030H
0099 FF             MOV    R7,A
009A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 552 
009D AB00    R      MOV    R3,tm
009F AA00    R      MOV    R2,tm+01H
00A1 A900    R      MOV    R1,tm+02H
00A3 120000  R      LCALL  IPGN1?C
00A6 540F           ANL    A,#00FH
00A8 2430           ADD    A,#030H
00AA FF             MOV    R7,A
00AB 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 553 
00AE 7F20           MOV    R7,#020H
00B0 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 554 
00B3 AB00    R      MOV    R3,tm
00B5 AA00    R      MOV    R2,tm+01H
00B7 A900    R      MOV    R1,tm+02H
00B9 900003         MOV    DPTR,#00003H
00BC 120000  R      LCALL  MV_PTR2C1?C
00BF FA             MOV    R2,A
00C0 7C00           MOV    R4,#000H
00C2 54F0           ANL    A,#0F0H
00C4 FD             MOV    R5,A
00C5 E4             CLR    A
00C6 75F004         MOV    B,#004H
00C9         ?LAB94:
00C9 C3             CLR    C
00CA 13             RRC    A
00CB CD             XCH    A,R5
00CC 13             RRC    A
00CD CD             XCH    A,R5
00CE D5F0F8         DJNZ   B,?LAB94
00D1 ED             MOV    A,R5
00D2 2430           ADD    A,#030H
00D4 FF             MOV    R7,A
00D5 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 555 
00D8 AB00    R      MOV    R3,tm
00DA AA00    R      MOV    R2,tm+01H
00DC A900    R      MOV    R1,tm+02H
00DE 900003         MOV    DPTR,#00003H
00E1 120000  R      LCALL  MV_PTR2C1?C
00E4 540F           ANL    A,#00FH
00E6 2430           ADD    A,#030H
00E8 FF             MOV    R7,A
00E9 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 556 
00EC 7F2F           MOV    R7,#02FH
00EE 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 557 
00F1 AB00    R      MOV    R3,tm
00F3 AA00    R      MOV    R2,tm+01H
00F5 A900    R      MOV    R1,tm+02H
00F7 900004         MOV    DPTR,#00004H
00FA 120000  R      LCALL  MV_PTR2C1?C
00FD FA             MOV    R2,A
00FE 7C00           MOV    R4,#000H
0100 54F0           ANL    A,#0F0H
0102 FD             MOV    R5,A
0103 E4             CLR    A
0104 75F004         MOV    B,#004H
0107         ?LAB95:
0107 C3             CLR    C
0108 13             RRC    A
0109 CD             XCH    A,R5
010A 13             RRC    A
010B CD             XCH    A,R5
010C D5F0F8         DJNZ   B,?LAB95
010F ED             MOV    A,R5
0110 2430           ADD    A,#030H
0112 FF             MOV    R7,A
0113 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 558 
0116 AB00    R      MOV    R3,tm
0118 AA00    R      MOV    R2,tm+01H
011A A900    R      MOV    R1,tm+02H
011C 900004         MOV    DPTR,#00004H
011F 120000  R      LCALL  MV_PTR2C1?C
0122 540F           ANL    A,#00FH
0124 2430           ADD    A,#030H
0126 FF             MOV    R7,A
0127 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 559 
012A 7F2F           MOV    R7,#02FH
012C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 560 
012F AB00    R      MOV    R3,tm
0131 AA00    R      MOV    R2,tm+01H
0133 A900    R      MOV    R1,tm+02H
0135 900006         MOV    DPTR,#00006H
0138 120000  R      LCALL  MV_PTR2C1?C
013B FA             MOV    R2,A
013C 7C00           MOV    R4,#000H
013E 54F0           ANL    A,#0F0H
0140 FD             MOV    R5,A
0141 E4             CLR    A
0142 75F004         MOV    B,#004H
0145         ?LAB96:
0145 C3             CLR    C
0146 13             RRC    A
0147 CD             XCH    A,R5
0148 13             RRC    A
0149 CD             XCH    A,R5
014A D5F0F8         DJNZ   B,?LAB96
014D ED             MOV    A,R5
014E 2430           ADD    A,#030H
0150 FF             MOV    R7,A
0151 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 561 
0154 AB00    R      MOV    R3,tm
0156 AA00    R      MOV    R2,tm+01H
0158 A900    R      MOV    R1,tm+02H
015A 900006         MOV    DPTR,#00006H
015D 120000  R      LCALL  MV_PTR2C1?C
0160 540F           ANL    A,#00FH
0162 2430           ADD    A,#030H
0164 FF             MOV    R7,A
0165 120000  R      LCALL  _SendChar
0168 22             RET    

            ; FUNCTION _rPrint_Time (END)

            ; FUNCTION _ROM_WritePage (BEGIN)
                                           ; SOURCE LINE # 621 
0000 8E00    R      MOV    addr,R6
0002 8F00    R      MOV    addr+01H,R7
                                           ; SOURCE LINE # 571 
0004 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 572 
0007 7FA0           MOV    R7,#0A0H
0009 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 573 
000C E4             CLR    A
000D FF             MOV    R7,A
000E FC             MOV    R4,A
000F AE00    R      MOV    R6,addr
0011 7DFF           MOV    R5,#0FFH
0013 120000  R      LCALL  ?C_UIDIV
0016 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 574 
0019 AF00    R      MOV    R7,addr+01H
001B 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 575 
001E 750000  R      MOV    pp,#000H
0021         ?FOR12:
                                           ; SOURCE LINE # 577 
0021 E500    R      MOV    A,pp
0023 23             RL     A
0024 23             RL     A
0025 2400    R      ADD    A,#LOW (Interval)
0027 F582           MOV    DPL,A
0029 E4             CLR    A
002A 3400    R      ADDC   A,#HIGH (Interval)
002C F583           MOV    DPH,A
002E A3             INC    DPTR
002F A3             INC    DPTR
0030 A3             INC    DPTR
0031 E0             MOVX   A,@DPTR
0032 FF             MOV    R7,A
0033 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 578 
0036 E500    R      MOV    A,pp
0038 23             RL     A
0039 23             RL     A
003A 2400    R      ADD    A,#LOW (Interval)
003C F582           MOV    DPL,A
003E E4             CLR    A
003F 3400    R      ADDC   A,#HIGH (Interval)
0041 F583           MOV    DPH,A
0043 120000  R      LCALL  MV4_XD2RG?C
0046 75F008         MOV    B,#008H
0049 120000  R      LCALL  ?C_LSSHR
004C 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 579 
004F E500    R      MOV    A,pp
0051 23             RL     A
0052 23             RL     A
0053 2400    R      ADD    A,#LOW (Interval)
0055 F582           MOV    DPL,A
0057 E4             CLR    A
0058 3400    R      ADDC   A,#HIGH (Interval)
005A F583           MOV    DPH,A
005C 120000  R      LCALL  MV4_XD2RG?C
005F 75F010         MOV    B,#010H
0062 120000  R      LCALL  ?C_LSSHR
0065 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 580 
0068 E500    R      MOV    A,pp
006A 23             RL     A
006B 23             RL     A
006C 2400    R      ADD    A,#LOW (Interval)
006E F582           MOV    DPL,A
0070 E4             CLR    A
0071 3400    R      ADDC   A,#HIGH (Interval)
0073 F583           MOV    DPH,A
0075 120000  R      LCALL  MV4_XD2RG?C
0078 75F018         MOV    B,#018H
007B 120000  R      LCALL  ?C_LSSHR
007E 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 575 
0081 0500    R      INC    pp
0083 E500    R      MOV    A,pp
0085 B41099         CJNE   A,#010H,?FOR12
                                           ; SOURCE LINE # 582 
0088 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 583 
008B 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 584 
008E 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 586 
0091 120000  R      LCALL  I2C_start
                                           ; SOURCE LINE # 587 
0094 7FA0           MOV    R7,#0A0H
0096 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 588 
0099 E500    R      MOV    A,addr+01H
009B 2440           ADD    A,#040H
009D E4             CLR    A
009E 3500    R      ADDC   A,addr
00A0 FA             MOV    R2,A
00A1 E4             CLR    A
00A2 FF             MOV    R7,A
00A3 EA             MOV    A,R2
00A4 FE             MOV    R6,A
00A5 E4             CLR    A
00A6 FC             MOV    R4,A
00A7 7DFF           MOV    R5,#0FFH
00A9 120000  R      LCALL  ?C_UIDIV
00AC 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 589 
00AF E500    R      MOV    A,addr+01H
00B1 2440           ADD    A,#040H
00B3 FF             MOV    R7,A
00B4 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 590 
00B7 750010  R      MOV    pp,#010H
00BA         ?FOR13:
                                           ; SOURCE LINE # 592 
00BA E500    R      MOV    A,pp
00BC 23             RL     A
00BD 23             RL     A
00BE 2400    R      ADD    A,#LOW (Interval)
00C0 F582           MOV    DPL,A
00C2 E4             CLR    A
00C3 3400    R      ADDC   A,#HIGH (Interval)
00C5 F583           MOV    DPH,A
00C7 A3             INC    DPTR
00C8 A3             INC    DPTR
00C9 A3             INC    DPTR
00CA E0             MOVX   A,@DPTR
00CB FF             MOV    R7,A
00CC 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 593 
00CF E500    R      MOV    A,pp
00D1 23             RL     A
00D2 23             RL     A
00D3 2400    R      ADD    A,#LOW (Interval)
00D5 F582           MOV    DPL,A
00D7 E4             CLR    A
00D8 3400    R      ADDC   A,#HIGH (Interval)
00DA F583           MOV    DPH,A
00DC 120000  R      LCALL  MV4_XD2RG?C
00DF 75F008         MOV    B,#008H
00E2 120000  R      LCALL  ?C_LSSHR
00E5 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 594 
00E8 E500    R      MOV    A,pp
00EA 23             RL     A
00EB 23             RL     A
00EC 2400    R      ADD    A,#LOW (Interval)
00EE F582           MOV    DPL,A
00F0 E4             CLR    A
00F1 3400    R      ADDC   A,#HIGH (Interval)
00F3 F583           MOV    DPH,A
00F5 120000  R      LCALL  MV4_XD2RG?C
00F8 75F010         MOV    B,#010H
00FB 120000  R      LCALL  ?C_LSSHR
00FE 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 595 
0101 E500    R      MOV    A,pp
0103 23             RL     A
0104 23             RL     A
0105 2400    R      ADD    A,#LOW (Interval)
0107 F582           MOV    DPL,A
0109 E4             CLR    A
010A 3400    R      ADDC   A,#HIGH (Interval)
010C F583           MOV    DPH,A
010E 120000  R      LCALL  MV4_XD2RG?C
0111 75F018         MOV    B,#018H
0114 120000  R      LCALL  ?C_LSSHR
0117 120000  R      LCALL  _I2C_write
                                           ; SOURCE LINE # 575 
011A 0500    R      INC    pp
011C E500    R      MOV    A,pp
011E B42099         CJNE   A,#020H,?FOR13
                                           ; SOURCE LINE # 597 
0121 120000  R      LCALL  I2C_stop
                                           ; SOURCE LINE # 598 
0124 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 599 
0127 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 602 
012A E500    R      MOV    A,addr+01H
012C 2480           ADD    A,#080H
012E FF             MOV    R7,A
012F E500    R      MOV    A,addr
0131 3401           ADDC   A,#001H
0133 FE             MOV    R6,A
0134 AD00    R      MOV    R5,StopTh1
0136 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 603 
0139 E500    R      MOV    A,addr+01H
013B 2481           ADD    A,#081H
013D FF             MOV    R7,A
013E E500    R      MOV    A,addr
0140 3401           ADDC   A,#001H
0142 FE             MOV    R6,A
0143 AD00    R      MOV    R5,StartTh2
0145 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 605 
0148 E500    R      MOV    A,addr+01H
014A 2482           ADD    A,#082H
014C FF             MOV    R7,A
014D E500    R      MOV    A,addr
014F 3401           ADDC   A,#001H
0151 FE             MOV    R6,A
0152 900000  R      MOV    DPTR,#tSave
0155 E0             MOVX   A,@DPTR
0156 FD             MOV    R5,A
0157 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 606 
015A E500    R      MOV    A,addr+01H
015C 2483           ADD    A,#083H
015E FF             MOV    R7,A
015F E500    R      MOV    A,addr
0161 3401           ADDC   A,#001H
0163 FE             MOV    R6,A
0164 900000  R      MOV    DPTR,#tSave+01H
0167 E0             MOVX   A,@DPTR
0168 FD             MOV    R5,A
0169 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 607 
016C E500    R      MOV    A,addr+01H
016E 2484           ADD    A,#084H
0170 FF             MOV    R7,A
0171 E500    R      MOV    A,addr
0173 3401           ADDC   A,#001H
0175 FE             MOV    R6,A
0176 900000  R      MOV    DPTR,#tSave+02H
0179 E0             MOVX   A,@DPTR
017A FD             MOV    R5,A
017B 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 608 
017E E500    R      MOV    A,addr+01H
0180 2485           ADD    A,#085H
0182 FF             MOV    R7,A
0183 E500    R      MOV    A,addr
0185 3401           ADDC   A,#001H
0187 FE             MOV    R6,A
0188 900000  R      MOV    DPTR,#tSave+03H
018B E0             MOVX   A,@DPTR
018C FD             MOV    R5,A
018D 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 609 
0190 E500    R      MOV    A,addr+01H
0192 2486           ADD    A,#086H
0194 FF             MOV    R7,A
0195 E500    R      MOV    A,addr
0197 3401           ADDC   A,#001H
0199 FE             MOV    R6,A
019A 900000  R      MOV    DPTR,#tSave+04H
019D E0             MOVX   A,@DPTR
019E FD             MOV    R5,A
019F 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 610 
01A2 E500    R      MOV    A,addr+01H
01A4 2487           ADD    A,#087H
01A6 FF             MOV    R7,A
01A7 E500    R      MOV    A,addr
01A9 3401           ADDC   A,#001H
01AB FE             MOV    R6,A
01AC 900000  R      MOV    DPTR,#tSave+05H
01AF E0             MOVX   A,@DPTR
01B0 FD             MOV    R5,A
01B1 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 611 
01B4 E500    R      MOV    A,addr+01H
01B6 2488           ADD    A,#088H
01B8 FF             MOV    R7,A
01B9 E500    R      MOV    A,addr
01BB 3401           ADDC   A,#001H
01BD FE             MOV    R6,A
01BE 900000  R      MOV    DPTR,#tSave+06H
01C1 E0             MOVX   A,@DPTR
01C2 FD             MOV    R5,A
01C3 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 613 
01C6 E500    R      MOV    A,addr+01H
01C8 2489           ADD    A,#089H
01CA FF             MOV    R7,A
01CB E500    R      MOV    A,addr
01CD 3401           ADDC   A,#001H
01CF FE             MOV    R6,A
01D0 AD00    R      MOV    R5,min+03H
01D2 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 614 
01D5 E500    R      MOV    A,addr+01H
01D7 248A           ADD    A,#08AH
01D9 FF             MOV    R7,A
01DA E500    R      MOV    A,addr
01DC 3401           ADDC   A,#001H
01DE FA             MOV    R2,A
01DF EF             MOV    A,R7
01E0 FB             MOV    R3,A
01E1 AC00    R      MOV    R4,min
01E3 AD00    R      MOV    R5,min+01H
01E5 AE00    R      MOV    R6,min+02H
01E7 AF00    R      MOV    R7,min+03H
01E9 75F008         MOV    B,#008H
01EC 120000  R      LCALL  ?C_LSSHR
01EF EF             MOV    A,R7
01F0 FD             MOV    R5,A
01F1 8A06           MOV    AR6,R2
01F3 8B07           MOV    AR7,R3
01F5 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 615 
01F8 E500    R      MOV    A,addr+01H
01FA 248B           ADD    A,#08BH
01FC FF             MOV    R7,A
01FD E500    R      MOV    A,addr
01FF 3401           ADDC   A,#001H
0201 FA             MOV    R2,A
0202 EF             MOV    A,R7
0203 FB             MOV    R3,A
0204 AC00    R      MOV    R4,min
0206 AD00    R      MOV    R5,min+01H
0208 AE00    R      MOV    R6,min+02H
020A AF00    R      MOV    R7,min+03H
020C 75F010         MOV    B,#010H
020F 120000  R      LCALL  ?C_LSSHR
0212 EF             MOV    A,R7
0213 FD             MOV    R5,A
0214 8A06           MOV    AR6,R2
0216 8B07           MOV    AR7,R3
0218 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 616 
021B E500    R      MOV    A,addr+01H
021D 248C           ADD    A,#08CH
021F FF             MOV    R7,A
0220 E500    R      MOV    A,addr
0222 3401           ADDC   A,#001H
0224 FA             MOV    R2,A
0225 EF             MOV    A,R7
0226 FB             MOV    R3,A
0227 AC00    R      MOV    R4,min
0229 AD00    R      MOV    R5,min+01H
022B AE00    R      MOV    R6,min+02H
022D AF00    R      MOV    R7,min+03H
022F 75F018         MOV    B,#018H
0232 120000  R      LCALL  ?C_LSSHR
0235 EF             MOV    A,R7
0236 FD             MOV    R5,A
0237 8A06           MOV    AR6,R2
0239 8B07           MOV    AR7,R3
023B 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 618 
023E E500    R      MOV    A,addr+01H
0240 248D           ADD    A,#08DH
0242 FF             MOV    R7,A
0243 E500    R      MOV    A,addr
0245 3401           ADDC   A,#001H
0247 FE             MOV    R6,A
0248 AD00    R      MOV    R5,max+03H
024A 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 619 
024D E500    R      MOV    A,addr+01H
024F 248E           ADD    A,#08EH
0251 FF             MOV    R7,A
0252 E500    R      MOV    A,addr
0254 3401           ADDC   A,#001H
0256 FA             MOV    R2,A
0257 EF             MOV    A,R7
0258 FB             MOV    R3,A
0259 AC00    R      MOV    R4,max
025B AD00    R      MOV    R5,max+01H
025D AE00    R      MOV    R6,max+02H
025F AF00    R      MOV    R7,max+03H
0261 75F008         MOV    B,#008H
0264 120000  R      LCALL  ?C_LSSHR
0267 EF             MOV    A,R7
0268 FD             MOV    R5,A
0269 8A06           MOV    AR6,R2
026B 8B07           MOV    AR7,R3
026D 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 620 
0270 E500    R      MOV    A,addr+01H
0272 248F           ADD    A,#08FH
0274 FF             MOV    R7,A
0275 E500    R      MOV    A,addr
0277 3401           ADDC   A,#001H
0279 FA             MOV    R2,A
027A EF             MOV    A,R7
027B FB             MOV    R3,A
027C AC00    R      MOV    R4,max
027E AD00    R      MOV    R5,max+01H
0280 AE00    R      MOV    R6,max+02H
0282 AF00    R      MOV    R7,max+03H
0284 75F010         MOV    B,#010H
0287 120000  R      LCALL  ?C_LSSHR
028A EF             MOV    A,R7
028B FD             MOV    R5,A
028C 8A06           MOV    AR6,R2
028E 8B07           MOV    AR7,R3
0290 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 621 
0293 E500    R      MOV    A,addr+01H
0295 2490           ADD    A,#090H
0297 FF             MOV    R7,A
0298 E500    R      MOV    A,addr
029A 3401           ADDC   A,#001H
029C FA             MOV    R2,A
029D EF             MOV    A,R7
029E FB             MOV    R3,A
029F AC00    R      MOV    R4,max
02A1 AD00    R      MOV    R5,max+01H
02A3 AE00    R      MOV    R6,max+02H
02A5 AF00    R      MOV    R7,max+03H
02A7 75F018         MOV    B,#018H
02AA 120000  R      LCALL  ?C_LSSHR
02AD EF             MOV    A,R7
02AE FD             MOV    R5,A
02AF 8A06           MOV    AR6,R2
02B1 8B07           MOV    AR7,R3
02B3 120000  R      LCALL  _ROM_Write
02B6 22             RET    

            ; FUNCTION _ROM_WritePage (END)

            ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 21 
0000 120000  R      LCALL  Initialize
0003         ?WHILE1:
                                           ; SOURCE LINE # 24 
0003 E500    R      MOV    A,state
0005 B40E03         CJNE   A,#00EH,?LAB177
0008 020000  R      LJMP   ?CASE98
000B         ?LAB177:
000B 503D           JNC    ?LAB176
000D E500    R      MOV    A,state
000F 2400           ADD    A,#000H
0011 B40E00         CJNE   A,#00EH,?LAB178
0014         ?LAB178:
0014 4003           JC     $ + 5
0016 020000  R      LJMP   ?NXT130
0019 FA             MOV    R2,A
001A 23             RL     A
001B 2A             ADD    A,R2
001C 900000  R      MOV    DPTR,#?LAB179
001F 73             JMP    @A+DPTR
0020         ?LAB179:
0020 020000  R      LJMP   ?CASE84
0023 020000  R      LJMP   ?CASE85
0026 020000  R      LJMP   ?CASE86
0029 020000  R      LJMP   ?CASE87
002C 020000  R      LJMP   ?CASE88
002F 020000  R      LJMP   ?CASE89
0032 020000  R      LJMP   ?CASE90
0035 020000  R      LJMP   ?CASE91
0038 020000  R      LJMP   ?CASE92
003B 020000  R      LJMP   ?CASE93
003E 020000  R      LJMP   ?CASE94
0041 020000  R      LJMP   ?CASE95
0044 020000  R      LJMP   ?CASE96
0047 020000  R      LJMP   ?CASE97
004A         ?LAB176:
004A E500    R      MOV    A,state
004C B41603         CJNE   A,#016H,?LAB181
004F 020000  R      LJMP   ?CASE106
0052         ?LAB181:
0052 503A           JNC    ?LAB180
0054 E500    R      MOV    A,state
0056 B41203         CJNE   A,#012H,?LAB183
0059 020000  R      LJMP   ?CASE102
005C         ?LAB183:
005C 5018           JNC    ?LAB182
005E E500    R      MOV    A,state
0060 24F1           ADD    A,#0F1H
0062 7003           JNZ    $ + 5
0064 020000  R      LJMP   ?CASE99
0067 14             DEC    A
0068 7003           JNZ    $ + 5
006A 020000  R      LJMP   ?CASE100
006D 14             DEC    A
006E 7003           JNZ    $ + 5
0070 020000  R      LJMP   ?CASE101
0073 020000  R      LJMP   ?NXT130
0076         ?LAB182:
0076 E500    R      MOV    A,state
0078 24ED           ADD    A,#0EDH
007A 7003           JNZ    $ + 5
007C 020000  R      LJMP   ?CASE103
007F 14             DEC    A
0080 7003           JNZ    $ + 5
0082 020000  R      LJMP   ?CASE104
0085 14             DEC    A
0086 7003           JNZ    $ + 5
0088 020000  R      LJMP   ?CASE105
008B 020000  R      LJMP   ?NXT130
008E         ?LAB180:
008E E500    R      MOV    A,state
0090 B41A03         CJNE   A,#01AH,?LAB185
0093 020000  R      LJMP   ?CASE110
0096         ?LAB185:
0096 5018           JNC    ?LAB184
0098 E500    R      MOV    A,state
009A 24E9           ADD    A,#0E9H
009C 7003           JNZ    $ + 5
009E 020000  R      LJMP   ?CASE107
00A1 14             DEC    A
00A2 7003           JNZ    $ + 5
00A4 020000  R      LJMP   ?CASE108
00A7 14             DEC    A
00A8 7003           JNZ    $ + 5
00AA 020000  R      LJMP   ?NXT130
00AD 020000  R      LJMP   ?NXT130
00B0         ?LAB184:
00B0 E500    R      MOV    A,state
00B2 24E5           ADD    A,#0E5H
00B4 7003           JNZ    $ + 5
00B6 020000  R      LJMP   ?CASE111
00B9 24E6           ADD    A,#0E6H
00BB 7003           JNZ    $ + 5
00BD 020000  R      LJMP   ?CASE112
00C0 020000  R      LJMP   ?WHILE1
00C3         ?CASE95:
                                           ; SOURCE LINE # 31 
00C3 E500    R      MOV    A,last
00C5 24D5           ADD    A,#0D5H
00C7 7003           JNZ    $ + 5
00C9 020000  R      LJMP   ?NXT131
00CC         ?DEFAULT2:
                                           ; SOURCE LINE # 37 
00CC C200    R      CLR    _gClear?BIT
00CE 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 38 
00D1 750092  R      MOV    _gDrawRect?BYTE,#092H
00D4 C200    R      CLR    _gDrawRect?BIT
00D6 7F0E           MOV    R7,#00EH
00D8 7D88           MOV    R5,#088H
00DA 7B18           MOV    R3,#018H
00DC 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 39 
00DF E4             CLR    A
00E0 FF             MOV    R7,A
00E1 7D03           MOV    R5,#003H
00E3 120000  R      LCALL  _gGotoXY
00E6 7B05           MOV    R3,#005H
00E8 7A00    R      MOV    R2,#000H
00EA 7900    R      MOV    R1,#000H
00EC 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 40 
00EF 7F03           MOV    R7,#003H
00F1 7D03           MOV    R5,#003H
00F3 120000  R      LCALL  _gGotoXY
00F6 7B05           MOV    R3,#005H
00F8 7A00    R      MOV    R2,#000H
00FA 7900    R      MOV    R1,#000H
00FC 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 41 
00FF 7F05           MOV    R7,#005H
0101 7D02           MOV    R5,#002H
0103 120000  R      LCALL  _gGotoXY
0106 7B05           MOV    R3,#005H
0108 7A00    R      MOV    R2,#000H
010A 7900    R      MOV    R1,#000H
010C 120000  R      LCALL  _gPutStr
010F AB00    R      MOV    R3,mStr
0111 AA00    R      MOV    R2,mStr+01H
0113 A900    R      MOV    R1,mStr+02H
0115 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 42 
0118 7E70           MOV    R6,#070H
011A 7F03           MOV    R7,#003H
011C 120000  R      LCALL  _ROM_Read
011F 8F00    R      MOV    StopTh1,R7
                                           ; SOURCE LINE # 43 
0121 7E70           MOV    R6,#070H
0123 7F04           MOV    R7,#004H
0125 120000  R      LCALL  _ROM_Read
0128 8F00    R      MOV    StartTh2,R7
                                           ; SOURCE LINE # 44 
012A 7F07           MOV    R7,#007H
012C 7D02           MOV    R5,#002H
012E 120000  R      LCALL  _gGotoXY
0131 7B05           MOV    R3,#005H
0133 7A00    R      MOV    R2,#000H
0135 7900    R      MOV    R1,#000H
0137 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 45 
013A 75F00A         MOV    B,#00AH
013D E500    R      MOV    A,StartTh2
013F 84             DIV    AB
0140 2430           ADD    A,#030H
0142 FF             MOV    R7,A
0143 120000  R      LCALL  _gPutc
0146 7F30           MOV    R7,#030H
0148 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 46 
014B 7F08           MOV    R7,#008H
014D 7D02           MOV    R5,#002H
014F 120000  R      LCALL  _gGotoXY
0152 7B05           MOV    R3,#005H
0154 7A00    R      MOV    R2,#000H
0156 7900    R      MOV    R1,#000H
0158 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 47 
015B 75F00A         MOV    B,#00AH
015E E500    R      MOV    A,StopTh1
0160 84             DIV    AB
0161 2430           ADD    A,#030H
0163 FF             MOV    R7,A
0164 120000  R      LCALL  _gPutc
0167 7F30           MOV    R7,#030H
0169 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 49 
016C 7F0A           MOV    R7,#00AH
016E 7D02           MOV    R5,#002H
0170 120000  R      LCALL  _gGotoXY
0173 7B05           MOV    R3,#005H
0175 7A00    R      MOV    R2,#000H
0177 7900    R      MOV    R1,#000H
0179 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 50 
017C 75F00A         MOV    B,#00AH
017F E500    R      MOV    A,prntCh
0181 84             DIV    AB
0182 2430           ADD    A,#030H
0184 FF             MOV    R7,A
0185 120000  R      LCALL  _gPutc
0188 75F00A         MOV    B,#00AH
018B E500    R      MOV    A,prntCh
018D 84             DIV    AB
018E E5F0           MOV    A,B
0190 2430           ADD    A,#030H
0192 FF             MOV    R7,A
0193 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 51 
0196 7B05           MOV    R3,#005H
0198 7A00    R      MOV    R2,#000H
019A 7900    R      MOV    R1,#000H
019C 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 52 
019F 7F30           MOV    R7,#030H
01A1 120000  R      LCALL  _gPutc
01A4 E500    R      MOV    A,scrn
01A6 2431           ADD    A,#031H
01A8 FF             MOV    R7,A
01A9 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 54 
01AC 7F0C           MOV    R7,#00CH
01AE 7D02           MOV    R5,#002H
01B0 120000  R      LCALL  _gGotoXY
01B3 7B05           MOV    R3,#005H
01B5 7A00    R      MOV    R2,#000H
01B7 7900    R      MOV    R1,#000H
01B9 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 55 
01BC 75F00A         MOV    B,#00AH
01BF E500    R      MOV    A,system
01C1 84             DIV    AB
01C2 2430           ADD    A,#030H
01C4 FF             MOV    R7,A
01C5 120000  R      LCALL  _gPutc
01C8 75F00A         MOV    B,#00AH
01CB E500    R      MOV    A,system
01CD 84             DIV    AB
01CE E5F0           MOV    A,B
01D0 2430           ADD    A,#030H
01D2 FF             MOV    R7,A
01D3 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 56 
01D6 7B05           MOV    R3,#005H
01D8 7A00    R      MOV    R2,#000H
01DA 7900    R      MOV    R1,#000H
01DC 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 57 
01DF 75F00A         MOV    B,#00AH
01E2 E500    R      MOV    A,jtrCh
01E4 84             DIV    AB
01E5 2430           ADD    A,#030H
01E7 FF             MOV    R7,A
01E8 120000  R      LCALL  _gPutc
01EB 75F00A         MOV    B,#00AH
01EE E500    R      MOV    A,jtrCh
01F0 84             DIV    AB
01F1 E5F0           MOV    A,B
01F3 2430           ADD    A,#030H
01F5 FF             MOV    R7,A
01F6 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 65 
01F9 750023  R      MOV    last,#023H
                                           ; SOURCE LINE # 66 
01FC 750010  R      MOV    next,#010H
01FF 750012  R      MOV    state,#012H
                                           ; SOURCE LINE # 67 
0202 75003B  R      MOV    rxState,#03BH
0205         ?NXT131:
                                           ; SOURCE LINE # 70 
0205 020000  R      LJMP   ?WHILE1
0208         ?CASE102:
                                           ; SOURCE LINE # 73 
0208 D283           SETB   LDRDY
                                           ; SOURCE LINE # 74 
020A C281           CLR    LDSRT
                                           ; SOURCE LINE # 75 
020C C282           CLR    LDSTP
                                           ; SOURCE LINE # 76 
020E E4             CLR    A
020F FF             MOV    R7,A
0210 F500    R      MOV    qHits,A
                                           ; SOURCE LINE # 81 
0212 D2AA           SETB   EX1
0214 D28A           SETB   IT1
                                           ; SOURCE LINE # 82 
0216 D2B9           SETB   PX1H
0218 D2BA           SETB   PX1L
                                           ; SOURCE LINE # 84 
021A 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 85 
021D 7F41           MOV    R7,#041H
021F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 86 
0222 7FC7           MOV    R7,#0C7H
0224 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 88 
0227 7F01           MOV    R7,#001H
0229 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 89 
022C 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 90 
022F 020000  R      LJMP   ?WHILE1
0232         ?CASE93:
                                           ; SOURCE LINE # 96 
0232 E500    R      MOV    A,last
0234 24DD           ADD    A,#0DDH
0236 6010           JZ     ?CASE114
0238 24FD           ADD    A,#0FDH
023A 7003           JNZ    $ + 5
023C 020000  R      LJMP   ?CASE116
023F 14             DEC    A
0240 7003           JNZ    $ + 5
0242 020000  R      LJMP   ?CASE116
0245 020000  R      LJMP   ?NXT130
0248         ?CASE114:
                                           ; SOURCE LINE # 100 
0248 C200    R      CLR    _gClear?BIT
024A 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 101 
024D 750092  R      MOV    _gDrawRect?BYTE,#092H
0250 C200    R      CLR    _gDrawRect?BIT
0252 7F0E           MOV    R7,#00EH
0254 7D88           MOV    R5,#088H
0256 7B18           MOV    R3,#018H
0258 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 102 
025B E4             CLR    A
025C FF             MOV    R7,A
025D 7D03           MOV    R5,#003H
025F 120000  R      LCALL  _gGotoXY
0262 7B05           MOV    R3,#005H
0264 7A00    R      MOV    R2,#000H
0266 7900    R      MOV    R1,#000H
0268 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 103 
026B 7F03           MOV    R7,#003H
026D 7D01           MOV    R5,#001H
026F 120000  R      LCALL  _gGotoXY
0272 7B05           MOV    R3,#005H
0274 7A00    R      MOV    R2,#000H
0276 7900    R      MOV    R1,#000H
0278 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 104 
027B 7F05           MOV    R7,#005H
027D 7D02           MOV    R5,#002H
027F 120000  R      LCALL  _gGotoXY
0282 7B05           MOV    R3,#005H
0284 7A00    R      MOV    R2,#000H
0286 7900    R      MOV    R1,#000H
0288 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 105 
028B 7F07           MOV    R7,#007H
028D 7D02           MOV    R5,#002H
028F 120000  R      LCALL  _gGotoXY
0292 7B05           MOV    R3,#005H
0294 7A00    R      MOV    R2,#000H
0296 7900    R      MOV    R1,#000H
0298 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 106 
029B 7F08           MOV    R7,#008H
029D 7D02           MOV    R5,#002H
029F 120000  R      LCALL  _gGotoXY
02A2 7B05           MOV    R3,#005H
02A4 7A00    R      MOV    R2,#000H
02A6 7900    R      MOV    R1,#000H
02A8 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 108 
02AB 75001D  R      MOV    rxState,#01DH
                                           ; SOURCE LINE # 109 
02AE E4             CLR    A
02AF FF             MOV    R7,A
02B0 F500    R      MOV    rxCnt,A
02B2 F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 111 
02B4 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 112 
02B7 7FAD           MOV    R7,#0ADH
02B9 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 113 
02BC 750026  R      MOV    last,#026H
                                           ; SOURCE LINE # 114 
02BF 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 115 
02C2 020000  R      LJMP   ?NXT130
02C5         ?CASE116:
                                           ; SOURCE LINE # 118 
02C5 7F05           MOV    R7,#005H
02C7 7D02           MOV    R5,#002H
02C9 120000  R      LCALL  _gGotoXY
02CC 7B05           MOV    R3,#005H
02CE 7A00    R      MOV    R2,#000H
02D0 7900    R      MOV    R1,#000H
02D2 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 119 
02D5 75001D  R      MOV    rxState,#01DH
                                           ; SOURCE LINE # 120 
02D8 E4             CLR    A
02D9 FF             MOV    R7,A
02DA F500    R      MOV    rxCnt,A
02DC F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 122 
02DE 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 123 
02E1 7F44           MOV    R7,#044H
02E3 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 124 
02E6 7FAD           MOV    R7,#0ADH
02E8 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 125 
02EB 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 128 
02EE 020000  R      LJMP   ?WHILE1
02F1         ?CASE94:
                                           ; SOURCE LINE # 134 
02F1 E500    R      MOV    A,last
02F3 24DD           ADD    A,#0DDH
02F5 6010           JZ     ?CASE117
02F7 24FD           ADD    A,#0FDH
02F9 7003           JNZ    $ + 5
02FB 020000  R      LJMP   ?CASE119
02FE 14             DEC    A
02FF 7003           JNZ    $ + 5
0301 020000  R      LJMP   ?CASE119
0304 020000  R      LJMP   ?NXT130
0307         ?CASE117:
                                           ; SOURCE LINE # 138 
0307 C200    R      CLR    _gClear?BIT
0309 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 139 
030C 750092  R      MOV    _gDrawRect?BYTE,#092H
030F C200    R      CLR    _gDrawRect?BIT
0311 7F0E           MOV    R7,#00EH
0313 7D88           MOV    R5,#088H
0315 7B18           MOV    R3,#018H
0317 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 140 
031A E4             CLR    A
031B FF             MOV    R7,A
031C 7D03           MOV    R5,#003H
031E 120000  R      LCALL  _gGotoXY
0321 7B05           MOV    R3,#005H
0323 7A00    R      MOV    R2,#000H
0325 7900    R      MOV    R1,#000H
0327 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 141 
032A 7F03           MOV    R7,#003H
032C 7D01           MOV    R5,#001H
032E 120000  R      LCALL  _gGotoXY
0331 7B05           MOV    R3,#005H
0333 7A00    R      MOV    R2,#000H
0335 7900    R      MOV    R1,#000H
0337 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 142 
033A 7F05           MOV    R7,#005H
033C 7D02           MOV    R5,#002H
033E 120000  R      LCALL  _gGotoXY
0341 7B05           MOV    R3,#005H
0343 7A00    R      MOV    R2,#000H
0345 7900    R      MOV    R1,#000H
0347 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 143 
034A 7F07           MOV    R7,#007H
034C 7D02           MOV    R5,#002H
034E 120000  R      LCALL  _gGotoXY
0351 7B05           MOV    R3,#005H
0353 7A00    R      MOV    R2,#000H
0355 7900    R      MOV    R1,#000H
0357 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 144 
035A 7F08           MOV    R7,#008H
035C 7D02           MOV    R5,#002H
035E 120000  R      LCALL  _gGotoXY
0361 7B05           MOV    R3,#005H
0363 7A00    R      MOV    R2,#000H
0365 7900    R      MOV    R1,#000H
0367 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 146 
036A 75001C  R      MOV    rxState,#01CH
                                           ; SOURCE LINE # 147 
036D E4             CLR    A
036E FF             MOV    R7,A
036F F500    R      MOV    rxCnt,A
0371 F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 149 
0373 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 150 
0376 7FAC           MOV    R7,#0ACH
0378 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 151 
037B 750027  R      MOV    last,#027H
                                           ; SOURCE LINE # 152 
037E 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 153 
0381 020000  R      LJMP   ?NXT130
0384         ?CASE119:
                                           ; SOURCE LINE # 156 
0384 7F05           MOV    R7,#005H
0386 7D02           MOV    R5,#002H
0388 120000  R      LCALL  _gGotoXY
038B 7B05           MOV    R3,#005H
038D 7A00    R      MOV    R2,#000H
038F 7900    R      MOV    R1,#000H
0391 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 157 
0394 75001C  R      MOV    rxState,#01CH
                                           ; SOURCE LINE # 158 
0397 E4             CLR    A
0398 FF             MOV    R7,A
0399 F500    R      MOV    rxCnt,A
039B F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 160 
039D 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 161 
03A0 7F43           MOV    R7,#043H
03A2 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 162 
03A5 7FAC           MOV    R7,#0ACH
03A7 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 163 
03AA 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 166 
03AD 020000  R      LJMP   ?WHILE1
03B0         ?CASE92:
                                           ; SOURCE LINE # 173 
03B0 E500    R      MOV    A,last
03B2 B42A03         CJNE   A,#02AH,?LAB191
03B5 020000  R      LJMP   ?CASE124
03B8         ?LAB191:
03B8 5017           JNC    ?LAB190
03BA E500    R      MOV    A,last
03BC 24DD           ADD    A,#0DDH
03BE 6021           JZ     ?CASE120
03C0 24FE           ADD    A,#0FEH
03C2 7003           JNZ    $ + 5
03C4 020000  R      LJMP   ?CASE124
03C7 24FC           ADD    A,#0FCH
03C9 7003           JNZ    $ + 5
03CB 020000  R      LJMP   ?CASE124
03CE 020000  R      LJMP   ?NXT134
03D1         ?LAB190:
03D1 E500    R      MOV    A,last
03D3 24CC           ADD    A,#0CCH
03D5 7003           JNZ    $ + 5
03D7 020000  R      LJMP   ?CASE124
03DA 24FB           ADD    A,#0FBH
03DC 605C           JZ     ?CASE125
03DE 020000  R      LJMP   ?NXT130
03E1         ?CASE120:
                                           ; SOURCE LINE # 177 
03E1 C200    R      CLR    _gClear?BIT
03E3 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 178 
03E6 750092  R      MOV    _gDrawRect?BYTE,#092H
03E9 C200    R      CLR    _gDrawRect?BIT
03EB 7F0E           MOV    R7,#00EH
03ED 7D88           MOV    R5,#088H
03EF 7B18           MOV    R3,#018H
03F1 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 179 
03F4 E4             CLR    A
03F5 FF             MOV    R7,A
03F6 7D03           MOV    R5,#003H
03F8 120000  R      LCALL  _gGotoXY
03FB 7B05           MOV    R3,#005H
03FD 7A00    R      MOV    R2,#000H
03FF 7900    R      MOV    R1,#000H
0401 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 180 
0404 7F03           MOV    R7,#003H
0406 7D01           MOV    R5,#001H
0408 120000  R      LCALL  _gGotoXY
040B 7B05           MOV    R3,#005H
040D 7A00    R      MOV    R2,#000H
040F 7900    R      MOV    R1,#000H
0411 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 181 
0414 7F08           MOV    R7,#008H
0416 7D02           MOV    R5,#002H
0418 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 182 
041B 7B05           MOV    R3,#005H
041D 7A00    R      MOV    R2,#000H
041F 7900    R      MOV    R1,#000H
0421 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 183 
0424 7F30           MOV    R7,#030H
0426 120000  R      LCALL  _gPutc
0429 E500    R      MOV    A,scrn
042B 2431           ADD    A,#031H
042D FF             MOV    R7,A
042E 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 184 
0431 750039  R      MOV    last,#039H
                                           ; SOURCE LINE # 185 
0434 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 186 
0437 020000  R      LJMP   ?NXT130
043A         ?CASE125:
                                           ; SOURCE LINE # 188 
043A 0500    R      INC    scrn
                                           ; SOURCE LINE # 189 
043C E500    R      MOV    A,scrn
043E B40403         CJNE   A,#004H,?NXT135
                                           ; SOURCE LINE # 190 
0441 E4             CLR    A
0442 F500    R      MOV    scrn,A
0444         ?NXT135:
                                           ; SOURCE LINE # 191 
0444 7F08           MOV    R7,#008H
0446 7D0C           MOV    R5,#00CH
0448 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 192 
044B 7F30           MOV    R7,#030H
044D 120000  R      LCALL  _gPutc
0450 E500    R      MOV    A,scrn
0452 2431           ADD    A,#031H
0454 FF             MOV    R7,A
0455 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 193 
0458 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 194 
045B 020000  R      LJMP   ?NXT130
045E         ?CASE124:
                                           ; SOURCE LINE # 199 
045E C200    R      CLR    _gClear?BIT
0460 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 200 
0463 E4             CLR    A
0464 FF             MOV    R7,A
0465 7D03           MOV    R5,#003H
0467 120000  R      LCALL  _gGotoXY
046A 7B05           MOV    R3,#005H
046C 7A00    R      MOV    R2,#000H
046E 7900    R      MOV    R1,#000H
0470 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 201 
0473 7F03           MOV    R7,#003H
0475 7D03           MOV    R5,#003H
0477 120000  R      LCALL  _gGotoXY
047A 7B05           MOV    R3,#005H
047C 7A00    R      MOV    R2,#000H
047E 7900    R      MOV    R1,#000H
0480 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 202 
0483 E4             CLR    A
0484 F500    R      MOV    _Display?BYTE,A
0486 F500    R      MOV    _Display?BYTE+01H,A
0488 F500    R      MOV    _Display?BYTE+02H,A
048A F500    R      MOV    _Display?BYTE+03H,A
048C AF00    R      MOV    R7,FPGA
048E 0500    R      INC    FPGA
0490 120000  R      LCALL  _Display
                                           ; SOURCE LINE # 203 
0493 750092  R      MOV    _gDrawRect?BYTE,#092H
0496 D200    R      SETB   _gDrawRect?BIT
0498 7F0E           MOV    R7,#00EH
049A 7D88           MOV    R5,#088H
049C 7B18           MOV    R3,#018H
049E 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 204 
04A1 7F02           MOV    R7,#002H
04A3 7D11           MOV    R5,#011H
04A5 120000  R      LCALL  _gGotoXY
04A8 E500    R      MOV    A,FPGA
04AA 2430           ADD    A,#030H
04AC FF             MOV    R7,A
04AD 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 205 
04B0 E500    R      MOV    A,FPGA
04B2 B40403         CJNE   A,#004H,?NXT136
04B5 E4             CLR    A
04B6 F500    R      MOV    FPGA,A
04B8         ?NXT136:
                                           ; SOURCE LINE # 206 
04B8 750034  R      MOV    last,#034H
                                           ; SOURCE LINE # 207 
04BB 75001A  R      MOV    state,#01AH
04BE         ?NXT134:
                                           ; SOURCE LINE # 210 
04BE 020000  R      LJMP   ?WHILE1
04C1         ?CASE91:
                                           ; SOURCE LINE # 217 
04C1 E500    R      MOV    A,last
04C3 24DB           ADD    A,#0DBH
04C5 600E           JZ     ?CASE129
04C7 24FC           ADD    A,#0FCH
04C9 600A           JZ     ?CASE129
04CB 14             DEC    A
04CC 6007           JZ     ?CASE129
04CE 24F6           ADD    A,#0F6H
04D0 6003           JZ     ?CASE129
04D2 020000  R      LJMP   ?NXT130
04D5         ?CASE129:
                                           ; SOURCE LINE # 223 
04D5 C200    R      CLR    _gClear?BIT
04D7 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 224 
04DA E4             CLR    A
04DB FF             MOV    R7,A
04DC 7D03           MOV    R5,#003H
04DE 120000  R      LCALL  _gGotoXY
04E1 7B05           MOV    R3,#005H
04E3 7A00    R      MOV    R2,#000H
04E5 7900    R      MOV    R1,#000H
04E7 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 225 
04EA 7F03           MOV    R7,#003H
04EC 7D03           MOV    R5,#003H
04EE 120000  R      LCALL  _gGotoXY
04F1 7B05           MOV    R3,#005H
04F3 7A00    R      MOV    R2,#000H
04F5 7900    R      MOV    R1,#000H
04F7 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 227 
04FA E500    R      MOV    A,jtrCh
04FC AB00    R      MOV    R3,jtrCh
04FE 6039           JZ     ?NXT138
0500 23             RL     A
0501 23             RL     A
0502 2400    R      ADD    A,#LOW (Interval)+03FFFC
0504 FB             MOV    R3,A
0505 F582           MOV    DPL,A
0507 E4             CLR    A
0508 3400    R      ADDC   A,#HIGH (Interval)+03FFFC
050A F583           MOV    DPH,A
050C 120000  R      LCALL  MV4_XD2SN?C
050F 74FF           MOV    A,#0FFH
0511 FF             MOV    R7,A
0512 FE             MOV    R6,A
0513 FC             MOV    R4,A
0514 FD             MOV    R5,A
0515 120000  R      LCALL  ?C_CMPL
0518 BF0002         CJNE   R7,#000H,?LAB193
051B 801C           SJMP   ?NXT138
051D         ?LAB193:
                                           ; SOURCE LINE # 228 
051D E500    R      MOV    A,jtrCh
051F 23             RL     A
0520 23             RL     A
0521 2400    R      ADD    A,#LOW (Interval)+03FFFC
0523 F582           MOV    DPL,A
0525 E4             CLR    A
0526 3400    R      ADDC   A,#HIGH (Interval)+03FFFC
0528 F583           MOV    DPH,A
052A E0             MOVX   A,@DPTR
052B F500    R      MOV    min,A
052D A3             INC    DPTR
052E E0             MOVX   A,@DPTR
052F F500    R      MOV    min+01H,A
0531 A3             INC    DPTR
0532 E0             MOVX   A,@DPTR
0533 F500    R      MOV    min+02H,A
0535 A3             INC    DPTR
0536 E0             MOVX   A,@DPTR
0537 F500    R      MOV    min+03H,A
0539         ?NXT138:
                                           ; SOURCE LINE # 230 
0539 850000  R      MOV    _Display?BYTE,min
053C 850000  R      MOV    _Display?BYTE+01H,min+01H
053F 850000  R      MOV    _Display?BYTE+02H,min+02H
0542 850000  R      MOV    _Display?BYTE+03H,min+03H
0545 AF00    R      MOV    R7,FPGA
0547 0500    R      INC    FPGA
0549 120000  R      LCALL  _Display
                                           ; SOURCE LINE # 231 
054C 750092  R      MOV    _gDrawRect?BYTE,#092H
054F D200    R      SETB   _gDrawRect?BIT
0551 7F0E           MOV    R7,#00EH
0553 7D88           MOV    R5,#088H
0555 7B18           MOV    R3,#018H
0557 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 232 
055A 7F02           MOV    R7,#002H
055C 7D11           MOV    R5,#011H
055E 120000  R      LCALL  _gGotoXY
0561 E500    R      MOV    A,FPGA
0563 2430           ADD    A,#030H
0565 FF             MOV    R7,A
0566 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 233 
0569 E500    R      MOV    A,FPGA
056B B40403         CJNE   A,#004H,?NXT139
056E E4             CLR    A
056F F500    R      MOV    FPGA,A
0571         ?NXT139:
                                           ; SOURCE LINE # 234 
0571 75002A  R      MOV    last,#02AH
                                           ; SOURCE LINE # 235 
0574 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 238 
0577 020000  R      LJMP   ?WHILE1
057A         ?CASE88:
                                           ; SOURCE LINE # 245 
057A E500    R      MOV    A,last
057C 24DD           ADD    A,#0DDH
057E 600A           JZ     ?CASE130
0580 24FB           ADD    A,#0FBH
0582 7003           JNZ    $ + 5
0584 020000  R      LJMP   ?CASE131
0587 020000  R      LJMP   ?NXT130
058A         ?CASE130:
                                           ; SOURCE LINE # 250 
058A 75F021         MOV    B,#021H
058D E500    R      MOV    A,jtrCh
058F 84             DIV    AB
0590 85F000  R      MOV    jtrCh,B
                                           ; SOURCE LINE # 251 
0593 C200    R      CLR    _gClear?BIT
0595 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 252 
0598 750092  R      MOV    _gDrawRect?BYTE,#092H
059B C200    R      CLR    _gDrawRect?BIT
059D 7F0E           MOV    R7,#00EH
059F 7D88           MOV    R5,#088H
05A1 7B18           MOV    R3,#018H
05A3 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 253 
05A6 E4             CLR    A
05A7 FF             MOV    R7,A
05A8 7D03           MOV    R5,#003H
05AA 120000  R      LCALL  _gGotoXY
05AD 7B05           MOV    R3,#005H
05AF 7A00    R      MOV    R2,#000H
05B1 7900    R      MOV    R1,#000H
05B3 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 254 
05B6 7F03           MOV    R7,#003H
05B8 7D01           MOV    R5,#001H
05BA 120000  R      LCALL  _gGotoXY
05BD 7B05           MOV    R3,#005H
05BF 7A00    R      MOV    R2,#000H
05C1 7900    R      MOV    R1,#000H
05C3 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 255 
05C6 7F08           MOV    R7,#008H
05C8 7D02           MOV    R5,#002H
05CA 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 256 
05CD 7B05           MOV    R3,#005H
05CF 7A00    R      MOV    R2,#000H
05D1 7900    R      MOV    R1,#000H
05D3 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 257 
05D6 7F09           MOV    R7,#009H
05D8 7D02           MOV    R5,#002H
05DA 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 258 
05DD 7B05           MOV    R3,#005H
05DF 7A00    R      MOV    R2,#000H
05E1 7900    R      MOV    R1,#000H
05E3 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 259 
05E6 75F00A         MOV    B,#00AH
05E9 E500    R      MOV    A,jtrCh
05EB 84             DIV    AB
05EC 2430           ADD    A,#030H
05EE FF             MOV    R7,A
05EF 120000  R      LCALL  _gPutc
05F2 75F00A         MOV    B,#00AH
05F5 E500    R      MOV    A,jtrCh
05F7 84             DIV    AB
05F8 E5F0           MOV    A,B
05FA 2430           ADD    A,#030H
05FC FF             MOV    R7,A
05FD 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 260 
0600 750028  R      MOV    last,#028H
                                           ; SOURCE LINE # 261 
0603 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 262 
0606 020000  R      LJMP   ?NXT130
0609         ?CASE131:
                                           ; SOURCE LINE # 264 
0609 0500    R      INC    jtrCh
                                           ; SOURCE LINE # 265 
060B 75F021         MOV    B,#021H
060E E500    R      MOV    A,jtrCh
0610 84             DIV    AB
0611 85F000  R      MOV    jtrCh,B
                                           ; SOURCE LINE # 266 
0614 7F09           MOV    R7,#009H
0616 7D0D           MOV    R5,#00DH
0618 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 267 
061B 75F00A         MOV    B,#00AH
061E E500    R      MOV    A,jtrCh
0620 84             DIV    AB
0621 2430           ADD    A,#030H
0623 FF             MOV    R7,A
0624 120000  R      LCALL  _gPutc
0627 75F00A         MOV    B,#00AH
062A E500    R      MOV    A,jtrCh
062C 84             DIV    AB
062D E5F0           MOV    A,B
062F 2430           ADD    A,#030H
0631 FF             MOV    R7,A
0632 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 268 
0635 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 271 
0638 020000  R      LJMP   ?WHILE1
063B         ?CASE85:
                                           ; SOURCE LINE # 276 
063B E500    R      MOV    A,last
063D 24DD           ADD    A,#0DDH
063F 6018           JZ     ?CASE134
0641 24F8           ADD    A,#0F8H
0643 7003           JNZ    $ + 5
0645 020000  R      LJMP   ?CASE133
0648 24F8           ADD    A,#0F8H
064A 600D           JZ     ?CASE134
064C 24FC           ADD    A,#0FCH
064E 6042           JZ     ?CASE135
0650 14             DEC    A
0651 7003           JNZ    $ + 5
0653 020000  R      LJMP   ?CASE136
0656 020000  R      LJMP   ?NXT130
0659         ?CASE134:
                                           ; SOURCE LINE # 280 
0659 E4             CLR    A
065A FF             MOV    R7,A
065B 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 281 
065E 750005  R      MOV    mStr,#005H
0661 750000  R      MOV    mStr+01H,#000H
0664 750000  R      MOV    mStr+02H,#000H
                                           ; SOURCE LINE # 282 
0667 7F05           MOV    R7,#005H
0669 7D02           MOV    R5,#002H
066B 120000  R      LCALL  _gGotoXY
066E 7B05           MOV    R3,#005H
0670 7A00    R      MOV    R2,#000H
0672 7900    R      MOV    R1,#000H
0674 120000  R      LCALL  _gPutStr
0677 AB00    R      MOV    R3,mStr
0679 AA00    R      MOV    R2,mStr+01H
067B A900    R      MOV    R1,mStr+02H
067D 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 283 
0680 D200    R      SETB   multi
                                           ; SOURCE LINE # 284 
0682 C284           CLR    LDRMT
                                           ; SOURCE LINE # 285 
0684 C200    R      CLR    autoprint
                                           ; SOURCE LINE # 286 
0686 750037  R      MOV    last,#037H
                                           ; SOURCE LINE # 287 
0689 750020  R      MOV    rxState,#020H
                                           ; SOURCE LINE # 288 
068C 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 289 
068F 020000  R      LJMP   ?NXT130
0692         ?CASE135:
                                           ; SOURCE LINE # 291 
0692 7F01           MOV    R7,#001H
0694 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 292 
0697 750005  R      MOV    mStr,#005H
069A 750000  R      MOV    mStr+01H,#000H
069D 750000  R      MOV    mStr+02H,#000H
                                           ; SOURCE LINE # 293 
06A0 7F05           MOV    R7,#005H
06A2 7D02           MOV    R5,#002H
06A4 120000  R      LCALL  _gGotoXY
06A7 7B05           MOV    R3,#005H
06A9 7A00    R      MOV    R2,#000H
06AB 7900    R      MOV    R1,#000H
06AD 120000  R      LCALL  _gPutStr
06B0 AB00    R      MOV    R3,mStr
06B2 AA00    R      MOV    R2,mStr+01H
06B4 A900    R      MOV    R1,mStr+02H
06B6 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 294 
06B9 C200    R      CLR    multi
                                           ; SOURCE LINE # 295 
06BB D284           SETB   LDRMT
                                           ; SOURCE LINE # 296 
06BD C200    R      CLR    autoprint
                                           ; SOURCE LINE # 297 
06BF 75002B  R      MOV    last,#02BH
                                           ; SOURCE LINE # 298 
06C2 750021  R      MOV    rxState,#021H
                                           ; SOURCE LINE # 299 
06C5 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 300 
06C8 020000  R      LJMP   ?NXT130
06CB         ?CASE133:
                                           ; SOURCE LINE # 302 
06CB E4             CLR    A
06CC FF             MOV    R7,A
06CD 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 303 
06D0 750005  R      MOV    mStr,#005H
06D3 750000  R      MOV    mStr+01H,#000H
06D6 750000  R      MOV    mStr+02H,#000H
                                           ; SOURCE LINE # 304 
06D9 7F05           MOV    R7,#005H
06DB 7D02           MOV    R5,#002H
06DD 120000  R      LCALL  _gGotoXY
06E0 7B05           MOV    R3,#005H
06E2 7A00    R      MOV    R2,#000H
06E4 7900    R      MOV    R1,#000H
06E6 120000  R      LCALL  _gPutStr
06E9 AB00    R      MOV    R3,mStr
06EB AA00    R      MOV    R2,mStr+01H
06ED A900    R      MOV    R1,mStr+02H
06EF 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 305 
06F2 C200    R      CLR    multi
                                           ; SOURCE LINE # 306 
06F4 C284           CLR    LDRMT
                                           ; SOURCE LINE # 307 
06F6 D200    R      SETB   autoprint
                                           ; SOURCE LINE # 308 
06F8 750038  R      MOV    last,#038H
                                           ; SOURCE LINE # 309 
06FB 750020  R      MOV    rxState,#020H
                                           ; SOURCE LINE # 310 
06FE 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 311 
0701 020000  R      LJMP   ?NXT130
0704         ?CASE136:
                                           ; SOURCE LINE # 313 
0704 E4             CLR    A
0705 FF             MOV    R7,A
0706 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 314 
0709 750005  R      MOV    mStr,#005H
070C 750000  R      MOV    mStr+01H,#000H
070F 750000  R      MOV    mStr+02H,#000H
                                           ; SOURCE LINE # 315 
0712 7F05           MOV    R7,#005H
0714 7D02           MOV    R5,#002H
0716 120000  R      LCALL  _gGotoXY
0719 7B05           MOV    R3,#005H
071B 7A00    R      MOV    R2,#000H
071D 7900    R      MOV    R1,#000H
071F 120000  R      LCALL  _gPutStr
0722 AB00    R      MOV    R3,mStr
0724 AA00    R      MOV    R2,mStr+01H
0726 A900    R      MOV    R1,mStr+02H
0728 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 316 
072B C200    R      CLR    autoprint
                                           ; SOURCE LINE # 317 
072D 750033  R      MOV    last,#033H
                                           ; SOURCE LINE # 318 
0730 750020  R      MOV    rxState,#020H
                                           ; SOURCE LINE # 319 
0733 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 322 
0736 020000  R      LJMP   ?WHILE1
0739         ?CASE87:
                                           ; SOURCE LINE # 327 
0739 E500    R      MOV    A,last
073B B42E03         CJNE   A,#02EH,?LAB200
073E 020000  R      LJMP   ?CASE140
0741         ?LAB200:
0741 5016           JNC    ?LAB199
0743 E500    R      MOV    A,last
0745 24DD           ADD    A,#0DDH
0747 6028           JZ     ?CASE137
0749 24F7           ADD    A,#0F7H
074B 7003           JNZ    $ + 5
074D 020000  R      LJMP   ?CASE138
0750 14             DEC    A
0751 7003           JNZ    $ + 5
0753 020000  R      LJMP   ?CASE139
0756 020000  R      LJMP   ?NXT142
0759         ?LAB199:
0759 E500    R      MOV    A,last
075B 24D1           ADD    A,#0D1H
075D 7003           JNZ    $ + 5
075F 020000  R      LJMP   ?CASE141
0762 14             DEC    A
0763 7003           JNZ    $ + 5
0765 020000  R      LJMP   ?CASE142
0768 14             DEC    A
0769 7003           JNZ    $ + 5
076B 020000  R      LJMP   ?CASE143
076E 020000  R      LJMP   ?NXT130
0771         ?CASE137:
                                           ; SOURCE LINE # 330 
0771 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 331 
0774 C200    R      CLR    _gClear?BIT
0776 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 332 
0779 750092  R      MOV    _gDrawRect?BYTE,#092H
077C C200    R      CLR    _gDrawRect?BIT
077E 7F0E           MOV    R7,#00EH
0780 7D88           MOV    R5,#088H
0782 7B18           MOV    R3,#018H
0784 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 333 
0787 E4             CLR    A
0788 FF             MOV    R7,A
0789 7D03           MOV    R5,#003H
078B 120000  R      LCALL  _gGotoXY
078E 7B05           MOV    R3,#005H
0790 7A00    R      MOV    R2,#000H
0792 7900    R      MOV    R1,#000H
0794 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 334 
0797 7F03           MOV    R7,#003H
0799 7D03           MOV    R5,#003H
079B 120000  R      LCALL  _gGotoXY
079E 7B05           MOV    R3,#005H
07A0 7A00    R      MOV    R2,#000H
07A2 7900    R      MOV    R1,#000H
07A4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 335 
07A7 7F08           MOV    R7,#008H
07A9 7D02           MOV    R5,#002H
07AB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 336 
07AE 7B05           MOV    R3,#005H
07B0 7A00    R      MOV    R2,#000H
07B2 7900    R      MOV    R1,#000H
07B4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 337 
07B7 7F09           MOV    R7,#009H
07B9 7D02           MOV    R5,#002H
07BB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 338 
07BE 7B05           MOV    R3,#005H
07C0 7A00    R      MOV    R2,#000H
07C2 7900    R      MOV    R1,#000H
07C4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 340 
07C7 7F0F           MOV    R7,#00FH
07C9 7D01           MOV    R5,#001H
07CB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 341 
07CE 7B02           MOV    R3,#002H
07D0 7A00    R      MOV    R2,#HIGH (time)
07D2 7900    R      MOV    R1,#LOW (time)
07D4 120000  R      LCALL  _rDisp_Date
                                           ; SOURCE LINE # 342 
07D7 7F20           MOV    R7,#020H
07D9 120000  R      LCALL  _gPutc
07DC 7F20           MOV    R7,#020H
07DE 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 343 
07E1 7B02           MOV    R3,#002H
07E3 7A00    R      MOV    R2,#HIGH (time)
07E5 7900    R      MOV    R1,#LOW (time)
07E7 120000  R      LCALL  _rDisp_Time
                                           ; SOURCE LINE # 345 
07EA 900000  R      MOV    DPTR,#time+03H
07ED E0             MOVX   A,@DPTR
07EE 54F0           ANL    A,#0F0H
07F0 FB             MOV    R3,A
07F1 E4             CLR    A
07F2 75F004         MOV    B,#004H
07F5         ?LAB201:
07F5 C3             CLR    C
07F6 13             RRC    A
07F7 CB             XCH    A,R3
07F8 13             RRC    A
07F9 CB             XCH    A,R3
07FA D5F0F8         DJNZ   B,?LAB201
07FD 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 346 
07FF 900000  R      MOV    DPTR,#time+03H
0802 E0             MOVX   A,@DPTR
0803 540F           ANL    A,#00FH
0805 FA             MOV    R2,A
0806 E500    R      MOV    A,DigitKey
0808 75F00A         MOV    B,#00AH
080B A4             MUL    AB
080C 2A             ADD    A,R2
080D F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 347 
080F 750001  R      MOV    CurCol,#001H
                                           ; SOURCE LINE # 348 
0812 7F0F           MOV    R7,#00FH
0814 AD00    R      MOV    R5,CurCol
0816 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 349 
0819 7F5F           MOV    R7,#05FH
081B 120000  R      LCALL  _gPutc
081E 7F5F           MOV    R7,#05FH
0820 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 350 
0823 75002C  R      MOV    last,#02CH
                                           ; SOURCE LINE # 351 
0826 020000  R      LJMP   ?NXT130
0829         ?CASE138:
                                           ; SOURCE LINE # 353 
0829 75F00A         MOV    B,#00AH
082C E500    R      MOV    A,DigitKey
082E 84             DIV    AB
082F 900000  R      MOV    DPTR,#time+03H
0832 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 354 
0833 C4             SWAP   A
0834 54F0           ANL    A,#0F0H
0836 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 355 
0837 75F00A         MOV    B,#00AH
083A E500    R      MOV    A,DigitKey
083C 84             DIV    AB
083D E0             MOVX   A,@DPTR
083E 25F0           ADD    A,B
0840 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 357 
0841 7F0F           MOV    R7,#00FH
0843 AD00    R      MOV    R5,CurCol
0845 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 358 
0848 900000  R      MOV    DPTR,#time+03H
084B E0             MOVX   A,@DPTR
084C 7A00           MOV    R2,#000H
084E 54F0           ANL    A,#0F0H
0850 FB             MOV    R3,A
0851 E4             CLR    A
0852 75F004         MOV    B,#004H
0855         ?LAB202:
0855 C3             CLR    C
0856 13             RRC    A
0857 CB             XCH    A,R3
0858 13             RRC    A
0859 CB             XCH    A,R3
085A D5F0F8         DJNZ   B,?LAB202
085D EB             MOV    A,R3
085E 2430           ADD    A,#030H
0860 FF             MOV    R7,A
0861 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 359 
0864 900000  R      MOV    DPTR,#time+03H
0867 E0             MOVX   A,@DPTR
0868 540F           ANL    A,#00FH
086A 2430           ADD    A,#030H
086C FF             MOV    R7,A
086D 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 361 
0870 900000  R      MOV    DPTR,#time+04H
0873 E0             MOVX   A,@DPTR
0874 54F0           ANL    A,#0F0H
0876 FB             MOV    R3,A
0877 E4             CLR    A
0878 75F004         MOV    B,#004H
087B         ?LAB203:
087B C3             CLR    C
087C 13             RRC    A
087D CB             XCH    A,R3
087E 13             RRC    A
087F CB             XCH    A,R3
0880 D5F0F8         DJNZ   B,?LAB203
0883 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 362 
0885 900000  R      MOV    DPTR,#time+04H
0888 E0             MOVX   A,@DPTR
0889 540F           ANL    A,#00FH
088B FA             MOV    R2,A
088C E500    R      MOV    A,DigitKey
088E 75F00A         MOV    B,#00AH
0891 A4             MUL    AB
0892 2A             ADD    A,R2
0893 F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 363 
0895 750004  R      MOV    CurCol,#004H
                                           ; SOURCE LINE # 364 
0898 7F0F           MOV    R7,#00FH
089A AD00    R      MOV    R5,CurCol
089C 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 365 
089F 7F5F           MOV    R7,#05FH
08A1 120000  R      LCALL  _gPutc
08A4 7F5F           MOV    R7,#05FH
08A6 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 366 
08A9 75002D  R      MOV    last,#02DH
                                           ; SOURCE LINE # 367 
08AC 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 368 
08AF 020000  R      LJMP   ?NXT130
08B2         ?CASE139:
                                           ; SOURCE LINE # 370 
08B2 75F00A         MOV    B,#00AH
08B5 E500    R      MOV    A,DigitKey
08B7 84             DIV    AB
08B8 900000  R      MOV    DPTR,#time+04H
08BB F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 371 
08BC C4             SWAP   A
08BD 54F0           ANL    A,#0F0H
08BF F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 372 
08C0 75F00A         MOV    B,#00AH
08C3 E500    R      MOV    A,DigitKey
08C5 84             DIV    AB
08C6 E0             MOVX   A,@DPTR
08C7 25F0           ADD    A,B
08C9 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 374 
08CA 7F0F           MOV    R7,#00FH
08CC AD00    R      MOV    R5,CurCol
08CE 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 375 
08D1 900000  R      MOV    DPTR,#time+04H
08D4 E0             MOVX   A,@DPTR
08D5 7A00           MOV    R2,#000H
08D7 54F0           ANL    A,#0F0H
08D9 FB             MOV    R3,A
08DA E4             CLR    A
08DB 75F004         MOV    B,#004H
08DE         ?LAB204:
08DE C3             CLR    C
08DF 13             RRC    A
08E0 CB             XCH    A,R3
08E1 13             RRC    A
08E2 CB             XCH    A,R3
08E3 D5F0F8         DJNZ   B,?LAB204
08E6 EB             MOV    A,R3
08E7 2430           ADD    A,#030H
08E9 FF             MOV    R7,A
08EA 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 376 
08ED 900000  R      MOV    DPTR,#time+04H
08F0 E0             MOVX   A,@DPTR
08F1 540F           ANL    A,#00FH
08F3 2430           ADD    A,#030H
08F5 FF             MOV    R7,A
08F6 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 378 
08F9 900000  R      MOV    DPTR,#time+06H
08FC E0             MOVX   A,@DPTR
08FD 54F0           ANL    A,#0F0H
08FF FB             MOV    R3,A
0900 E4             CLR    A
0901 75F004         MOV    B,#004H
0904         ?LAB205:
0904 C3             CLR    C
0905 13             RRC    A
0906 CB             XCH    A,R3
0907 13             RRC    A
0908 CB             XCH    A,R3
0909 D5F0F8         DJNZ   B,?LAB205
090C 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 379 
090E 900000  R      MOV    DPTR,#time+06H
0911 E0             MOVX   A,@DPTR
0912 540F           ANL    A,#00FH
0914 FA             MOV    R2,A
0915 E500    R      MOV    A,DigitKey
0917 75F00A         MOV    B,#00AH
091A A4             MUL    AB
091B 2A             ADD    A,R2
091C F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 380 
091E 750007  R      MOV    CurCol,#007H
                                           ; SOURCE LINE # 381 
0921 7F0F           MOV    R7,#00FH
0923 AD00    R      MOV    R5,CurCol
0925 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 382 
0928 7F5F           MOV    R7,#05FH
092A 120000  R      LCALL  _gPutc
092D 7F5F           MOV    R7,#05FH
092F 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 383 
0932 75002E  R      MOV    last,#02EH
                                           ; SOURCE LINE # 384 
0935 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 385 
0938 020000  R      LJMP   ?NXT130
093B         ?CASE140:
                                           ; SOURCE LINE # 387 
093B 75F00A         MOV    B,#00AH
093E E500    R      MOV    A,DigitKey
0940 84             DIV    AB
0941 900000  R      MOV    DPTR,#time+06H
0944 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 388 
0945 C4             SWAP   A
0946 54F0           ANL    A,#0F0H
0948 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 389 
0949 75F00A         MOV    B,#00AH
094C E500    R      MOV    A,DigitKey
094E 84             DIV    AB
094F E0             MOVX   A,@DPTR
0950 25F0           ADD    A,B
0952 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 391 
0953 7F0F           MOV    R7,#00FH
0955 AD00    R      MOV    R5,CurCol
0957 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 392 
095A 900000  R      MOV    DPTR,#time+06H
095D E0             MOVX   A,@DPTR
095E 7A00           MOV    R2,#000H
0960 54F0           ANL    A,#0F0H
0962 FB             MOV    R3,A
0963 E4             CLR    A
0964 75F004         MOV    B,#004H
0967         ?LAB206:
0967 C3             CLR    C
0968 13             RRC    A
0969 CB             XCH    A,R3
096A 13             RRC    A
096B CB             XCH    A,R3
096C D5F0F8         DJNZ   B,?LAB206
096F EB             MOV    A,R3
0970 2430           ADD    A,#030H
0972 FF             MOV    R7,A
0973 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 393 
0976 900000  R      MOV    DPTR,#time+06H
0979 E0             MOVX   A,@DPTR
097A 540F           ANL    A,#00FH
097C 2430           ADD    A,#030H
097E FF             MOV    R7,A
097F 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 394 
0982 900000  R      MOV    DPTR,#time+02H
0985 E0             MOVX   A,@DPTR
0986 54F0           ANL    A,#0F0H
0988 FB             MOV    R3,A
0989 E4             CLR    A
098A 75F004         MOV    B,#004H
098D         ?LAB207:
098D C3             CLR    C
098E 13             RRC    A
098F CB             XCH    A,R3
0990 13             RRC    A
0991 CB             XCH    A,R3
0992 D5F0F8         DJNZ   B,?LAB207
0995 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 395 
0997 900000  R      MOV    DPTR,#time+02H
099A E0             MOVX   A,@DPTR
099B 540F           ANL    A,#00FH
099D FA             MOV    R2,A
099E E500    R      MOV    A,DigitKey
09A0 75F00A         MOV    B,#00AH
09A3 A4             MUL    AB
09A4 2A             ADD    A,R2
09A5 F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 396 
09A7 75000B  R      MOV    CurCol,#00BH
                                           ; SOURCE LINE # 397 
09AA 7F0F           MOV    R7,#00FH
09AC AD00    R      MOV    R5,CurCol
09AE 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 398 
09B1 7F5F           MOV    R7,#05FH
09B3 120000  R      LCALL  _gPutc
09B6 7F5F           MOV    R7,#05FH
09B8 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 399 
09BB 75002F  R      MOV    last,#02FH
                                           ; SOURCE LINE # 400 
09BE 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 401 
09C1 020000  R      LJMP   ?NXT130
09C4         ?CASE141:
                                           ; SOURCE LINE # 403 
09C4 75F00A         MOV    B,#00AH
09C7 E500    R      MOV    A,DigitKey
09C9 84             DIV    AB
09CA 900000  R      MOV    DPTR,#time+02H
09CD F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 404 
09CE C4             SWAP   A
09CF 54F0           ANL    A,#0F0H
09D1 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 405 
09D2 75F00A         MOV    B,#00AH
09D5 E500    R      MOV    A,DigitKey
09D7 84             DIV    AB
09D8 E0             MOVX   A,@DPTR
09D9 25F0           ADD    A,B
09DB F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 407 
09DC 7F0F           MOV    R7,#00FH
09DE AD00    R      MOV    R5,CurCol
09E0 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 408 
09E3 900000  R      MOV    DPTR,#time+02H
09E6 E0             MOVX   A,@DPTR
09E7 7A00           MOV    R2,#000H
09E9 54F0           ANL    A,#0F0H
09EB FB             MOV    R3,A
09EC E4             CLR    A
09ED 75F004         MOV    B,#004H
09F0         ?LAB208:
09F0 C3             CLR    C
09F1 13             RRC    A
09F2 CB             XCH    A,R3
09F3 13             RRC    A
09F4 CB             XCH    A,R3
09F5 D5F0F8         DJNZ   B,?LAB208
09F8 EB             MOV    A,R3
09F9 2430           ADD    A,#030H
09FB FF             MOV    R7,A
09FC 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 409 
09FF 900000  R      MOV    DPTR,#time+02H
0A02 E0             MOVX   A,@DPTR
0A03 540F           ANL    A,#00FH
0A05 2430           ADD    A,#030H
0A07 FF             MOV    R7,A
0A08 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 410 
0A0B 900000  R      MOV    DPTR,#time+01H
0A0E E0             MOVX   A,@DPTR
0A0F 54F0           ANL    A,#0F0H
0A11 FB             MOV    R3,A
0A12 E4             CLR    A
0A13 75F004         MOV    B,#004H
0A16         ?LAB209:
0A16 C3             CLR    C
0A17 13             RRC    A
0A18 CB             XCH    A,R3
0A19 13             RRC    A
0A1A CB             XCH    A,R3
0A1B D5F0F8         DJNZ   B,?LAB209
0A1E 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 411 
0A20 900000  R      MOV    DPTR,#time+01H
0A23 E0             MOVX   A,@DPTR
0A24 540F           ANL    A,#00FH
0A26 FA             MOV    R2,A
0A27 E500    R      MOV    A,DigitKey
0A29 75F00A         MOV    B,#00AH
0A2C A4             MUL    AB
0A2D 2A             ADD    A,R2
0A2E F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 412 
0A30 75000E  R      MOV    CurCol,#00EH
                                           ; SOURCE LINE # 413 
0A33 7F0F           MOV    R7,#00FH
0A35 AD00    R      MOV    R5,CurCol
0A37 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 414 
0A3A 7F5F           MOV    R7,#05FH
0A3C 120000  R      LCALL  _gPutc
0A3F 7F5F           MOV    R7,#05FH
0A41 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 415 
0A44 750030  R      MOV    last,#030H
                                           ; SOURCE LINE # 416 
0A47 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 417 
0A4A 020000  R      LJMP   ?NXT130
0A4D         ?CASE142:
                                           ; SOURCE LINE # 419 
0A4D 75F00A         MOV    B,#00AH
0A50 E500    R      MOV    A,DigitKey
0A52 84             DIV    AB
0A53 900000  R      MOV    DPTR,#time+01H
0A56 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 420 
0A57 C4             SWAP   A
0A58 54F0           ANL    A,#0F0H
0A5A F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 421 
0A5B 75F00A         MOV    B,#00AH
0A5E E500    R      MOV    A,DigitKey
0A60 84             DIV    AB
0A61 E0             MOVX   A,@DPTR
0A62 25F0           ADD    A,B
0A64 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 423 
0A65 7F0F           MOV    R7,#00FH
0A67 AD00    R      MOV    R5,CurCol
0A69 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 424 
0A6C 900000  R      MOV    DPTR,#time+01H
0A6F E0             MOVX   A,@DPTR
0A70 7A00           MOV    R2,#000H
0A72 54F0           ANL    A,#0F0H
0A74 FB             MOV    R3,A
0A75 E4             CLR    A
0A76 75F004         MOV    B,#004H
0A79         ?LAB210:
0A79 C3             CLR    C
0A7A 13             RRC    A
0A7B CB             XCH    A,R3
0A7C 13             RRC    A
0A7D CB             XCH    A,R3
0A7E D5F0F8         DJNZ   B,?LAB210
0A81 EB             MOV    A,R3
0A82 2430           ADD    A,#030H
0A84 FF             MOV    R7,A
0A85 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 425 
0A88 900000  R      MOV    DPTR,#time+01H
0A8B E0             MOVX   A,@DPTR
0A8C 540F           ANL    A,#00FH
0A8E 2430           ADD    A,#030H
0A90 FF             MOV    R7,A
0A91 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 426 
0A94 900000  R      MOV    DPTR,#time
0A97 E0             MOVX   A,@DPTR
0A98 54F0           ANL    A,#0F0H
0A9A FB             MOV    R3,A
0A9B E4             CLR    A
0A9C 75F004         MOV    B,#004H
0A9F         ?LAB211:
0A9F C3             CLR    C
0AA0 13             RRC    A
0AA1 CB             XCH    A,R3
0AA2 13             RRC    A
0AA3 CB             XCH    A,R3
0AA4 D5F0F8         DJNZ   B,?LAB211
0AA7 8B00    R      MOV    DigitKey,R3
                                           ; SOURCE LINE # 427 
0AA9 900000  R      MOV    DPTR,#time
0AAC E0             MOVX   A,@DPTR
0AAD 540F           ANL    A,#00FH
0AAF FA             MOV    R2,A
0AB0 E500    R      MOV    A,DigitKey
0AB2 75F00A         MOV    B,#00AH
0AB5 A4             MUL    AB
0AB6 2A             ADD    A,R2
0AB7 F500    R      MOV    DigitKey,A
                                           ; SOURCE LINE # 428 
0AB9 750011  R      MOV    CurCol,#011H
                                           ; SOURCE LINE # 429 
0ABC 7F0F           MOV    R7,#00FH
0ABE AD00    R      MOV    R5,CurCol
0AC0 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 430 
0AC3 7F5F           MOV    R7,#05FH
0AC5 120000  R      LCALL  _gPutc
0AC8 7F5F           MOV    R7,#05FH
0ACA 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 431 
0ACD 750031  R      MOV    last,#031H
                                           ; SOURCE LINE # 432 
0AD0 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 433 
0AD3 020000  R      LJMP   ?NXT130
0AD6         ?CASE143:
                                           ; SOURCE LINE # 435 
0AD6 75F00A         MOV    B,#00AH
0AD9 E500    R      MOV    A,DigitKey
0ADB 84             DIV    AB
0ADC 900000  R      MOV    DPTR,#time
0ADF F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 436 
0AE0 C4             SWAP   A
0AE1 54F0           ANL    A,#0F0H
0AE3 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 437 
0AE4 75F00A         MOV    B,#00AH
0AE7 E500    R      MOV    A,DigitKey
0AE9 84             DIV    AB
0AEA E0             MOVX   A,@DPTR
0AEB 25F0           ADD    A,B
0AED F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 439 
0AEE 7F0F           MOV    R7,#00FH
0AF0 AD00    R      MOV    R5,CurCol
0AF2 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 440 
0AF5 900000  R      MOV    DPTR,#time
0AF8 E0             MOVX   A,@DPTR
0AF9 7A00           MOV    R2,#000H
0AFB 54F0           ANL    A,#0F0H
0AFD FB             MOV    R3,A
0AFE E4             CLR    A
0AFF 75F004         MOV    B,#004H
0B02         ?LAB212:
0B02 C3             CLR    C
0B03 13             RRC    A
0B04 CB             XCH    A,R3
0B05 13             RRC    A
0B06 CB             XCH    A,R3
0B07 D5F0F8         DJNZ   B,?LAB212
0B0A EB             MOV    A,R3
0B0B 2430           ADD    A,#030H
0B0D FF             MOV    R7,A
0B0E 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 441 
0B11 900000  R      MOV    DPTR,#time
0B14 E0             MOVX   A,@DPTR
0B15 540F           ANL    A,#00FH
0B17 2430           ADD    A,#030H
0B19 FF             MOV    R7,A
0B1A 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 452 
0B1D 7F8E           MOV    R7,#08EH
0B1F E4             CLR    A
0B20 FD             MOV    R5,A
0B21 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 453 
0B24 7F80           MOV    R7,#080H
0B26 900000  R      MOV    DPTR,#time
0B29 E0             MOVX   A,@DPTR
0B2A FD             MOV    R5,A
0B2B 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 454 
0B2E 7F82           MOV    R7,#082H
0B30 900000  R      MOV    DPTR,#time+01H
0B33 E0             MOVX   A,@DPTR
0B34 FD             MOV    R5,A
0B35 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 455 
0B38 7F84           MOV    R7,#084H
0B3A 900000  R      MOV    DPTR,#time+02H
0B3D E0             MOVX   A,@DPTR
0B3E FD             MOV    R5,A
0B3F 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 456 
0B42 7F86           MOV    R7,#086H
0B44 900000  R      MOV    DPTR,#time+03H
0B47 E0             MOVX   A,@DPTR
0B48 FD             MOV    R5,A
0B49 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 457 
0B4C 7F88           MOV    R7,#088H
0B4E 900000  R      MOV    DPTR,#time+04H
0B51 E0             MOVX   A,@DPTR
0B52 FD             MOV    R5,A
0B53 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 458 
0B56 7F8A           MOV    R7,#08AH
0B58 7D03           MOV    R5,#003H
0B5A 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 459 
0B5D 7F8C           MOV    R7,#08CH
0B5F 900000  R      MOV    DPTR,#time+06H
0B62 E0             MOVX   A,@DPTR
0B63 FD             MOV    R5,A
0B64 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 460 
0B67 7F8E           MOV    R7,#08EH
0B69 7D80           MOV    R5,#080H
0B6B 120000  R      LCALL  _rWriteClk
                                           ; SOURCE LINE # 462 
0B6E 7F07           MOV    R7,#007H
0B70 7D02           MOV    R5,#002H
0B72 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 463 
0B75 7B05           MOV    R3,#005H
0B77 7A00    R      MOV    R2,#000H
0B79 7900    R      MOV    R1,#000H
0B7B 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 464 
0B7E 7F08           MOV    R7,#008H
0B80 7D02           MOV    R5,#002H
0B82 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 465 
0B85 7B05           MOV    R3,#005H
0B87 7A00    R      MOV    R2,#000H
0B89 7900    R      MOV    R1,#000H
0B8B 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 466 
0B8E 7F09           MOV    R7,#009H
0B90 7D02           MOV    R5,#002H
0B92 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 467 
0B95 7B05           MOV    R3,#005H
0B97 7A00    R      MOV    R2,#000H
0B99 7900    R      MOV    R1,#000H
0B9B 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 468 
0B9E 7F0A           MOV    R7,#00AH
0BA0 7D02           MOV    R5,#002H
0BA2 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 469 
0BA5 7B05           MOV    R3,#005H
0BA7 7A00    R      MOV    R2,#000H
0BA9 7900    R      MOV    R1,#000H
0BAB 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 470 
0BAE 7F0B           MOV    R7,#00BH
0BB0 7D02           MOV    R5,#002H
0BB2 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 471 
0BB5 7B05           MOV    R3,#005H
0BB7 7A00    R      MOV    R2,#000H
0BB9 7900    R      MOV    R1,#000H
0BBB 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 472 
0BBE 750032  R      MOV    last,#032H
                                           ; SOURCE LINE # 473 
0BC1 75001A  R      MOV    state,#01AH
0BC4         ?NXT142:
                                           ; SOURCE LINE # 476 
0BC4 020000  R      LJMP   ?WHILE1
0BC7         ?CASE84:
                                           ; SOURCE LINE # 481 
0BC7 E500    R      MOV    A,last
0BC9 B42F03         CJNE   A,#02FH,?LAB215
0BCC 020000  R      LJMP   ?CASE147
0BCF         ?LAB215:
0BCF 500F           JNC    ?LAB214
0BD1 E500    R      MOV    A,last
0BD3 24D4           ADD    A,#0D4H
0BD5 601B           JZ     ?CASE144
0BD7 14             DEC    A
0BD8 6049           JZ     ?CASE145
0BDA 14             DEC    A
0BDB 6077           JZ     ?CASE146
0BDD 020000  R      LJMP   ?NXT143
0BE0         ?LAB214:
0BE0 E500    R      MOV    A,last
0BE2 24D0           ADD    A,#0D0H
0BE4 7003           JNZ    $ + 5
0BE6 020000  R      LJMP   ?CASE148
0BE9 14             DEC    A
0BEA 7003           JNZ    $ + 5
0BEC 020000  R      LJMP   ?CASE149
0BEF 020000  R      LJMP   ?NXT130
0BF2         ?CASE144:
                                           ; SOURCE LINE # 484 
0BF2 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 485 
0BF4 E500    R      MOV    A,DigitKey
0BF6 B42003         CJNE   A,#020H,?NXT144
0BF9 750001  R      MOV    DigitKey,#001H
0BFC         ?NXT144:
                                           ; SOURCE LINE # 486 
0BFC 7F0F           MOV    R7,#00FH
0BFE AD00    R      MOV    R5,CurCol
0C00 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 487 
0C03 75F00A         MOV    B,#00AH
0C06 E500    R      MOV    A,DigitKey
0C08 84             DIV    AB
0C09 2430           ADD    A,#030H
0C0B FF             MOV    R7,A
0C0C 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 488 
0C0F 75F00A         MOV    B,#00AH
0C12 E500    R      MOV    A,DigitKey
0C14 84             DIV    AB
0C15 E5F0           MOV    A,B
0C17 2430           ADD    A,#030H
0C19 FF             MOV    R7,A
0C1A 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 489 
0C1D 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 490 
0C20 020000  R      LJMP   ?NXT130
0C23         ?CASE145:
                                           ; SOURCE LINE # 492 
0C23 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 493 
0C25 E500    R      MOV    A,DigitKey
0C27 B40D03         CJNE   A,#00DH,?NXT145
0C2A 750001  R      MOV    DigitKey,#001H
0C2D         ?NXT145:
                                           ; SOURCE LINE # 494 
0C2D 7F0F           MOV    R7,#00FH
0C2F AD00    R      MOV    R5,CurCol
0C31 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 495 
0C34 75F00A         MOV    B,#00AH
0C37 E500    R      MOV    A,DigitKey
0C39 84             DIV    AB
0C3A 2430           ADD    A,#030H
0C3C FF             MOV    R7,A
0C3D 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 496 
0C40 75F00A         MOV    B,#00AH
0C43 E500    R      MOV    A,DigitKey
0C45 84             DIV    AB
0C46 E5F0           MOV    A,B
0C48 2430           ADD    A,#030H
0C4A FF             MOV    R7,A
0C4B 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 497 
0C4E 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 498 
0C51 020000  R      LJMP   ?NXT130
0C54         ?CASE146:
                                           ; SOURCE LINE # 500 
0C54 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 501 
0C56 E500    R      MOV    A,DigitKey
0C58 B46403         CJNE   A,#064H,?NXT146
0C5B E4             CLR    A
0C5C F500    R      MOV    DigitKey,A
0C5E         ?NXT146:
                                           ; SOURCE LINE # 502 
0C5E 7F0F           MOV    R7,#00FH
0C60 AD00    R      MOV    R5,CurCol
0C62 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 503 
0C65 75F00A         MOV    B,#00AH
0C68 E500    R      MOV    A,DigitKey
0C6A 84             DIV    AB
0C6B 2430           ADD    A,#030H
0C6D FF             MOV    R7,A
0C6E 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 504 
0C71 75F00A         MOV    B,#00AH
0C74 E500    R      MOV    A,DigitKey
0C76 84             DIV    AB
0C77 E5F0           MOV    A,B
0C79 2430           ADD    A,#030H
0C7B FF             MOV    R7,A
0C7C 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 505 
0C7F 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 506 
0C82 020000  R      LJMP   ?NXT130
0C85         ?CASE147:
                                           ; SOURCE LINE # 508 
0C85 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 509 
0C87 E500    R      MOV    A,DigitKey
0C89 B41803         CJNE   A,#018H,?NXT147
0C8C E4             CLR    A
0C8D F500    R      MOV    DigitKey,A
0C8F         ?NXT147:
                                           ; SOURCE LINE # 510 
0C8F 7F0F           MOV    R7,#00FH
0C91 AD00    R      MOV    R5,CurCol
0C93 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 511 
0C96 75F00A         MOV    B,#00AH
0C99 E500    R      MOV    A,DigitKey
0C9B 84             DIV    AB
0C9C 2430           ADD    A,#030H
0C9E FF             MOV    R7,A
0C9F 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 512 
0CA2 75F00A         MOV    B,#00AH
0CA5 E500    R      MOV    A,DigitKey
0CA7 84             DIV    AB
0CA8 E5F0           MOV    A,B
0CAA 2430           ADD    A,#030H
0CAC FF             MOV    R7,A
0CAD 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 513 
0CB0 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 514 
0CB3 020000  R      LJMP   ?NXT130
0CB6         ?CASE148:
                                           ; SOURCE LINE # 516 
0CB6 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 517 
0CB8 E500    R      MOV    A,DigitKey
0CBA B43C03         CJNE   A,#03CH,?NXT148
0CBD E4             CLR    A
0CBE F500    R      MOV    DigitKey,A
0CC0         ?NXT148:
                                           ; SOURCE LINE # 518 
0CC0 7F0F           MOV    R7,#00FH
0CC2 AD00    R      MOV    R5,CurCol
0CC4 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 519 
0CC7 75F00A         MOV    B,#00AH
0CCA E500    R      MOV    A,DigitKey
0CCC 84             DIV    AB
0CCD 2430           ADD    A,#030H
0CCF FF             MOV    R7,A
0CD0 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 520 
0CD3 75F00A         MOV    B,#00AH
0CD6 E500    R      MOV    A,DigitKey
0CD8 84             DIV    AB
0CD9 E5F0           MOV    A,B
0CDB 2430           ADD    A,#030H
0CDD FF             MOV    R7,A
0CDE 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 521 
0CE1 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 522 
0CE4 020000  R      LJMP   ?NXT130
0CE7         ?CASE149:
                                           ; SOURCE LINE # 524 
0CE7 0500    R      INC    DigitKey
                                           ; SOURCE LINE # 525 
0CE9 E500    R      MOV    A,DigitKey
0CEB B43C03         CJNE   A,#03CH,?NXT149
0CEE E4             CLR    A
0CEF F500    R      MOV    DigitKey,A
0CF1         ?NXT149:
                                           ; SOURCE LINE # 526 
0CF1 7F0F           MOV    R7,#00FH
0CF3 AD00    R      MOV    R5,CurCol
0CF5 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 527 
0CF8 75F00A         MOV    B,#00AH
0CFB E500    R      MOV    A,DigitKey
0CFD 84             DIV    AB
0CFE 2430           ADD    A,#030H
0D00 FF             MOV    R7,A
0D01 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 528 
0D04 75F00A         MOV    B,#00AH
0D07 E500    R      MOV    A,DigitKey
0D09 84             DIV    AB
0D0A E5F0           MOV    A,B
0D0C 2430           ADD    A,#030H
0D0E FF             MOV    R7,A
0D0F 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 529 
0D12 750019  R      MOV    state,#019H
0D15         ?NXT143:
                                           ; SOURCE LINE # 532 
0D15 020000  R      LJMP   ?WHILE1
0D18         ?CASE89:
                                           ; SOURCE LINE # 537 
0D18 E500    R      MOV    A,last
0D1A 24DD           ADD    A,#0DDH
0D1C 6007           JZ     ?CASE151
0D1E 24FA           ADD    A,#0FAH
0D20 6003           JZ     ?CASE151
0D22 020000  R      LJMP   ?NXT150
0D25         ?CASE151:
                                           ; SOURCE LINE # 542 
0D25 750019  R      MOV    state,#019H
                                           ; SOURCE LINE # 543 
0D28 C200    R      CLR    _gClear?BIT
0D2A 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 544 
0D2D 750092  R      MOV    _gDrawRect?BYTE,#092H
0D30 C200    R      CLR    _gDrawRect?BIT
0D32 7F0E           MOV    R7,#00EH
0D34 7D88           MOV    R5,#088H
0D36 7B18           MOV    R3,#018H
0D38 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 545 
0D3B E4             CLR    A
0D3C FF             MOV    R7,A
0D3D 7D03           MOV    R5,#003H
0D3F 120000  R      LCALL  _gGotoXY
0D42 7B05           MOV    R3,#005H
0D44 7A00    R      MOV    R2,#000H
0D46 7900    R      MOV    R1,#000H
0D48 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 546 
0D4B 7F03           MOV    R7,#003H
0D4D 7D03           MOV    R5,#003H
0D4F 120000  R      LCALL  _gGotoXY
0D52 7B05           MOV    R3,#005H
0D54 7A00    R      MOV    R2,#000H
0D56 7900    R      MOV    R1,#000H
0D58 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 547 
0D5B E4             CLR    A
0D5C FF             MOV    R7,A
0D5D F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 549 
0D5F 7E70           MOV    R6,#070H
0D61 120000  R      LCALL  _ROM_Read
0D64 8F00    R      MOV    qReadings,R7
                                           ; SOURCE LINE # 550 
0D66 7E70           MOV    R6,#070H
0D68 7F01           MOV    R7,#001H
0D6A 120000  R      LCALL  _ROM_Read
0D6D EF             MOV    A,R7
0D6E 24FF           ADD    A,#0FFH
0D70 F500    R      MOV    qRear,A
                                           ; SOURCE LINE # 552 
0D72 E500    R      MOV    A,qReadings
0D74 7033           JNZ    ?ELSE73
                                           ; SOURCE LINE # 554 
0D76 7F08           MOV    R7,#008H
0D78 7D02           MOV    R5,#002H
0D7A 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 555 
0D7D 7B05           MOV    R3,#005H
0D7F 7A00    R      MOV    R2,#000H
0D81 7900    R      MOV    R1,#000H
0D83 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 557 
0D86 7F0A           MOV    R7,#00AH
0D88 7D02           MOV    R5,#002H
0D8A 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 558 
0D8D 7B05           MOV    R3,#005H
0D8F 7A00    R      MOV    R2,#000H
0D91 7900    R      MOV    R1,#000H
0D93 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 559 
0D96 7F0B           MOV    R7,#00BH
0D98 7D02           MOV    R5,#002H
0D9A 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 560 
0D9D 7B05           MOV    R3,#005H
0D9F 7A00    R      MOV    R2,#000H
0DA1 7900    R      MOV    R1,#000H
0DA3 120000  R      LCALL  _gPutStr
0DA6 020000  R      LJMP   ?NXT151
0DA9         ?ELSE73:
                                           ; SOURCE LINE # 564 
0DA9 7F06           MOV    R7,#006H
0DAB 7D02           MOV    R5,#002H
0DAD 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 565 
0DB0 7B05           MOV    R3,#005H
0DB2 7A00    R      MOV    R2,#000H
0DB4 7900    R      MOV    R1,#000H
0DB6 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 566 
0DB9 7F06           MOV    R7,#006H
0DBB 7D02           MOV    R5,#002H
0DBD 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 567 
0DC0 E500    R      MOV    A,qRear
0DC2 33             RLC    A
0DC3 95E0           SUBB   A,ACC
0DC5 FA             MOV    R2,A
0DC6 E500    R      MOV    A,qHits
0DC8 33             RLC    A
0DC9 95E0           SUBB   A,ACC
0DCB FC             MOV    R4,A
0DCC E500    R      MOV    A,qRear
0DCE C3             CLR    C
0DCF 9500    R      SUBB   A,qHits
0DD1 EA             MOV    A,R2
0DD2 9C             SUBB   A,R4
0DD3 30E70B         JNB    ACC.7,?ELSE74
                                           ; SOURCE LINE # 568 
0DD6 E500    R      MOV    A,qRear
0DD8 240A           ADD    A,#00AH
0DDA C3             CLR    C
0DDB 9500    R      SUBB   A,qHits
0DDD F500    R      MOV    qPtr,A
0DDF 8007           SJMP   ?NXT152
0DE1         ?ELSE74:
                                           ; SOURCE LINE # 570 
0DE1 E500    R      MOV    A,qRear
0DE3 C3             CLR    C
0DE4 9500    R      SUBB   A,qHits
0DE6 F500    R      MOV    qPtr,A
0DE8         ?NXT152:
                                           ; SOURCE LINE # 572 
0DE8 750000  R      MOV    p,#000H
0DEB         ?FOR23:
0DEB E500    R      MOV    A,p
0DED 6480           XRL    A,#080H
0DEF B4A000         CJNE   A,#0A0H,?LAB217
0DF2         ?LAB217:
0DF2 4003           JC     $ + 5
0DF4 020000  R      LJMP   ?NXT153
                                           ; SOURCE LINE # 574 
0DF7 75F004         MOV    B,#004H
0DFA E500    R      MOV    A,p
0DFC 33             RLC    A
0DFD 95E0           SUBB   A,ACC
0DFF E500    R      MOV    A,p
0E01 A4             MUL    AB
0E02 FB             MOV    R3,A
0E03 AAF0           MOV    R2,B
0E05 E500    R      MOV    A,qPtr
0E07 AF00    R      MOV    R7,qPtr
0E09 33             RLC    A
0E0A 95E0           SUBB   A,ACC
0E0C FE             MOV    R6,A
0E0D 7C02           MOV    R4,#002H
0E0F E4             CLR    A
0E10 FD             MOV    R5,A
0E11 120000  R      LCALL  ?C_IMUL
0E14 EB             MOV    A,R3
0E15 2F             ADD    A,R7
0E16 FF             MOV    R7,A
0E17 EA             MOV    A,R2
0E18 3E             ADDC   A,R6
0E19 FE             MOV    R6,A
0E1A EF             MOV    A,R7
0E1B 2403           ADD    A,#003H
0E1D FF             MOV    R7,A
0E1E E4             CLR    A
0E1F 3E             ADDC   A,R6
0E20 FE             MOV    R6,A
0E21 120000  R      LCALL  _ROM_Read
0E24 7E00           MOV    R6,#000H
0E26 E4             CLR    A
0E27 FC             MOV    R4,A
0E28 FD             MOV    R5,A
0E29 C004           PUSH   AR4
0E2B C005           PUSH   AR5
0E2D C006           PUSH   AR6
0E2F C007           PUSH   AR7
0E31 E500    R      MOV    A,p
0E33 33             RLC    A
0E34 95E0           SUBB   A,ACC
0E36 E500    R      MOV    A,p
0E38 23             RL     A
0E39 23             RL     A
0E3A 54FC           ANL    A,#0FCH
0E3C 2400    R      ADD    A,#LOW (Interval)
0E3E F582           MOV    DPL,A
0E40 E4             CLR    A
0E41 3400    R      ADDC   A,#HIGH (Interval)
0E43 F583           MOV    DPH,A
0E45 A3             INC    DPTR
0E46 A3             INC    DPTR
0E47 A3             INC    DPTR
0E48 D0E0           POP    ACC
0E4A F0             MOVX   @DPTR,A
0E4B 120000  R      LCALL  ?C_DECDPTR
0E4E D0E0           POP    ACC
0E50 F0             MOVX   @DPTR,A
0E51 120000  R      LCALL  ?C_DECDPTR
0E54 D0E0           POP    ACC
0E56 F0             MOVX   @DPTR,A
0E57 120000  R      LCALL  ?C_DECDPTR
0E5A D0E0           POP    ACC
0E5C F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 575 
0E5D E500    R      MOV    A,p
0E5F 23             RL     A
0E60 23             RL     A
0E61 54FC           ANL    A,#0FCH
0E63 2400    R      ADD    A,#LOW (Interval)
0E65 F582           MOV    DPL,A
0E67 E4             CLR    A
0E68 3400    R      ADDC   A,#HIGH (Interval)
0E6A F583           MOV    DPH,A
0E6C 120000  R      LCALL  MV4_XD2RG?C
0E6F 75F008         MOV    B,#008H
0E72 120000  R      LCALL  ?C_LSHL
0E75 C004           PUSH   AR4
0E77 C005           PUSH   AR5
0E79 C006           PUSH   AR6
0E7B C007           PUSH   AR7
0E7D 75F004         MOV    B,#004H
0E80 E500    R      MOV    A,p
0E82 33             RLC    A
0E83 95E0           SUBB   A,ACC
0E85 E500    R      MOV    A,p
0E87 A4             MUL    AB
0E88 FF             MOV    R7,A
0E89 C0F0           PUSH   B
0E8B C007           PUSH   AR7
0E8D E500    R      MOV    A,qPtr
0E8F AF00    R      MOV    R7,qPtr
0E91 33             RLC    A
0E92 95E0           SUBB   A,ACC
0E94 FE             MOV    R6,A
0E95 7C02           MOV    R4,#002H
0E97 E4             CLR    A
0E98 FD             MOV    R5,A
0E99 120000  R      LCALL  ?C_IMUL
0E9C D0E0           POP    ACC
0E9E 2F             ADD    A,R7
0E9F FF             MOV    R7,A
0EA0 D0E0           POP    ACC
0EA2 3E             ADDC   A,R6
0EA3 FE             MOV    R6,A
0EA4 EF             MOV    A,R7
0EA5 2402           ADD    A,#002H
0EA7 FF             MOV    R7,A
0EA8 E4             CLR    A
0EA9 3E             ADDC   A,R6
0EAA FE             MOV    R6,A
0EAB 120000  R      LCALL  _ROM_Read
0EAE 7C00           MOV    R4,#000H
0EB0 E4             CLR    A
0EB1 FD             MOV    R5,A
0EB2 C0E0           PUSH   ACC
0EB4 D006           POP    AR6
0EB6 120000  R      LCALL  ?C_LADD
0EB9 C004           PUSH   AR4
0EBB C005           PUSH   AR5
0EBD C006           PUSH   AR6
0EBF C007           PUSH   AR7
0EC1 E500    R      MOV    A,p
0EC3 33             RLC    A
0EC4 95E0           SUBB   A,ACC
0EC6 E500    R      MOV    A,p
0EC8 23             RL     A
0EC9 23             RL     A
0ECA 54FC           ANL    A,#0FCH
0ECC 2400    R      ADD    A,#LOW (Interval)
0ECE F582           MOV    DPL,A
0ED0 E4             CLR    A
0ED1 3400    R      ADDC   A,#HIGH (Interval)
0ED3 F583           MOV    DPH,A
0ED5 A3             INC    DPTR
0ED6 A3             INC    DPTR
0ED7 A3             INC    DPTR
0ED8 D0E0           POP    ACC
0EDA F0             MOVX   @DPTR,A
0EDB 120000  R      LCALL  ?C_DECDPTR
0EDE D0E0           POP    ACC
0EE0 F0             MOVX   @DPTR,A
0EE1 120000  R      LCALL  ?C_DECDPTR
0EE4 D0E0           POP    ACC
0EE6 F0             MOVX   @DPTR,A
0EE7 120000  R      LCALL  ?C_DECDPTR
0EEA D0E0           POP    ACC
0EEC F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 576 
0EED E500    R      MOV    A,p
0EEF 33             RLC    A
0EF0 95E0           SUBB   A,ACC
0EF2 E500    R      MOV    A,p
0EF4 23             RL     A
0EF5 23             RL     A
0EF6 54FC           ANL    A,#0FCH
0EF8 2400    R      ADD    A,#LOW (Interval)
0EFA F582           MOV    DPL,A
0EFC E4             CLR    A
0EFD 3400    R      ADDC   A,#HIGH (Interval)
0EFF F583           MOV    DPH,A
0F01 120000  R      LCALL  MV4_XD2RG?C
0F04 75F008         MOV    B,#008H
0F07 120000  R      LCALL  ?C_LSHL
0F0A C004           PUSH   AR4
0F0C C005           PUSH   AR5
0F0E C006           PUSH   AR6
0F10 C007           PUSH   AR7
0F12 75F004         MOV    B,#004H
0F15 E500    R      MOV    A,p
0F17 33             RLC    A
0F18 95E0           SUBB   A,ACC
0F1A E500    R      MOV    A,p
0F1C A4             MUL    AB
0F1D FF             MOV    R7,A
0F1E C0F0           PUSH   B
0F20 C007           PUSH   AR7
0F22 E500    R      MOV    A,qPtr
0F24 AF00    R      MOV    R7,qPtr
0F26 33             RLC    A
0F27 95E0           SUBB   A,ACC
0F29 FE             MOV    R6,A
0F2A 7C02           MOV    R4,#002H
0F2C E4             CLR    A
0F2D FD             MOV    R5,A
0F2E 120000  R      LCALL  ?C_IMUL
0F31 D0E0           POP    ACC
0F33 2F             ADD    A,R7
0F34 FF             MOV    R7,A
0F35 D0E0           POP    ACC
0F37 3E             ADDC   A,R6
0F38 FE             MOV    R6,A
0F39 EF             MOV    A,R7
0F3A 2401           ADD    A,#001H
0F3C FF             MOV    R7,A
0F3D E4             CLR    A
0F3E 3E             ADDC   A,R6
0F3F FE             MOV    R6,A
0F40 120000  R      LCALL  _ROM_Read
0F43 7C00           MOV    R4,#000H
0F45 E4             CLR    A
0F46 FD             MOV    R5,A
0F47 C0E0           PUSH   ACC
0F49 D006           POP    AR6
0F4B 120000  R      LCALL  ?C_LADD
0F4E C004           PUSH   AR4
0F50 C005           PUSH   AR5
0F52 C006           PUSH   AR6
0F54 C007           PUSH   AR7
0F56 E500    R      MOV    A,p
0F58 33             RLC    A
0F59 95E0           SUBB   A,ACC
0F5B E500    R      MOV    A,p
0F5D 23             RL     A
0F5E 23             RL     A
0F5F 54FC           ANL    A,#0FCH
0F61 2400    R      ADD    A,#LOW (Interval)
0F63 F582           MOV    DPL,A
0F65 E4             CLR    A
0F66 3400    R      ADDC   A,#HIGH (Interval)
0F68 F583           MOV    DPH,A
0F6A A3             INC    DPTR
0F6B A3             INC    DPTR
0F6C A3             INC    DPTR
0F6D D0E0           POP    ACC
0F6F F0             MOVX   @DPTR,A
0F70 120000  R      LCALL  ?C_DECDPTR
0F73 D0E0           POP    ACC
0F75 F0             MOVX   @DPTR,A
0F76 120000  R      LCALL  ?C_DECDPTR
0F79 D0E0           POP    ACC
0F7B F0             MOVX   @DPTR,A
0F7C 120000  R      LCALL  ?C_DECDPTR
0F7F D0E0           POP    ACC
0F81 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 577 
0F82 E500    R      MOV    A,p
0F84 33             RLC    A
0F85 95E0           SUBB   A,ACC
0F87 E500    R      MOV    A,p
0F89 23             RL     A
0F8A 23             RL     A
0F8B 54FC           ANL    A,#0FCH
0F8D 2400    R      ADD    A,#LOW (Interval)
0F8F F582           MOV    DPL,A
0F91 E4             CLR    A
0F92 3400    R      ADDC   A,#HIGH (Interval)
0F94 F583           MOV    DPH,A
0F96 120000  R      LCALL  MV4_XD2RG?C
0F99 75F008         MOV    B,#008H
0F9C 120000  R      LCALL  ?C_LSHL
0F9F C004           PUSH   AR4
0FA1 C005           PUSH   AR5
0FA3 C006           PUSH   AR6
0FA5 C007           PUSH   AR7
0FA7 75F004         MOV    B,#004H
0FAA E500    R      MOV    A,p
0FAC 33             RLC    A
0FAD 95E0           SUBB   A,ACC
0FAF E500    R      MOV    A,p
0FB1 A4             MUL    AB
0FB2 FF             MOV    R7,A
0FB3 C0F0           PUSH   B
0FB5 C007           PUSH   AR7
0FB7 E500    R      MOV    A,qPtr
0FB9 AF00    R      MOV    R7,qPtr
0FBB 33             RLC    A
0FBC 95E0           SUBB   A,ACC
0FBE FE             MOV    R6,A
0FBF 7C02           MOV    R4,#002H
0FC1 E4             CLR    A
0FC2 FD             MOV    R5,A
0FC3 120000  R      LCALL  ?C_IMUL
0FC6 D0E0           POP    ACC
0FC8 2F             ADD    A,R7
0FC9 FF             MOV    R7,A
0FCA D0E0           POP    ACC
0FCC 3E             ADDC   A,R6
0FCD FE             MOV    R6,A
0FCE 120000  R      LCALL  _ROM_Read
0FD1 7C00           MOV    R4,#000H
0FD3 E4             CLR    A
0FD4 FD             MOV    R5,A
0FD5 C0E0           PUSH   ACC
0FD7 D006           POP    AR6
0FD9 120000  R      LCALL  ?C_LADD
0FDC C004           PUSH   AR4
0FDE C005           PUSH   AR5
0FE0 C006           PUSH   AR6
0FE2 C007           PUSH   AR7
0FE4 E500    R      MOV    A,p
0FE6 33             RLC    A
0FE7 95E0           SUBB   A,ACC
0FE9 E500    R      MOV    A,p
0FEB 23             RL     A
0FEC 23             RL     A
0FED 54FC           ANL    A,#0FCH
0FEF 2400    R      ADD    A,#LOW (Interval)
0FF1 F582           MOV    DPL,A
0FF3 E4             CLR    A
0FF4 3400    R      ADDC   A,#HIGH (Interval)
0FF6 F583           MOV    DPH,A
0FF8 A3             INC    DPTR
0FF9 A3             INC    DPTR
0FFA A3             INC    DPTR
0FFB D0E0           POP    ACC
0FFD F0             MOVX   @DPTR,A
0FFE 120000  R      LCALL  ?C_DECDPTR
1001 D0E0           POP    ACC
1003 F0             MOVX   @DPTR,A
1004 120000  R      LCALL  ?C_DECDPTR
1007 D0E0           POP    ACC
1009 F0             MOVX   @DPTR,A
100A 120000  R      LCALL  ?C_DECDPTR
100D D0E0           POP    ACC
100F F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 572 
1010 0500    R      INC    p
1012 020000  R      LJMP   ?FOR23
1015         ?NXT153:
                                           ; SOURCE LINE # 580 
1015 E500    R      MOV    A,qPtr
1017 AF00    R      MOV    R7,qPtr
1019 33             RLC    A
101A 95E0           SUBB   A,ACC
101C FE             MOV    R6,A
101D 7C02           MOV    R4,#002H
101F E4             CLR    A
1020 FD             MOV    R5,A
1021 120000  R      LCALL  ?C_IMUL
1024 EF             MOV    A,R7
1025 2480           ADD    A,#080H
1027 FF             MOV    R7,A
1028 EE             MOV    A,R6
1029 3401           ADDC   A,#001H
102B FE             MOV    R6,A
102C 120000  R      LCALL  _ROM_Read
102F 8F00    R      MOV    StopTh1,R7
                                           ; SOURCE LINE # 581 
1031 E500    R      MOV    A,qPtr
1033 AF00    R      MOV    R7,qPtr
1035 33             RLC    A
1036 95E0           SUBB   A,ACC
1038 FE             MOV    R6,A
1039 7C02           MOV    R4,#002H
103B E4             CLR    A
103C FD             MOV    R5,A
103D 120000  R      LCALL  ?C_IMUL
1040 EF             MOV    A,R7
1041 2481           ADD    A,#081H
1043 FF             MOV    R7,A
1044 EE             MOV    A,R6
1045 3401           ADDC   A,#001H
1047 FE             MOV    R6,A
1048 120000  R      LCALL  _ROM_Read
104B 8F00    R      MOV    StartTh2,R7
                                           ; SOURCE LINE # 582 
104D 750000  R      MOV    p,#000H
1050         ?FOR24:
1050 E500    R      MOV    A,p
1052 6480           XRL    A,#080H
1054 B48800         CJNE   A,#088H,?LAB219
1057         ?LAB219:
1057 503E           JNC    ?NXT155
                                           ; SOURCE LINE # 583 
1059 E500    R      MOV    A,p
105B 33             RLC    A
105C 95E0           SUBB   A,ACC
105E FA             MOV    R2,A
105F E500    R      MOV    A,qPtr
1061 AF00    R      MOV    R7,qPtr
1063 33             RLC    A
1064 95E0           SUBB   A,ACC
1066 FE             MOV    R6,A
1067 7C02           MOV    R4,#002H
1069 E4             CLR    A
106A FD             MOV    R5,A
106B 120000  R      LCALL  ?C_IMUL
106E E500    R      MOV    A,p
1070 2F             ADD    A,R7
1071 FF             MOV    R7,A
1072 EA             MOV    A,R2
1073 3E             ADDC   A,R6
1074 FE             MOV    R6,A
1075 EF             MOV    A,R7
1076 2482           ADD    A,#082H
1078 FF             MOV    R7,A
1079 EE             MOV    A,R6
107A 3401           ADDC   A,#001H
107C FE             MOV    R6,A
107D 120000  R      LCALL  _ROM_Read
1080 E500    R      MOV    A,p
1082 33             RLC    A
1083 95E0           SUBB   A,ACC
1085 FA             MOV    R2,A
1086 E500    R      MOV    A,p
1088 2400    R      ADD    A,#LOW (tSave)
108A F582           MOV    DPL,A
108C EA             MOV    A,R2
108D 3400    R      ADDC   A,#HIGH (tSave)
108F F583           MOV    DPH,A
1091 EF             MOV    A,R7
1092 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 572 
1093 0500    R      INC    p
1095 80B9           SJMP   ?FOR24
1097         ?NXT155:
                                           ; SOURCE LINE # 585 
1097 E500    R      MOV    A,qPtr
1099 AF00    R      MOV    R7,qPtr
109B 33             RLC    A
109C 95E0           SUBB   A,ACC
109E FE             MOV    R6,A
109F 7C02           MOV    R4,#002H
10A1 E4             CLR    A
10A2 FD             MOV    R5,A
10A3 120000  R      LCALL  ?C_IMUL
10A6 EF             MOV    A,R7
10A7 248C           ADD    A,#08CH
10A9 FF             MOV    R7,A
10AA EE             MOV    A,R6
10AB 3401           ADDC   A,#001H
10AD FE             MOV    R6,A
10AE 120000  R      LCALL  _ROM_Read
10B1 E4             CLR    A
10B2 F500    R      MOV    min,A
10B4 F500    R      MOV    min+01H,A
10B6 F500    R      MOV    min+02H,A
10B8 8F00    R      MOV    min+03H,R7
                                           ; SOURCE LINE # 586 
10BA AC00    R      MOV    R4,min
10BC AD00    R      MOV    R5,min+01H
10BE AE00    R      MOV    R6,min+02H
10C0 AF00    R      MOV    R7,min+03H
10C2 75F008         MOV    B,#008H
10C5 120000  R      LCALL  ?C_LSHL
10C8 C004           PUSH   AR4
10CA C005           PUSH   AR5
10CC C006           PUSH   AR6
10CE C007           PUSH   AR7
10D0 E500    R      MOV    A,qPtr
10D2 AF00    R      MOV    R7,qPtr
10D4 33             RLC    A
10D5 95E0           SUBB   A,ACC
10D7 FE             MOV    R6,A
10D8 7C02           MOV    R4,#002H
10DA E4             CLR    A
10DB FD             MOV    R5,A
10DC 120000  R      LCALL  ?C_IMUL
10DF EF             MOV    A,R7
10E0 248B           ADD    A,#08BH
10E2 FF             MOV    R7,A
10E3 EE             MOV    A,R6
10E4 3401           ADDC   A,#001H
10E6 FE             MOV    R6,A
10E7 120000  R      LCALL  _ROM_Read
10EA 7E00           MOV    R6,#000H
10EC E4             CLR    A
10ED FC             MOV    R4,A
10EE FD             MOV    R5,A
10EF 120000  R      LCALL  ?C_LADD
10F2 8C00    R      MOV    min,R4
10F4 8D00    R      MOV    min+01H,R5
10F6 8E00    R      MOV    min+02H,R6
10F8 8F00    R      MOV    min+03H,R7
                                           ; SOURCE LINE # 587 
10FA AC00    R      MOV    R4,min
10FC AD00    R      MOV    R5,min+01H
10FE AE00    R      MOV    R6,min+02H
1100 AF00    R      MOV    R7,min+03H
1102 75F008         MOV    B,#008H
1105 120000  R      LCALL  ?C_LSHL
1108 C004           PUSH   AR4
110A C005           PUSH   AR5
110C C006           PUSH   AR6
110E C007           PUSH   AR7
1110 E500    R      MOV    A,qPtr
1112 AF00    R      MOV    R7,qPtr
1114 33             RLC    A
1115 95E0           SUBB   A,ACC
1117 FE             MOV    R6,A
1118 7C02           MOV    R4,#002H
111A E4             CLR    A
111B FD             MOV    R5,A
111C 120000  R      LCALL  ?C_IMUL
111F EF             MOV    A,R7
1120 248A           ADD    A,#08AH
1122 FF             MOV    R7,A
1123 EE             MOV    A,R6
1124 3401           ADDC   A,#001H
1126 FE             MOV    R6,A
1127 120000  R      LCALL  _ROM_Read
112A 7E00           MOV    R6,#000H
112C E4             CLR    A
112D FC             MOV    R4,A
112E FD             MOV    R5,A
112F 120000  R      LCALL  ?C_LADD
1132 8C00    R      MOV    min,R4
1134 8D00    R      MOV    min+01H,R5
1136 8E00    R      MOV    min+02H,R6
1138 8F00    R      MOV    min+03H,R7
                                           ; SOURCE LINE # 588 
113A AC00    R      MOV    R4,min
113C AD00    R      MOV    R5,min+01H
113E AE00    R      MOV    R6,min+02H
1140 AF00    R      MOV    R7,min+03H
1142 75F008         MOV    B,#008H
1145 120000  R      LCALL  ?C_LSHL
1148 C004           PUSH   AR4
114A C005           PUSH   AR5
114C C006           PUSH   AR6
114E C007           PUSH   AR7
1150 E500    R      MOV    A,qPtr
1152 AF00    R      MOV    R7,qPtr
1154 33             RLC    A
1155 95E0           SUBB   A,ACC
1157 FE             MOV    R6,A
1158 7C02           MOV    R4,#002H
115A E4             CLR    A
115B FD             MOV    R5,A
115C 120000  R      LCALL  ?C_IMUL
115F EF             MOV    A,R7
1160 2489           ADD    A,#089H
1162 FF             MOV    R7,A
1163 EE             MOV    A,R6
1164 3401           ADDC   A,#001H
1166 FE             MOV    R6,A
1167 120000  R      LCALL  _ROM_Read
116A 7E00           MOV    R6,#000H
116C E4             CLR    A
116D FC             MOV    R4,A
116E FD             MOV    R5,A
116F 120000  R      LCALL  ?C_LADD
1172 8C00    R      MOV    min,R4
1174 8D00    R      MOV    min+01H,R5
1176 8E00    R      MOV    min+02H,R6
1178 8F00    R      MOV    min+03H,R7
                                           ; SOURCE LINE # 590 
117A E500    R      MOV    A,qPtr
117C AF00    R      MOV    R7,qPtr
117E 33             RLC    A
117F 95E0           SUBB   A,ACC
1181 FE             MOV    R6,A
1182 7C02           MOV    R4,#002H
1184 E4             CLR    A
1185 FD             MOV    R5,A
1186 120000  R      LCALL  ?C_IMUL
1189 EF             MOV    A,R7
118A 2490           ADD    A,#090H
118C FF             MOV    R7,A
118D EE             MOV    A,R6
118E 3401           ADDC   A,#001H
1190 FE             MOV    R6,A
1191 120000  R      LCALL  _ROM_Read
1194 E4             CLR    A
1195 F500    R      MOV    max,A
1197 F500    R      MOV    max+01H,A
1199 F500    R      MOV    max+02H,A
119B 8F00    R      MOV    max+03H,R7
                                           ; SOURCE LINE # 591 
119D AC00    R      MOV    R4,max
119F AD00    R      MOV    R5,max+01H
11A1 AE00    R      MOV    R6,max+02H
11A3 AF00    R      MOV    R7,max+03H
11A5 75F008         MOV    B,#008H
11A8 120000  R      LCALL  ?C_LSHL
11AB C004           PUSH   AR4
11AD C005           PUSH   AR5
11AF C006           PUSH   AR6
11B1 C007           PUSH   AR7
11B3 E500    R      MOV    A,qPtr
11B5 AF00    R      MOV    R7,qPtr
11B7 33             RLC    A
11B8 95E0           SUBB   A,ACC
11BA FE             MOV    R6,A
11BB 7C02           MOV    R4,#002H
11BD E4             CLR    A
11BE FD             MOV    R5,A
11BF 120000  R      LCALL  ?C_IMUL
11C2 EF             MOV    A,R7
11C3 248F           ADD    A,#08FH
11C5 FF             MOV    R7,A
11C6 EE             MOV    A,R6
11C7 3401           ADDC   A,#001H
11C9 FE             MOV    R6,A
11CA 120000  R      LCALL  _ROM_Read
11CD 7E00           MOV    R6,#000H
11CF E4             CLR    A
11D0 FC             MOV    R4,A
11D1 FD             MOV    R5,A
11D2 120000  R      LCALL  ?C_LADD
11D5 8C00    R      MOV    max,R4
11D7 8D00    R      MOV    max+01H,R5
11D9 8E00    R      MOV    max+02H,R6
11DB 8F00    R      MOV    max+03H,R7
                                           ; SOURCE LINE # 592 
11DD AC00    R      MOV    R4,max
11DF AD00    R      MOV    R5,max+01H
11E1 AE00    R      MOV    R6,max+02H
11E3 AF00    R      MOV    R7,max+03H
11E5 75F008         MOV    B,#008H
11E8 120000  R      LCALL  ?C_LSHL
11EB C004           PUSH   AR4
11ED C005           PUSH   AR5
11EF C006           PUSH   AR6
11F1 C007           PUSH   AR7
11F3 E500    R      MOV    A,qPtr
11F5 AF00    R      MOV    R7,qPtr
11F7 33             RLC    A
11F8 95E0           SUBB   A,ACC
11FA FE             MOV    R6,A
11FB 7C02           MOV    R4,#002H
11FD E4             CLR    A
11FE FD             MOV    R5,A
11FF 120000  R      LCALL  ?C_IMUL
1202 EF             MOV    A,R7
1203 248E           ADD    A,#08EH
1205 FF             MOV    R7,A
1206 EE             MOV    A,R6
1207 3401           ADDC   A,#001H
1209 FE             MOV    R6,A
120A 120000  R      LCALL  _ROM_Read
120D 7E00           MOV    R6,#000H
120F E4             CLR    A
1210 FC             MOV    R4,A
1211 FD             MOV    R5,A
1212 120000  R      LCALL  ?C_LADD
1215 8C00    R      MOV    max,R4
1217 8D00    R      MOV    max+01H,R5
1219 8E00    R      MOV    max+02H,R6
121B 8F00    R      MOV    max+03H,R7
                                           ; SOURCE LINE # 593 
121D AC00    R      MOV    R4,max
121F AD00    R      MOV    R5,max+01H
1221 AE00    R      MOV    R6,max+02H
1223 AF00    R      MOV    R7,max+03H
1225 75F008         MOV    B,#008H
1228 120000  R      LCALL  ?C_LSHL
122B C004           PUSH   AR4
122D C005           PUSH   AR5
122F C006           PUSH   AR6
1231 C007           PUSH   AR7
1233 E500    R      MOV    A,qPtr
1235 AF00    R      MOV    R7,qPtr
1237 33             RLC    A
1238 95E0           SUBB   A,ACC
123A FE             MOV    R6,A
123B 7C02           MOV    R4,#002H
123D E4             CLR    A
123E FD             MOV    R5,A
123F 120000  R      LCALL  ?C_IMUL
1242 EF             MOV    A,R7
1243 248D           ADD    A,#08DH
1245 FF             MOV    R7,A
1246 EE             MOV    A,R6
1247 3401           ADDC   A,#001H
1249 FE             MOV    R6,A
124A 120000  R      LCALL  _ROM_Read
124D 7E00           MOV    R6,#000H
124F E4             CLR    A
1250 FC             MOV    R4,A
1251 FD             MOV    R5,A
1252 120000  R      LCALL  ?C_LADD
1255 8C00    R      MOV    max,R4
1257 8D00    R      MOV    max+01H,R5
1259 8E00    R      MOV    max+02H,R6
125B 8F00    R      MOV    max+03H,R7
                                           ; SOURCE LINE # 596 
125D 0500    R      INC    qHits
                                           ; SOURCE LINE # 597 
125F 7B05           MOV    R3,#005H
1261 7A00    R      MOV    R2,#000H
1263 7900    R      MOV    R1,#000H
1265 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 598 
1268 E500    R      MOV    A,qHits
126A AF00    R      MOV    R7,qHits
126C 33             RLC    A
126D 95E0           SUBB   A,ACC
126F FE             MOV    R6,A
1270 E4             CLR    A
1271 FC             MOV    R4,A
1272 7D0A           MOV    R5,#00AH
1274 120000  R      LCALL  ?C_SIDIV
1277 EF             MOV    A,R7
1278 2430           ADD    A,#030H
127A FF             MOV    R7,A
127B 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 599 
127E E500    R      MOV    A,qHits
1280 AF00    R      MOV    R7,qHits
1282 33             RLC    A
1283 95E0           SUBB   A,ACC
1285 FE             MOV    R6,A
1286 E4             CLR    A
1287 FC             MOV    R4,A
1288 7D0A           MOV    R5,#00AH
128A 120000  R      LCALL  ?C_SIDIV
128D ED             MOV    A,R5
128E 2430           ADD    A,#030H
1290 FF             MOV    R7,A
1291 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 601 
1294 E500    R      MOV    A,qHits
1296 B50003  R      CJNE   A,qReadings,?NXT157
                                           ; SOURCE LINE # 602 
1299 E4             CLR    A
129A F500    R      MOV    qHits,A
129C         ?NXT157:
                                           ; SOURCE LINE # 604 
129C 7F08           MOV    R7,#008H
129E 7D02           MOV    R5,#002H
12A0 120000  R      LCALL  _gGotoXY
12A3 7B05           MOV    R3,#005H
12A5 7A00    R      MOV    R2,#000H
12A7 7900    R      MOV    R1,#000H
12A9 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 605 
12AC 7B02           MOV    R3,#002H
12AE 7A00    R      MOV    R2,#HIGH (tSave)
12B0 7900    R      MOV    R1,#LOW (tSave)
12B2 120000  R      LCALL  _rDisp_Time
                                           ; SOURCE LINE # 606 
12B5 7F09           MOV    R7,#009H
12B7 7D02           MOV    R5,#002H
12B9 120000  R      LCALL  _gGotoXY
12BC 7B05           MOV    R3,#005H
12BE 7A00    R      MOV    R2,#000H
12C0 7900    R      MOV    R1,#000H
12C2 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 607 
12C5 7B02           MOV    R3,#002H
12C7 7A00    R      MOV    R2,#HIGH (tSave)
12C9 7900    R      MOV    R1,#LOW (tSave)
12CB 120000  R      LCALL  _rDisp_Date
                                           ; SOURCE LINE # 609 
12CE 7F0B           MOV    R7,#00BH
12D0 7D02           MOV    R5,#002H
12D2 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 610 
12D5 7B05           MOV    R3,#005H
12D7 7A00    R      MOV    R2,#000H
12D9 7900    R      MOV    R1,#000H
12DB 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 611 
12DE 7F0C           MOV    R7,#00CH
12E0 7D02           MOV    R5,#002H
12E2 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 612 
12E5 7B05           MOV    R3,#005H
12E7 7A00    R      MOV    R2,#000H
12E9 7900    R      MOV    R1,#000H
12EB 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 613 
12EE 750029  R      MOV    last,#029H
12F1         ?NXT151:
                                           ; SOURCE LINE # 615 
12F1 75001A  R      MOV    state,#01AH
12F4         ?NXT150:
                                           ; SOURCE LINE # 620 
12F4 020000  R      LJMP   ?WHILE1
12F7         ?CASE90:
                                           ; SOURCE LINE # 625 
12F7 E500    R      MOV    A,last
12F9 24DB           ADD    A,#0DBH
12FB 600D           JZ     ?CASE154
12FD 24FC           ADD    A,#0FCH
12FF 6009           JZ     ?CASE154
1301 14             DEC    A
1302 6006           JZ     ?CASE154
1304 24F6           ADD    A,#0F6H
1306 6002           JZ     ?CASE154
1308 8014           SJMP   ?NXT158
130A         ?CASE154:
                                           ; SOURCE LINE # 631 
130A D284           SETB   LDRMT
                                           ; SOURCE LINE # 632 
130C 7F01           MOV    R7,#001H
130E 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 633 
1311 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 634 
1314 120000  R      LCALL  SendFormatedData
                                           ; SOURCE LINE # 635 
1317 E4             CLR    A
1318 FF             MOV    R7,A
1319 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 636 
131C C284           CLR    LDRMT
131E         ?NXT158:
                                           ; SOURCE LINE # 639 
131E 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 640 
1321 020000  R      LJMP   ?WHILE1
1324         ?CASE86:
                                           ; SOURCE LINE # 646 
1324 E500    R      MOV    A,last
1326 B42A03         CJNE   A,#02AH,?LAB224
1329 020000  R      LJMP   ?CASE159
132C         ?LAB224:
132C 5017           JNC    ?LAB223
132E E500    R      MOV    A,last
1330 24DD           ADD    A,#0DDH
1332 6021           JZ     ?CASE156
1334 24FE           ADD    A,#0FEH
1336 7003           JNZ    $ + 5
1338 020000  R      LJMP   ?CASE160
133B 24FC           ADD    A,#0FCH
133D 7003           JNZ    $ + 5
133F 020000  R      LJMP   ?CASE160
1342 020000  R      LJMP   ?NXT159
1345         ?LAB223:
1345 E500    R      MOV    A,last
1347 24CC           ADD    A,#0CCH
1349 7003           JNZ    $ + 5
134B 020000  R      LJMP   ?CASE160
134E 24FA           ADD    A,#0FAH
1350 6069           JZ     ?CASE161
1352 020000  R      LJMP   ?NXT130
1355         ?CASE156:
                                           ; SOURCE LINE # 650 
1355 C200    R      CLR    _gClear?BIT
1357 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 651 
135A 750092  R      MOV    _gDrawRect?BYTE,#092H
135D C200    R      CLR    _gDrawRect?BIT
135F 7F0E           MOV    R7,#00EH
1361 7D88           MOV    R5,#088H
1363 7B18           MOV    R3,#018H
1365 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 652 
1368 E4             CLR    A
1369 FF             MOV    R7,A
136A 7D03           MOV    R5,#003H
136C 120000  R      LCALL  _gGotoXY
136F 7B05           MOV    R3,#005H
1371 7A00    R      MOV    R2,#000H
1373 7900    R      MOV    R1,#000H
1375 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 653 
1378 7F03           MOV    R7,#003H
137A 7D01           MOV    R5,#001H
137C 120000  R      LCALL  _gGotoXY
137F 7B05           MOV    R3,#005H
1381 7A00    R      MOV    R2,#000H
1383 7900    R      MOV    R1,#000H
1385 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 654 
1388 7F08           MOV    R7,#008H
138A 7D02           MOV    R5,#002H
138C 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 655 
138F 7B05           MOV    R3,#005H
1391 7A00    R      MOV    R2,#000H
1393 7900    R      MOV    R1,#000H
1395 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 656 
1398 75F00A         MOV    B,#00AH
139B E500    R      MOV    A,prntCh
139D 84             DIV    AB
139E 2430           ADD    A,#030H
13A0 FF             MOV    R7,A
13A1 120000  R      LCALL  _gPutc
13A4 75F00A         MOV    B,#00AH
13A7 E500    R      MOV    A,prntCh
13A9 84             DIV    AB
13AA E5F0           MOV    A,B
13AC 2430           ADD    A,#030H
13AE FF             MOV    R7,A
13AF 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 657 
13B2 75003A  R      MOV    last,#03AH
                                           ; SOURCE LINE # 658 
13B5 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 659 
13B8 020000  R      LJMP   ?NXT130
13BB         ?CASE161:
                                           ; SOURCE LINE # 661 
13BB E500    R      MOV    A,prntCh
13BD 2402           ADD    A,#002H
13BF F500    R      MOV    prntCh,A
                                           ; SOURCE LINE # 662 
13C1 B42203         CJNE   A,#022H,?NXT160
                                           ; SOURCE LINE # 663 
13C4 750002  R      MOV    prntCh,#002H
13C7         ?NXT160:
                                           ; SOURCE LINE # 665 
13C7 7F08           MOV    R7,#008H
13C9 7D0B           MOV    R5,#00BH
13CB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 666 
13CE 75F00A         MOV    B,#00AH
13D1 E500    R      MOV    A,prntCh
13D3 84             DIV    AB
13D4 2430           ADD    A,#030H
13D6 FF             MOV    R7,A
13D7 120000  R      LCALL  _gPutc
13DA 75F00A         MOV    B,#00AH
13DD E500    R      MOV    A,prntCh
13DF 84             DIV    AB
13E0 E5F0           MOV    A,B
13E2 2430           ADD    A,#030H
13E4 FF             MOV    R7,A
13E5 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 667 
13E8 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 668 
13EB 020000  R      LJMP   ?NXT130
13EE         ?CASE160:
                                           ; SOURCE LINE # 674 
13EE C2AA           CLR    EX1
                                           ; SOURCE LINE # 675 
13F0 C200    R      CLR    _gClear?BIT
13F2 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 676 
13F5 750092  R      MOV    _gDrawRect?BYTE,#092H
13F8 C200    R      CLR    _gDrawRect?BIT
13FA 7F0E           MOV    R7,#00EH
13FC 7D88           MOV    R5,#088H
13FE 7B18           MOV    R3,#018H
1400 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 677 
1403 E4             CLR    A
1404 FF             MOV    R7,A
1405 7D03           MOV    R5,#003H
1407 120000  R      LCALL  _gGotoXY
140A 7B05           MOV    R3,#005H
140C 7A00    R      MOV    R2,#000H
140E 7900    R      MOV    R1,#000H
1410 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 678 
1413 7F03           MOV    R7,#003H
1415 7D04           MOV    R5,#004H
1417 120000  R      LCALL  _gGotoXY
141A 7B05           MOV    R3,#005H
141C 7A00    R      MOV    R2,#000H
141E 7900    R      MOV    R1,#000H
1420 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 680 
1423 7F02           MOV    R7,#002H
1425 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 681 
1428 7F06           MOV    R7,#006H
142A 7D02           MOV    R5,#002H
142C 120000  R      LCALL  _gGotoXY
142F 7B05           MOV    R3,#005H
1431 7A00    R      MOV    R2,#000H
1433 7900    R      MOV    R1,#000H
1435 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 682 
1438 7F07           MOV    R7,#007H
143A 7D02           MOV    R5,#002H
143C 120000  R      LCALL  _gGotoXY
143F 7B05           MOV    R3,#005H
1441 7A00    R      MOV    R2,#000H
1443 7900    R      MOV    R1,#000H
1445 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 683 
1448 7F09           MOV    R7,#009H
144A 7D02           MOV    R5,#002H
144C 120000  R      LCALL  _gGotoXY
144F 7B05           MOV    R3,#005H
1451 7A00    R      MOV    R2,#000H
1453 7900    R      MOV    R1,#000H
1455 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 684 
1458 7F0A           MOV    R7,#00AH
145A 7D02           MOV    R5,#002H
145C 120000  R      LCALL  _gGotoXY
145F 7B05           MOV    R3,#005H
1461 7A00    R      MOV    R2,#000H
1463 7900    R      MOV    R1,#000H
1465 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 687 
1468 7F1B           MOV    R7,#01BH
146A 120000  R      LCALL  _SendChar
146D 7F0C           MOV    R7,#00CH
146F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 688 
1472 7B05           MOV    R3,#005H
1474 7A00    R      MOV    R2,#000H
1476 7900    R      MOV    R1,#000H
1478 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 689 
147B 7B05           MOV    R3,#005H
147D 7A00    R      MOV    R2,#000H
147F 7900    R      MOV    R1,#000H
1481 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 690 
1484 7F0A           MOV    R7,#00AH
1486 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 691 
1489 7F0A           MOV    R7,#00AH
148B 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 693 
148E 7F1B           MOV    R7,#01BH
1490 120000  R      LCALL  _SendChar
1493 7F04           MOV    R7,#004H
1495 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 694 
1498 7B05           MOV    R3,#005H
149A 7A00    R      MOV    R2,#000H
149C 7900    R      MOV    R1,#000H
149E 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 695 
14A1 75F00A         MOV    B,#00AH
14A4 E500    R      MOV    A,system
14A6 84             DIV    AB
14A7 2430           ADD    A,#030H
14A9 FF             MOV    R7,A
14AA 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 696 
14AD 75F00A         MOV    B,#00AH
14B0 E500    R      MOV    A,system
14B2 84             DIV    AB
14B3 E5F0           MOV    A,B
14B5 2430           ADD    A,#030H
14B7 FF             MOV    R7,A
14B8 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 697 
14BB 7F0A           MOV    R7,#00AH
14BD 120000  R      LCALL  _SendChar
14C0 7F0A           MOV    R7,#00AH
14C2 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 699 
14C5 750000  R      MOV    p,#000H
14C8         ?FOR25:
14C8 E500    R      MOV    A,p
14CA 33             RLC    A
14CB 95E0           SUBB   A,ACC
14CD B40005         CJNE   A,#000H,?LAB225
14D0 E500    R      MOV    A,p
14D2 B50000  R      CJNE   A,prntCh,?LAB225
14D5         ?LAB225:
14D5 505B           JNC    ?NXT161
                                           ; SOURCE LINE # 701 
14D7 7F07           MOV    R7,#007H
14D9 7D0E           MOV    R5,#00EH
14DB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 702 
14DE E500    R      MOV    A,p
14E0 33             RLC    A
14E1 95E0           SUBB   A,ACC
14E3 FA             MOV    R2,A
14E4 E500    R      MOV    A,p
14E6 2401           ADD    A,#001H
14E8 FF             MOV    R7,A
14E9 E4             CLR    A
14EA 3A             ADDC   A,R2
14EB FE             MOV    R6,A
14EC E4             CLR    A
14ED FC             MOV    R4,A
14EE 7D0A           MOV    R5,#00AH
14F0 120000  R      LCALL  ?C_SIDIV
14F3 EF             MOV    A,R7
14F4 2430           ADD    A,#030H
14F6 FF             MOV    R7,A
14F7 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 703 
14FA E500    R      MOV    A,p
14FC 33             RLC    A
14FD 95E0           SUBB   A,ACC
14FF FA             MOV    R2,A
1500 E500    R      MOV    A,p
1502 2401           ADD    A,#001H
1504 FF             MOV    R7,A
1505 E4             CLR    A
1506 3A             ADDC   A,R2
1507 FE             MOV    R6,A
1508 E4             CLR    A
1509 FC             MOV    R4,A
150A 7D0A           MOV    R5,#00AH
150C 120000  R      LCALL  ?C_SIDIV
150F ED             MOV    A,R5
1510 2430           ADD    A,#030H
1512 FF             MOV    R7,A
1513 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 704 
1516 7F1B           MOV    R7,#01BH
1518 120000  R      LCALL  _SendChar
151B 7F04           MOV    R7,#004H
151D 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 705 
1520 E4             CLR    A
1521 F500    R      MOV    _Print?BYTE,A
1523 F500    R      MOV    _Print?BYTE+01H,A
1525 F500    R      MOV    _Print?BYTE+02H,A
1527 F500    R      MOV    _Print?BYTE+03H,A
1529 AF00    R      MOV    R7,p
152B 120000  R      LCALL  _Print
                                           ; SOURCE LINE # 572 
152E 0500    R      INC    p
1530 8096           SJMP   ?FOR25
1532         ?NXT161:
                                           ; SOURCE LINE # 708 
1532 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 709 
1535 7F1B           MOV    R7,#01BH
1537 120000  R      LCALL  _SendChar
153A 7F04           MOV    R7,#004H
153C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 710 
153F 7B05           MOV    R3,#005H
1541 7A00    R      MOV    R2,#000H
1543 7900    R      MOV    R1,#000H
1545 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 711 
1548 7FF1           MOV    R7,#0F1H
154A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 712 
154D C000    R      PUSH   max
154F C000    R      PUSH   max+01H
1551 C000    R      PUSH   max+02H
1553 C000    R      PUSH   max+03H
1555 AC00    R      MOV    R4,min
1557 AD00    R      MOV    R5,min+01H
1559 AE00    R      MOV    R6,min+02H
155B AF00    R      MOV    R7,min+03H
155D 120000  R      LCALL  ?C_LSUB
1560 8C00    R      MOV    EstJtr,R4
1562 8D00    R      MOV    EstJtr+01H,R5
1564 8E00    R      MOV    EstJtr+02H,R6
1566 8F00    R      MOV    EstJtr+03H,R7
                                           ; SOURCE LINE # 713 
1568 C200    R      CLR    _LongToAscii?BIT
156A AC00    R      MOV    R4,EstJtr
156C AD00    R      MOV    R5,EstJtr+01H
156E AE00    R      MOV    R6,EstJtr+02H
1570 AF00    R      MOV    R7,EstJtr+03H
1572 75F001         MOV    B,#001H
1575 120000  R      LCALL  ?C_LSSHR
1578 120000  R      LCALL  _LongToAscii
                                           ; SOURCE LINE # 714 
157B C000    R      PUSH   EstJtr
157D C000    R      PUSH   EstJtr+01H
157F C000    R      PUSH   EstJtr+02H
1581 C000    R      PUSH   EstJtr+03H
1583 E4             CLR    A
1584 FE             MOV    R6,A
1585 FC             MOV    R4,A
1586 FD             MOV    R5,A
1587 04             INC    A
1588 FF             MOV    R7,A
1589 120000  R      LCALL  ?C_LANL
158C C004           PUSH   AR4
158E C005           PUSH   AR5
1590 C006           PUSH   AR6
1592 C007           PUSH   AR7
1594 E4             CLR    A
1595 FE             MOV    R6,A
1596 FC             MOV    R4,A
1597 FD             MOV    R5,A
1598 740A           MOV    A,#00AH
159A FF             MOV    R7,A
159B 120000  R      LCALL  ?C_LMUL
159E 8C00    R      MOV    EstJtr,R4
15A0 8D00    R      MOV    EstJtr+01H,R5
15A2 8E00    R      MOV    EstJtr+02H,R6
15A4 8F00    R      MOV    EstJtr+03H,R7
                                           ; SOURCE LINE # 715 
15A6 7F2E           MOV    R7,#02EH
15A8 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 716 
15AB AC00    R      MOV    R4,EstJtr
15AD AD00    R      MOV    R5,EstJtr+01H
15AF AE00    R      MOV    R6,EstJtr+02H
15B1 AF00    R      MOV    R7,EstJtr+03H
15B3 75F001         MOV    B,#001H
15B6 120000  R      LCALL  ?C_LSSHR
15B9 EF             MOV    A,R7
15BA 2430           ADD    A,#030H
15BC FF             MOV    R7,A
15BD 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 717 
15C0 7F0A           MOV    R7,#00AH
15C2 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 720 
15C5 7F1B           MOV    R7,#01BH
15C7 120000  R      LCALL  _SendChar
15CA 7F04           MOV    R7,#004H
15CC 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 721 
15CF 7B05           MOV    R3,#005H
15D1 7A00    R      MOV    R2,#000H
15D3 7900    R      MOV    R1,#000H
15D5 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 722 
15D8 75F00A         MOV    B,#00AH
15DB E500    R      MOV    A,StartTh2
15DD 84             DIV    AB
15DE 2430           ADD    A,#030H
15E0 FF             MOV    R7,A
15E1 120000  R      LCALL  _SendChar
15E4 7F30           MOV    R7,#030H
15E6 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 723 
15E9 7F0A           MOV    R7,#00AH
15EB 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 724 
15EE 7F1B           MOV    R7,#01BH
15F0 120000  R      LCALL  _SendChar
15F3 7F04           MOV    R7,#004H
15F5 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 725 
15F8 7B05           MOV    R3,#005H
15FA 7A00    R      MOV    R2,#000H
15FC 7900    R      MOV    R1,#000H
15FE 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 726 
1601 75F00A         MOV    B,#00AH
1604 E500    R      MOV    A,StopTh1
1606 84             DIV    AB
1607 2430           ADD    A,#030H
1609 FF             MOV    R7,A
160A 120000  R      LCALL  _SendChar
160D 7F30           MOV    R7,#030H
160F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 727 
1612 7F0A           MOV    R7,#00AH
1614 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 728 
1617 7F0A           MOV    R7,#00AH
1619 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 730 
161C 7F1B           MOV    R7,#01BH
161E 120000  R      LCALL  _SendChar
1621 7F04           MOV    R7,#004H
1623 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 731 
1626 7B05           MOV    R3,#005H
1628 7A00    R      MOV    R2,#000H
162A 7900    R      MOV    R1,#000H
162C 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 732 
162F 7B02           MOV    R3,#002H
1631 7A00    R      MOV    R2,#HIGH (tSave)
1633 7900    R      MOV    R1,#LOW (tSave)
1635 120000  R      LCALL  _rPrint_Time
                                           ; SOURCE LINE # 734 
1638 7F0A           MOV    R7,#00AH
163A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 735 
163D 7F1B           MOV    R7,#01BH
163F 120000  R      LCALL  _SendChar
1642 7F04           MOV    R7,#004H
1644 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 736 
1647 7B05           MOV    R3,#005H
1649 7A00    R      MOV    R2,#000H
164B 7900    R      MOV    R1,#000H
164D 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 737 
1650 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 738 
1653 7B02           MOV    R3,#002H
1655 7A00    R      MOV    R2,#HIGH (time)
1657 7900    R      MOV    R1,#LOW (time)
1659 120000  R      LCALL  _rPrint_Time
                                           ; SOURCE LINE # 739 
165C 7F1B           MOV    R7,#01BH
165E 120000  R      LCALL  _SendChar
1661 7F04           MOV    R7,#004H
1663 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 740 
1666 7B05           MOV    R3,#005H
1668 7A00    R      MOV    R2,#000H
166A 7900    R      MOV    R1,#000H
166C 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 741 
166F 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 743 
1672 E4             CLR    A
1673 FF             MOV    R7,A
1674 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 747 
1677 7F08           MOV    R7,#008H
1679 7D02           MOV    R5,#002H
167B 120000  R      LCALL  _gGotoXY
167E 7B05           MOV    R3,#005H
1680 7A00    R      MOV    R2,#000H
1682 7900    R      MOV    R1,#000H
1684 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 748 
1687 7F06           MOV    R7,#006H
1689 7D02           MOV    R5,#002H
168B 120000  R      LCALL  _gGotoXY
168E 7B05           MOV    R3,#005H
1690 7A00    R      MOV    R2,#000H
1692 7900    R      MOV    R1,#000H
1694 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 749 
1697 7F07           MOV    R7,#007H
1699 7D02           MOV    R5,#002H
169B 120000  R      LCALL  _gGotoXY
169E 7B05           MOV    R3,#005H
16A0 7A00    R      MOV    R2,#000H
16A2 7900    R      MOV    R1,#000H
16A4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 750 
16A7 7F09           MOV    R7,#009H
16A9 7D02           MOV    R5,#002H
16AB 120000  R      LCALL  _gGotoXY
16AE 7B05           MOV    R3,#005H
16B0 7A00    R      MOV    R2,#000H
16B2 7900    R      MOV    R1,#000H
16B4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 751 
16B7 7F0A           MOV    R7,#00AH
16B9 7D02           MOV    R5,#002H
16BB 120000  R      LCALL  _gGotoXY
16BE 7B05           MOV    R3,#005H
16C0 7A00    R      MOV    R2,#000H
16C2 7900    R      MOV    R1,#000H
16C4 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 753 
16C7 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 754 
16CA 020000  R      LJMP   ?NXT130
16CD         ?CASE159:
                                           ; SOURCE LINE # 756 
16CD C200    R      CLR    _gClear?BIT
16CF 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 757 
16D2 750092  R      MOV    _gDrawRect?BYTE,#092H
16D5 C200    R      CLR    _gDrawRect?BIT
16D7 7F0E           MOV    R7,#00EH
16D9 7D88           MOV    R5,#088H
16DB 7B18           MOV    R3,#018H
16DD 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 758 
16E0 E4             CLR    A
16E1 FF             MOV    R7,A
16E2 7D03           MOV    R5,#003H
16E4 120000  R      LCALL  _gGotoXY
16E7 7B05           MOV    R3,#005H
16E9 7A00    R      MOV    R2,#000H
16EB 7900    R      MOV    R1,#000H
16ED 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 759 
16F0 7F03           MOV    R7,#003H
16F2 7D04           MOV    R5,#004H
16F4 120000  R      LCALL  _gGotoXY
16F7 7B05           MOV    R3,#005H
16F9 7A00    R      MOV    R2,#000H
16FB 7900    R      MOV    R1,#000H
16FD 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 761 
1700 7F02           MOV    R7,#002H
1702 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 762 
1705 7F06           MOV    R7,#006H
1707 7D02           MOV    R5,#002H
1709 120000  R      LCALL  _gGotoXY
170C 7B05           MOV    R3,#005H
170E 7A00    R      MOV    R2,#000H
1710 7900    R      MOV    R1,#000H
1712 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 763 
1715 7F07           MOV    R7,#007H
1717 7D02           MOV    R5,#002H
1719 120000  R      LCALL  _gGotoXY
171C 7B05           MOV    R3,#005H
171E 7A00    R      MOV    R2,#000H
1720 7900    R      MOV    R1,#000H
1722 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 764 
1725 7F09           MOV    R7,#009H
1727 7D02           MOV    R5,#002H
1729 120000  R      LCALL  _gGotoXY
172C 7B05           MOV    R3,#005H
172E 7A00    R      MOV    R2,#000H
1730 7900    R      MOV    R1,#000H
1732 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 765 
1735 7F0A           MOV    R7,#00AH
1737 7D02           MOV    R5,#002H
1739 120000  R      LCALL  _gGotoXY
173C 7B05           MOV    R3,#005H
173E 7A00    R      MOV    R2,#000H
1740 7900    R      MOV    R1,#000H
1742 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 767 
1745 7F1B           MOV    R7,#01BH
1747 120000  R      LCALL  _SendChar
174A 7F04           MOV    R7,#004H
174C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 768 
174F 7B05           MOV    R3,#005H
1751 7A00    R      MOV    R2,#000H
1753 7900    R      MOV    R1,#000H
1755 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 770 
1758 7F1B           MOV    R7,#01BH
175A 120000  R      LCALL  _SendChar
175D 7F04           MOV    R7,#004H
175F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 771 
1762 7B05           MOV    R3,#005H
1764 7A00    R      MOV    R2,#000H
1766 7900    R      MOV    R1,#000H
1768 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 772 
176B 75F00A         MOV    B,#00AH
176E E500    R      MOV    A,system
1770 84             DIV    AB
1771 2430           ADD    A,#030H
1773 FF             MOV    R7,A
1774 120000  R      LCALL  _SendChar
1777 75F00A         MOV    B,#00AH
177A E500    R      MOV    A,system
177C 84             DIV    AB
177D E5F0           MOV    A,B
177F 2430           ADD    A,#030H
1781 FF             MOV    R7,A
1782 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 773 
1785 7F0A           MOV    R7,#00AH
1787 120000  R      LCALL  _SendChar
178A 7F0A           MOV    R7,#00AH
178C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 774 
178F 750000  R      MOV    p,#000H
1792         ?FOR26:
1792 E500    R      MOV    A,p
1794 33             RLC    A
1795 95E0           SUBB   A,ACC
1797 B40005         CJNE   A,#000H,?LAB227
179A E500    R      MOV    A,p
179C B50000  R      CJNE   A,prntCh,?LAB227
179F         ?LAB227:
179F 505E           JNC    ?NXT163
                                           ; SOURCE LINE # 776 
17A1 7F07           MOV    R7,#007H
17A3 7D0E           MOV    R5,#00EH
17A5 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 777 
17A8 E500    R      MOV    A,p
17AA 33             RLC    A
17AB 95E0           SUBB   A,ACC
17AD FA             MOV    R2,A
17AE E500    R      MOV    A,p
17B0 2401           ADD    A,#001H
17B2 FF             MOV    R7,A
17B3 E4             CLR    A
17B4 3A             ADDC   A,R2
17B5 FE             MOV    R6,A
17B6 E4             CLR    A
17B7 FC             MOV    R4,A
17B8 7D0A           MOV    R5,#00AH
17BA 120000  R      LCALL  ?C_SIDIV
17BD EF             MOV    A,R7
17BE 2430           ADD    A,#030H
17C0 FF             MOV    R7,A
17C1 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 778 
17C4 E500    R      MOV    A,p
17C6 33             RLC    A
17C7 95E0           SUBB   A,ACC
17C9 FA             MOV    R2,A
17CA E500    R      MOV    A,p
17CC 2401           ADD    A,#001H
17CE FF             MOV    R7,A
17CF E4             CLR    A
17D0 3A             ADDC   A,R2
17D1 FE             MOV    R6,A
17D2 E4             CLR    A
17D3 FC             MOV    R4,A
17D4 7D0A           MOV    R5,#00AH
17D6 120000  R      LCALL  ?C_SIDIV
17D9 ED             MOV    A,R5
17DA 2430           ADD    A,#030H
17DC FF             MOV    R7,A
17DD 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 779 
17E0 7F1B           MOV    R7,#01BH
17E2 120000  R      LCALL  _SendChar
17E5 7F04           MOV    R7,#004H
17E7 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 780 
17EA 850000  R      MOV    _Print?BYTE,min
17ED 850000  R      MOV    _Print?BYTE+01H,min+01H
17F0 850000  R      MOV    _Print?BYTE+02H,min+02H
17F3 850000  R      MOV    _Print?BYTE+03H,min+03H
17F6 AF00    R      MOV    R7,p
17F8 120000  R      LCALL  _Print
                                           ; SOURCE LINE # 572 
17FB 0500    R      INC    p
17FD 8093           SJMP   ?FOR26
17FF         ?NXT163:
                                           ; SOURCE LINE # 782 
17FF 120000  R      LCALL  DelayHalfSec
                                           ; SOURCE LINE # 783 
1802 7F1B           MOV    R7,#01BH
1804 120000  R      LCALL  _SendChar
1807 7F04           MOV    R7,#004H
1809 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 784 
180C 7B05           MOV    R3,#005H
180E 7A00    R      MOV    R2,#000H
1810 7900    R      MOV    R1,#000H
1812 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 785 
1815 7FF1           MOV    R7,#0F1H
1817 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 786 
181A C000    R      PUSH   max
181C C000    R      PUSH   max+01H
181E C000    R      PUSH   max+02H
1820 C000    R      PUSH   max+03H
1822 AC00    R      MOV    R4,min
1824 AD00    R      MOV    R5,min+01H
1826 AE00    R      MOV    R6,min+02H
1828 AF00    R      MOV    R7,min+03H
182A 120000  R      LCALL  ?C_LSUB
182D 8C00    R      MOV    EstJtr,R4
182F 8D00    R      MOV    EstJtr+01H,R5
1831 8E00    R      MOV    EstJtr+02H,R6
1833 8F00    R      MOV    EstJtr+03H,R7
                                           ; SOURCE LINE # 787 
1835 C200    R      CLR    _LongToAscii?BIT
1837 AC00    R      MOV    R4,EstJtr
1839 AD00    R      MOV    R5,EstJtr+01H
183B AE00    R      MOV    R6,EstJtr+02H
183D AF00    R      MOV    R7,EstJtr+03H
183F 75F001         MOV    B,#001H
1842 120000  R      LCALL  ?C_LSSHR
1845 120000  R      LCALL  _LongToAscii
                                           ; SOURCE LINE # 788 
1848 C000    R      PUSH   EstJtr
184A C000    R      PUSH   EstJtr+01H
184C C000    R      PUSH   EstJtr+02H
184E C000    R      PUSH   EstJtr+03H
1850 E4             CLR    A
1851 FE             MOV    R6,A
1852 FC             MOV    R4,A
1853 FD             MOV    R5,A
1854 04             INC    A
1855 FF             MOV    R7,A
1856 120000  R      LCALL  ?C_LANL
1859 C004           PUSH   AR4
185B C005           PUSH   AR5
185D C006           PUSH   AR6
185F C007           PUSH   AR7
1861 E4             CLR    A
1862 FE             MOV    R6,A
1863 FC             MOV    R4,A
1864 FD             MOV    R5,A
1865 740A           MOV    A,#00AH
1867 FF             MOV    R7,A
1868 120000  R      LCALL  ?C_LMUL
186B 8C00    R      MOV    EstJtr,R4
186D 8D00    R      MOV    EstJtr+01H,R5
186F 8E00    R      MOV    EstJtr+02H,R6
1871 8F00    R      MOV    EstJtr+03H,R7
                                           ; SOURCE LINE # 789 
1873 7F2E           MOV    R7,#02EH
1875 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 790 
1878 AC00    R      MOV    R4,EstJtr
187A AD00    R      MOV    R5,EstJtr+01H
187C AE00    R      MOV    R6,EstJtr+02H
187E AF00    R      MOV    R7,EstJtr+03H
1880 75F001         MOV    B,#001H
1883 120000  R      LCALL  ?C_LSSHR
1886 EF             MOV    A,R7
1887 2430           ADD    A,#030H
1889 FF             MOV    R7,A
188A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 791 
188D 7F0A           MOV    R7,#00AH
188F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 792 
1892 7F1B           MOV    R7,#01BH
1894 120000  R      LCALL  _SendChar
1897 7F04           MOV    R7,#004H
1899 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 793 
189C 7B05           MOV    R3,#005H
189E 7A00    R      MOV    R2,#000H
18A0 7900    R      MOV    R1,#000H
18A2 120000  R      LCALL  _PrintString
                                           ; SOURCE LINE # 794 
18A5 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 796 
18A8 E4             CLR    A
18A9 FF             MOV    R7,A
18AA 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 799 
18AD 7F08           MOV    R7,#008H
18AF 7D02           MOV    R5,#002H
18B1 120000  R      LCALL  _gGotoXY
18B4 7B05           MOV    R3,#005H
18B6 7A00    R      MOV    R2,#000H
18B8 7900    R      MOV    R1,#000H
18BA 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 800 
18BD 7F06           MOV    R7,#006H
18BF 7D02           MOV    R5,#002H
18C1 120000  R      LCALL  _gGotoXY
18C4 7B05           MOV    R3,#005H
18C6 7A00    R      MOV    R2,#000H
18C8 7900    R      MOV    R1,#000H
18CA 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 801 
18CD 7F07           MOV    R7,#007H
18CF 7D02           MOV    R5,#002H
18D1 120000  R      LCALL  _gGotoXY
18D4 7B05           MOV    R3,#005H
18D6 7A00    R      MOV    R2,#000H
18D8 7900    R      MOV    R1,#000H
18DA 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 802 
18DD 7F09           MOV    R7,#009H
18DF 7D02           MOV    R5,#002H
18E1 120000  R      LCALL  _gGotoXY
18E4 7B05           MOV    R3,#005H
18E6 7A00    R      MOV    R2,#000H
18E8 7900    R      MOV    R1,#000H
18EA 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 803 
18ED 7F0A           MOV    R7,#00AH
18EF 7D02           MOV    R5,#002H
18F1 120000  R      LCALL  _gGotoXY
18F4 7B05           MOV    R3,#005H
18F6 7A00    R      MOV    R2,#000H
18F8 7900    R      MOV    R1,#000H
18FA 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 805 
18FD 750025  R      MOV    last,#025H
                                           ; SOURCE LINE # 806 
1900 75001A  R      MOV    state,#01AH
1903         ?NXT159:
                                           ; SOURCE LINE # 809 
1903 020000  R      LJMP   ?WHILE1
1906         ?CASE104:
                                           ; SOURCE LINE # 814 
1906 C283           CLR    LDRDY
                                           ; SOURCE LINE # 815 
1908 C2AA           CLR    EX1
                                           ; SOURCE LINE # 817 
190A 750000  R      MOV    p,#000H
190D         ?FOR27:
190D E500    R      MOV    A,p
190F 6480           XRL    A,#080H
1911 B48800         CJNE   A,#088H,?LAB229
1914         ?LAB229:
1914 502A           JNC    ?NXT165
                                           ; SOURCE LINE # 818 
1916 E500    R      MOV    A,p
1918 33             RLC    A
1919 95E0           SUBB   A,ACC
191B FA             MOV    R2,A
191C E500    R      MOV    A,p
191E 2400    R      ADD    A,#LOW (time)
1920 F582           MOV    DPL,A
1922 EA             MOV    A,R2
1923 3400    R      ADDC   A,#HIGH (time)
1925 F583           MOV    DPH,A
1927 E0             MOVX   A,@DPTR
1928 FC             MOV    R4,A
1929 E500    R      MOV    A,p
192B 33             RLC    A
192C 95E0           SUBB   A,ACC
192E FA             MOV    R2,A
192F E500    R      MOV    A,p
1931 2400    R      ADD    A,#LOW (tSave)
1933 F582           MOV    DPL,A
1935 EA             MOV    A,R2
1936 3400    R      ADDC   A,#HIGH (tSave)
1938 F583           MOV    DPH,A
193A EC             MOV    A,R4
193B F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 572 
193C 0500    R      INC    p
193E 80CD           SJMP   ?FOR27
1940         ?NXT165:
                                           ; SOURCE LINE # 824 
1940 750000  R      MOV    p,#000H
1943         ?FOR28:
1943 E500    R      MOV    A,p
1945 6480           XRL    A,#080H
1947 B48800         CJNE   A,#088H,?LAB231
194A         ?LAB231:
194A 5007           JNC    ?NXT167
                                           ; SOURCE LINE # 825 
194C 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 572 
194F 0500    R      INC    p
1951 80F0           SJMP   ?FOR28
1953         ?NXT167:
                                           ; SOURCE LINE # 827 
1953 E4             CLR    A
1954 FF             MOV    R7,A
1955 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 828 
1958 750020  R      MOV    rxState,#020H
                                           ; SOURCE LINE # 830 
195B E4             CLR    A
195C F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 831 
195E F500    R      MOV    rxCnt,A
                                           ; SOURCE LINE # 832 
1960 C200    R      CLR    AllStops
                                           ; SOURCE LINE # 833 
1962 747F           MOV    A,#07FH
1964 F500    R      MOV    min,A
1966 74FF           MOV    A,#0FFH
1968 F500    R      MOV    min+01H,A
196A F500    R      MOV    min+02H,A
196C F500    R      MOV    min+03H,A
                                           ; SOURCE LINE # 834 
196E 7480           MOV    A,#080H
1970 F500    R      MOV    max,A
1972 E4             CLR    A
1973 F500    R      MOV    max+01H,A
1975 F500    R      MOV    max+02H,A
1977 F500    R      MOV    max+03H,A
                                           ; SOURCE LINE # 835 
1979 F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 838 
197B D290           SETB   BEEP
                                           ; SOURCE LINE # 839 
197D F500    R      MOV    beepCnt,A
                                           ; SOURCE LINE # 840 
197F 750014  R      MOV    beepLmt,#014H
                                           ; SOURCE LINE # 842 
1982 7FC7           MOV    R7,#0C7H
1984 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 843 
1987 7F80           MOV    R7,#080H
1989 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 844 
198C 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 845 
198F 020000  R      LJMP   ?WHILE1
1992         ?CASE96:
                                           ; SOURCE LINE # 850 
1992 750001  R      MOV    FPGA,#001H
                                           ; SOURCE LINE # 851 
1995 E4             CLR    A
1996 FF             MOV    R7,A
1997 120000  R      LCALL  _Calculate
                                           ; SOURCE LINE # 852 
199A 7FC6           MOV    R7,#0C6H
199C 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 853 
199F 7F80           MOV    R7,#080H
19A1 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 854 
19A4 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 855 
19A7 020000  R      LJMP   ?WHILE1
19AA         ?CASE97:
                                           ; SOURCE LINE # 860 
19AA 750002  R      MOV    FPGA,#002H
                                           ; SOURCE LINE # 861 
19AD 7F01           MOV    R7,#001H
19AF 120000  R      LCALL  _Calculate
                                           ; SOURCE LINE # 862 
19B2 7FC3           MOV    R7,#0C3H
19B4 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 863 
19B7 7F80           MOV    R7,#080H
19B9 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 864 
19BC 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 865 
19BF 020000  R      LJMP   ?WHILE1
19C2         ?CASE98:
                                           ; SOURCE LINE # 870 
19C2 750003  R      MOV    FPGA,#003H
                                           ; SOURCE LINE # 871 
19C5 7F02           MOV    R7,#002H
19C7 120000  R      LCALL  _Calculate
                                           ; SOURCE LINE # 872 
19CA 7FC4           MOV    R7,#0C4H
19CC 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 873 
19CF 7F80           MOV    R7,#080H
19D1 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 874 
19D4 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 875 
19D7 020000  R      LJMP   ?WHILE1
19DA         ?CASE99:
                                           ; SOURCE LINE # 881 
19DA 850000  R      MOV    FPGA,scrn
                                           ; SOURCE LINE # 882 
19DD 7F03           MOV    R7,#003H
19DF 120000  R      LCALL  _Calculate
                                           ; SOURCE LINE # 883 
19E2 850000  R      MOV    state,next
                                           ; SOURCE LINE # 884 
19E5 020000  R      LJMP   ?WHILE1
19E8         ?CASE100:
                                           ; SOURCE LINE # 892 
19E8 7E70           MOV    R6,#070H
19EA E4             CLR    A
19EB FF             MOV    R7,A
19EC 120000  R      LCALL  _ROM_Read
19EF 8F00    R      MOV    qReadings,R7
                                           ; SOURCE LINE # 893 
19F1 7E70           MOV    R6,#070H
19F3 7F01           MOV    R7,#001H
19F5 120000  R      LCALL  _ROM_Read
19F8 8F00    R      MOV    qRear,R7
                                           ; SOURCE LINE # 895 
19FA E500    R      MOV    A,qRear
19FC 33             RLC    A
19FD 95E0           SUBB   A,ACC
19FF FE             MOV    R6,A
1A00 7C02           MOV    R4,#002H
1A02 E4             CLR    A
1A03 FD             MOV    R5,A
1A04 120000  R      LCALL  ?C_IMUL
1A07 120000  R      LCALL  _ROM_WritePage
                                           ; SOURCE LINE # 897 
1A0A 0500    R      INC    qRear
                                           ; SOURCE LINE # 898 
1A0C E500    R      MOV    A,qRear
1A0E B40A03         CJNE   A,#00AH,?NXT169
1A11 E4             CLR    A
1A12 F500    R      MOV    qRear,A
1A14         ?NXT169:
                                           ; SOURCE LINE # 899 
1A14 E500    R      MOV    A,qReadings
1A16 6480           XRL    A,#080H
1A18 B48A00         CJNE   A,#08AH,?LAB233
1A1B         ?LAB233:
1A1B 5002           JNC    ?NXT170
1A1D 0500    R      INC    qReadings
1A1F         ?NXT170:
                                           ; SOURCE LINE # 900 
1A1F 7E70           MOV    R6,#070H
1A21 E4             CLR    A
1A22 FF             MOV    R7,A
1A23 AD00    R      MOV    R5,qReadings
1A25 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 901 
1A28 7E70           MOV    R6,#070H
1A2A 7F01           MOV    R7,#001H
1A2C AD00    R      MOV    R5,qRear
1A2E 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 903 
1A31 750025  R      MOV    last,#025H
                                           ; SOURCE LINE # 904 
1A34 C200    R      CLR    _gClear?BIT
1A36 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 905 
1A39 E4             CLR    A
1A3A FF             MOV    R7,A
1A3B 7D03           MOV    R5,#003H
1A3D 120000  R      LCALL  _gGotoXY
1A40 7B05           MOV    R3,#005H
1A42 7A00    R      MOV    R2,#000H
1A44 7900    R      MOV    R1,#000H
1A46 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 906 
1A49 7F03           MOV    R7,#003H
1A4B 7D03           MOV    R5,#003H
1A4D 120000  R      LCALL  _gGotoXY
1A50 7B05           MOV    R3,#005H
1A52 7A00    R      MOV    R2,#000H
1A54 7900    R      MOV    R1,#000H
1A56 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 907 
1A59 7F02           MOV    R7,#002H
1A5B 7D11           MOV    R5,#011H
1A5D 120000  R      LCALL  _gGotoXY
1A60 E500    R      MOV    A,FPGA
1A62 2431           ADD    A,#031H
1A64 FF             MOV    R7,A
1A65 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 908 
1A68 750092  R      MOV    _gDrawRect?BYTE,#092H
1A6B D200    R      SETB   _gDrawRect?BIT
1A6D 7F0E           MOV    R7,#00EH
1A6F 7D88           MOV    R5,#088H
1A71 7B18           MOV    R3,#018H
1A73 120000  R      LCALL  _gDrawRect
                                           ; SOURCE LINE # 909 
1A76 E4             CLR    A
1A77 F500    R      MOV    _Display?BYTE,A
1A79 F500    R      MOV    _Display?BYTE+01H,A
1A7B F500    R      MOV    _Display?BYTE+02H,A
1A7D F500    R      MOV    _Display?BYTE+03H,A
1A7F AF00    R      MOV    R7,FPGA
1A81 0500    R      INC    FPGA
1A83 120000  R      LCALL  _Display
                                           ; SOURCE LINE # 910 
1A86 E500    R      MOV    A,FPGA
1A88 B40403         CJNE   A,#004H,?NXT171
1A8B E4             CLR    A
1A8C F500    R      MOV    FPGA,A
1A8E         ?NXT171:
                                           ; SOURCE LINE # 911 
1A8E E4             CLR    A
1A8F F500    R      MOV    qHits,A
                                           ; SOURCE LINE # 912 
1A91 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 913 
1A94 300003  R      JNB    multi,?NXT172
1A97 750012  R      MOV    state,#012H
1A9A         ?NXT172:
                                           ; SOURCE LINE # 915 
1A9A 200003  R      JB     autoprint,$ + 6
1A9D 020000  R      LJMP   ?NXT130
                                           ; SOURCE LINE # 916 
1AA0 750002  R      MOV    state,#002H
                                           ; SOURCE LINE # 918 
1AA3 020000  R      LJMP   ?WHILE1
1AA6         ?CASE101:
                                           ; SOURCE LINE # 924 
1AA6 C200    R      CLR    _gClear?BIT
1AA8 120000  R      LCALL  _gClear
                                           ; SOURCE LINE # 925 
1AAB E4             CLR    A
1AAC FF             MOV    R7,A
1AAD 7D03           MOV    R5,#003H
1AAF 120000  R      LCALL  _gGotoXY
1AB2 7B05           MOV    R3,#005H
1AB4 7A00    R      MOV    R2,#000H
1AB6 7900    R      MOV    R1,#000H
1AB8 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 926 
1ABB 7F03           MOV    R7,#003H
1ABD 7D06           MOV    R5,#006H
1ABF 120000  R      LCALL  _gGotoXY
1AC2 7B05           MOV    R3,#005H
1AC4 7A00    R      MOV    R2,#000H
1AC6 7900    R      MOV    R1,#000H
1AC8 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 927 
1ACB 7F06           MOV    R7,#006H
1ACD 7D02           MOV    R5,#002H
1ACF 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 928 
1AD2 D200    R      SETB   AllStops
                                           ; SOURCE LINE # 929 
1AD4 750000  R      MOV    p,#000H
1AD7         ?FOR29:
1AD7 E500    R      MOV    A,p
1AD9 6480           XRL    A,#080H
1ADB B4A000         CJNE   A,#0A0H,?LAB235
1ADE         ?LAB235:
1ADE 5050           JNC    ?NXT174
                                           ; SOURCE LINE # 935 
1AE0 E500    R      MOV    A,p
1AE2 AB00    R      MOV    R3,p
1AE4 33             RLC    A
1AE5 95E0           SUBB   A,ACC
1AE7 E500    R      MOV    A,p
1AE9 23             RL     A
1AEA 23             RL     A
1AEB 54FC           ANL    A,#0FCH
1AED 2400    R      ADD    A,#LOW (Interval)
1AEF F582           MOV    DPL,A
1AF1 E4             CLR    A
1AF2 3400    R      ADDC   A,#HIGH (Interval)
1AF4 F583           MOV    DPH,A
1AF6 120000  R      LCALL  MV4_XD2SN?C
1AF9 E4             CLR    A
1AFA FC             MOV    R4,A
1AFB FD             MOV    R5,A
1AFC 743E           MOV    A,#03EH
1AFE FE             MOV    R6,A
1AFF 7483           MOV    A,#083H
1B01 FF             MOV    R7,A
1B02 120000  R      LCALL  ?C_CMPLS
1B05 BF0102         CJNE   R7,#001H,?LAB238
1B08 8020           SJMP   ?LAB237
1B0A         ?LAB238:
1B0A EB             MOV    A,R3
1B0B 23             RL     A
1B0C 23             RL     A
1B0D 54FC           ANL    A,#0FCH
1B0F 2400    R      ADD    A,#LOW (Interval)
1B11 F582           MOV    DPL,A
1B13 E4             CLR    A
1B14 3400    R      ADDC   A,#HIGH (Interval)
1B16 F583           MOV    DPH,A
1B18 120000  R      LCALL  MV4_XD2SN?C
1B1B E4             CLR    A
1B1C FC             MOV    R4,A
1B1D FD             MOV    R5,A
1B1E 743E           MOV    A,#03EH
1B20 FE             MOV    R6,A
1B21 747D           MOV    A,#07DH
1B23 FF             MOV    R7,A
1B24 120000  R      LCALL  ?C_CMPLS
1B27 BFFF02         CJNE   R7,#0FFH,?NXT175
1B2A         ?LAB237:
                                           ; SOURCE LINE # 936 
1B2A C200    R      CLR    AllStops
1B2C         ?NXT175:
                                           ; SOURCE LINE # 572 
1B2C 0500    R      INC    p
1B2E 80A7           SJMP   ?FOR29
1B30         ?NXT174:
                                           ; SOURCE LINE # 938 
1B30 30812E         JNB    LDSRT,?ELSE83
1B33 30002B  R      JNB    AllStops,?ELSE83
                                           ; SOURCE LINE # 940 
1B36 7B05           MOV    R3,#005H
1B38 7A00    R      MOV    R2,#000H
1B3A 7900    R      MOV    R1,#000H
1B3C 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 941 
1B3F 7F09           MOV    R7,#009H
1B41 7D02           MOV    R5,#002H
1B43 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 942 
1B46 7B05           MOV    R3,#005H
1B48 7A00    R      MOV    R2,#000H
1B4A 7900    R      MOV    R1,#000H
1B4C 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 943 
1B4F 7F0A           MOV    R7,#00AH
1B51 7D02           MOV    R5,#002H
1B53 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 944 
1B56 7B05           MOV    R3,#005H
1B58 7A00    R      MOV    R2,#000H
1B5A 7900    R      MOV    R1,#000H
1B5C 120000  R      LCALL  _gPutStr
1B5F 8029           SJMP   ?NXT177
1B61         ?ELSE83:
                                           ; SOURCE LINE # 948 
1B61 7B05           MOV    R3,#005H
1B63 7A00    R      MOV    R2,#000H
1B65 7900    R      MOV    R1,#000H
1B67 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 949 
1B6A 7F09           MOV    R7,#009H
1B6C 7D02           MOV    R5,#002H
1B6E 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 950 
1B71 7B05           MOV    R3,#005H
1B73 7A00    R      MOV    R2,#000H
1B75 7900    R      MOV    R1,#000H
1B77 120000  R      LCALL  _gPutStr
                                           ; SOURCE LINE # 951 
1B7A 7F0A           MOV    R7,#00AH
1B7C 7D02           MOV    R5,#002H
1B7E 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 952 
1B81 7B05           MOV    R3,#005H
1B83 7A00    R      MOV    R2,#000H
1B85 7900    R      MOV    R1,#000H
1B87 120000  R      LCALL  _gPutStr
1B8A         ?NXT177:
                                           ; SOURCE LINE # 956 
1B8A D2A8           SETB   EX0
                                           ; SOURCE LINE # 964 
1B8C 7401           MOV    A,#001H
1B8E 900000  R      MOV    DPTR,#offset
1B91 F0             MOVX   @DPTR,A
1B92 04             INC    A
1B93 900000  R      MOV    DPTR,#offset+01H
1B96 F0             MOVX   @DPTR,A
1B97 900000  R      MOV    DPTR,#offset+02H
1B9A F0             MOVX   @DPTR,A
1B9B 04             INC    A
1B9C 900000  R      MOV    DPTR,#offset+03H
1B9F F0             MOVX   @DPTR,A
1BA0 7405           MOV    A,#005H
1BA2 900000  R      MOV    DPTR,#offset+04H
1BA5 F0             MOVX   @DPTR,A
1BA6 7403           MOV    A,#003H
1BA8 900000  R      MOV    DPTR,#offset+05H
1BAB F0             MOVX   @DPTR,A
1BAC 900000  R      MOV    DPTR,#offset+06H
1BAF F0             MOVX   @DPTR,A
1BB0 7401           MOV    A,#001H
1BB2 900000  R      MOV    DPTR,#offset+07H
1BB5 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 965 
1BB6 740D           MOV    A,#00DH
1BB8 900000  R      MOV    DPTR,#offset+08H
1BBB F0             MOVX   @DPTR,A
1BBC 900000  R      MOV    DPTR,#offset+09H
1BBF F0             MOVX   @DPTR,A
1BC0 900000  R      MOV    DPTR,#offset+0AH
1BC3 F0             MOVX   @DPTR,A
1BC4 900000  R      MOV    DPTR,#offset+0BH
1BC7 F0             MOVX   @DPTR,A
1BC8 04             INC    A
1BC9 900000  R      MOV    DPTR,#offset+0CH
1BCC F0             MOVX   @DPTR,A
1BCD 14             DEC    A
1BCE 900000  R      MOV    DPTR,#offset+0DH
1BD1 F0             MOVX   @DPTR,A
1BD2 900000  R      MOV    DPTR,#offset+0EH
1BD5 F0             MOVX   @DPTR,A
1BD6 900000  R      MOV    DPTR,#offset+0FH
1BD9 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 966 
1BDA 7411           MOV    A,#011H
1BDC 900000  R      MOV    DPTR,#offset+010H
1BDF F0             MOVX   @DPTR,A
1BE0 900000  R      MOV    DPTR,#offset+011H
1BE3 F0             MOVX   @DPTR,A
1BE4 04             INC    A
1BE5 900000  R      MOV    DPTR,#offset+012H
1BE8 F0             MOVX   @DPTR,A
1BE9 04             INC    A
1BEA 900000  R      MOV    DPTR,#offset+013H
1BED F0             MOVX   @DPTR,A
1BEE 900000  R      MOV    DPTR,#offset+014H
1BF1 F0             MOVX   @DPTR,A
1BF2 14             DEC    A
1BF3 900000  R      MOV    DPTR,#offset+015H
1BF6 F0             MOVX   @DPTR,A
1BF7 14             DEC    A
1BF8 900000  R      MOV    DPTR,#offset+016H
1BFB F0             MOVX   @DPTR,A
1BFC 04             INC    A
1BFD 900000  R      MOV    DPTR,#offset+017H
1C00 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 967 
1C01 741C           MOV    A,#01CH
1C03 900000  R      MOV    DPTR,#offset+018H
1C06 F0             MOVX   @DPTR,A
1C07 04             INC    A
1C08 900000  R      MOV    DPTR,#offset+019H
1C0B F0             MOVX   @DPTR,A
1C0C 900000  R      MOV    DPTR,#offset+01AH
1C0F F0             MOVX   @DPTR,A
1C10 900000  R      MOV    DPTR,#offset+01BH
1C13 F0             MOVX   @DPTR,A
1C14 14             DEC    A
1C15 900000  R      MOV    DPTR,#offset+01CH
1C18 F0             MOVX   @DPTR,A
1C19 04             INC    A
1C1A 900000  R      MOV    DPTR,#offset+01DH
1C1D F0             MOVX   @DPTR,A
1C1E 14             DEC    A
1C1F 900000  R      MOV    DPTR,#offset+01EH
1C22 F0             MOVX   @DPTR,A
1C23 04             INC    A
1C24 900000  R      MOV    DPTR,#offset+01FH
1C27 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 970 
1C28 7E70           MOV    R6,#070H
1C2A 7F03           MOV    R7,#003H
1C2C 120000  R      LCALL  _ROM_Read
1C2F 8F00    R      MOV    StopTh1,R7
                                           ; SOURCE LINE # 971 
1C31 7E70           MOV    R6,#070H
1C33 7F04           MOV    R7,#004H
1C35 120000  R      LCALL  _ROM_Read
1C38 8F00    R      MOV    StartTh2,R7
                                           ; SOURCE LINE # 972 
1C3A 75000A  R      MOV    p,#00AH
1C3D         ?FOR30:
1C3D E500    R      MOV    A,p
1C3F 33             RLC    A
1C40 95E0           SUBB   A,ACC
1C42 B40006         CJNE   A,#000H,?LAB241
1C45 E500    R      MOV    A,p
1C47 B50001  R      CJNE   A,StopTh1,?LAB241
1C4A D3             SETB   C
1C4B         ?LAB241:
1C4B 500D           JNC    ?NXT178
                                           ; SOURCE LINE # 973 
1C4D 7F43           MOV    R7,#043H
1C4F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 972 
1C52 E500    R      MOV    A,p
1C54 240A           ADD    A,#00AH
1C56 F500    R      MOV    p,A
1C58 80E3           SJMP   ?FOR30
1C5A         ?NXT178:
                                           ; SOURCE LINE # 974 
1C5A 75000A  R      MOV    p,#00AH
1C5D         ?FOR31:
1C5D E500    R      MOV    A,p
1C5F 33             RLC    A
1C60 95E0           SUBB   A,ACC
1C62 B40006         CJNE   A,#000H,?LAB243
1C65 E500    R      MOV    A,p
1C67 B50001  R      CJNE   A,StartTh2,?LAB243
1C6A D3             SETB   C
1C6B         ?LAB243:
1C6B 500D           JNC    ?NXT180
                                           ; SOURCE LINE # 975 
1C6D 7F44           MOV    R7,#044H
1C6F 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 972 
1C72 E500    R      MOV    A,p
1C74 240A           ADD    A,#00AH
1C76 F500    R      MOV    p,A
1C78 80E3           SJMP   ?FOR31
1C7A         ?NXT180:
                                           ; SOURCE LINE # 976 
1C7A 750025  R      MOV    last,#025H
                                           ; SOURCE LINE # 977 
1C7D 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 978 
1C80 020000  R      LJMP   ?WHILE1
1C83         ?CASE103:
                                           ; SOURCE LINE # 981 
1C83 C291           CLR    SEL1
1C85 D293           SETB   SEL0
                                           ; SOURCE LINE # 982 
1C87 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 983 
1C8A 120000  R      LCALL  SendFormatedData
                                           ; SOURCE LINE # 986 
1C8D E4             CLR    A
1C8E FF             MOV    R7,A
1C8F 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 987 
1C92 120000  R      LCALL  Delay5ms
                                           ; SOURCE LINE # 988 
1C95 7FC7           MOV    R7,#0C7H
1C97 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 989 
1C9A 7F01           MOV    R7,#001H
1C9C 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 992 
1C9F C291           CLR    SEL1
1CA1 D293           SETB   SEL0
                                           ; SOURCE LINE # 993 
1CA3 750021  R      MOV    rxState,#021H
                                           ; SOURCE LINE # 994 
1CA6 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 995 
1CA9 020000  R      LJMP   ?WHILE1
1CAC         ?CASE105:
                                           ; SOURCE LINE # 997 
1CAC C283           CLR    LDRDY
                                           ; SOURCE LINE # 998 
1CAE 75001E  R      MOV    rxState,#01EH
                                           ; SOURCE LINE # 999 
1CB1 E4             CLR    A
1CB2 FF             MOV    R7,A
1CB3 F500    R      MOV    rxCnt,A
1CB5 F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 1001 
1CB7 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 1002 
1CBA 7F43           MOV    R7,#043H
1CBC 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1003 
1CBF 7FAC           MOV    R7,#0ACH
1CC1 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1004 
1CC4 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1005 
1CC7 020000  R      LJMP   ?WHILE1
1CCA         ?CASE107:
                                           ; SOURCE LINE # 1007 
1CCA 7F01           MOV    R7,#001H
1CCC 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 1008 
1CCF AF00    R      MOV    R7,StopTh1
1CD1 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1009 
1CD4 750021  R      MOV    rxState,#021H
                                           ; SOURCE LINE # 1010 
1CD7 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1011 
1CDA 020000  R      LJMP   ?WHILE1
1CDD         ?CASE106:
                                           ; SOURCE LINE # 1013 
1CDD C283           CLR    LDRDY
                                           ; SOURCE LINE # 1014 
1CDF 75001F  R      MOV    rxState,#01FH
                                           ; SOURCE LINE # 1015 
1CE2 E4             CLR    A
1CE3 FF             MOV    R7,A
1CE4 F500    R      MOV    rxCnt,A
1CE6 F500    R      MOV    FPGA,A
                                           ; SOURCE LINE # 1017 
1CE8 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 1018 
1CEB 7F44           MOV    R7,#044H
1CED 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1019 
1CF0 7FAD           MOV    R7,#0ADH
1CF2 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1020 
1CF5 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1021 
1CF8 020000  R      LJMP   ?WHILE1
1CFB         ?CASE108:
                                           ; SOURCE LINE # 1023 
1CFB 7F01           MOV    R7,#001H
1CFD 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 1024 
1D00 AF00    R      MOV    R7,StartTh2
1D02 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1025 
1D05 750021  R      MOV    rxState,#021H
                                           ; SOURCE LINE # 1026 
1D08 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1027 
1D0B 020000  R      LJMP   ?WHILE1
1D0E         ?CASE111:
                                           ; SOURCE LINE # 1029 
1D0E C283           CLR    LDRDY
                                           ; SOURCE LINE # 1031 
1D10 E4             CLR    A
1D11 FF             MOV    R7,A
1D12 120000  R      LCALL  _SelectLines
                                           ; SOURCE LINE # 1032 
1D15 7F42           MOV    R7,#042H
1D17 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1033 
1D1A 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1034 
1D1D 020000  R      LJMP   ?WHILE1
1D20         ?CASE112:
                                           ; SOURCE LINE # 1036 
1D20 7F40           MOV    R7,#040H
1D22 120000  R      LCALL  _SendChar
1D25 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 1037 
1D28 7F40           MOV    R7,#040H
1D2A 120000  R      LCALL  _SendChar
1D2D 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 1038 
1D30 AF00    R      MOV    R7,StopTh1
1D32 120000  R      LCALL  _SendChar
1D35 120000  R      LCALL  Delay25ms
                                           ; SOURCE LINE # 1039 
1D38 AF00    R      MOV    R7,StartTh2
1D3A 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1040 
1D3D 75001A  R      MOV    state,#01AH
                                           ; SOURCE LINE # 1041 
1D40 020000  R      LJMP   ?WHILE1
1D43         ?CASE110:
                                           ; SOURCE LINE # 1051 
1D43 7B02           MOV    R3,#002H
1D45 7A00    R      MOV    R2,#HIGH (time)
1D47 7900    R      MOV    R1,#LOW (time)
1D49 120000  R      LCALL  _rBrstReadClk
                                           ; SOURCE LINE # 1052 
1D4C 7F0F           MOV    R7,#00FH
1D4E 7D01           MOV    R5,#001H
1D50 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 1053 
1D53 7B02           MOV    R3,#002H
1D55 7A00    R      MOV    R2,#HIGH (time)
1D57 7900    R      MOV    R1,#LOW (time)
1D59 120000  R      LCALL  _rDisp_Date
                                           ; SOURCE LINE # 1054 
1D5C 7F20           MOV    R7,#020H
1D5E 120000  R      LCALL  _gPutc
1D61 7F20           MOV    R7,#020H
1D63 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 1055 
1D66 7B02           MOV    R3,#002H
1D68 7A00    R      MOV    R2,#HIGH (time)
1D6A 7900    R      MOV    R1,#LOW (time)
1D6C 120000  R      LCALL  _rDisp_Time
1D6F         ?NXT130:
                                           ; SOURCE LINE # 1056 
1D6F 020000  R      LJMP   ?WHILE1

            ; FUNCTION main (END)

            ; FUNCTION KeyInt (BEGIN)
                                           ; SOURCE LINE # 1088 
0000 C0E0           PUSH   ACC
0002 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 1070 
0004 30002A  R      JNB    isInit,?NXT185
                                           ; SOURCE LINE # 1072 
0007 75A0FF         MOV    P2,#0FFH
                                           ; SOURCE LINE # 1073 
000A D2B6           SETB   gCE
                                           ; SOURCE LINE # 1074 
000C 00             NOP    
                                           ; SOURCE LINE # 1075 
000D C287           CLR    kCE
                                           ; SOURCE LINE # 1076 
000F 00             NOP    
                                           ; SOURCE LINE # 1077 
0010 E5A0           MOV    A,P2
0012 54F0           ANL    A,#0F0H
0014 F500    R      MOV    Key,A
                                           ; SOURCE LINE # 1078 
0016 00             NOP    
                                           ; SOURCE LINE # 1079 
0017 D287           SETB   kCE
                                           ; SOURCE LINE # 1080 
0019 00             NOP    
                                           ; SOURCE LINE # 1081 
001A C2B6           CLR    gCE
                                           ; SOURCE LINE # 1082 
001C 00             NOP    
                                           ; SOURCE LINE # 1083 
001D D290           SETB   BEEP
                                           ; SOURCE LINE # 1084 
001F E4             CLR    A
0020 F500    R      MOV    beepCnt,A
                                           ; SOURCE LINE # 1085 
0022 750003  R      MOV    beepLmt,#003H
                                           ; SOURCE LINE # 1086 
0025 E500    R      MOV    A,Key
0027 C4             SWAP   A
0028 540F           ANL    A,#00FH
002A F500    R      MOV    Key,A
                                           ; SOURCE LINE # 1087 
002C C283           CLR    LDRDY
                                           ; SOURCE LINE # 1088 
002E 850000  R      MOV    state,Key
0031         ?NXT185:
0031 D0D0           POP    PSW
0033 D0E0           POP    ACC
0035 32             RETI   

            ; FUNCTION KeyInt (END)

            ; FUNCTION StartInt (BEGIN)
                                           ; SOURCE LINE # 1111 
0000 C0D0           PUSH   PSW
0002 750014  R      MOV    state,#014H
0005 D0D0           POP    PSW
0007 32             RETI   

            ; FUNCTION StartInt (END)

            ; FUNCTION Serial (BEGIN)
                                           ; SOURCE LINE # 1187 
0000 C0E0           PUSH   ACC
0002 C0F0           PUSH   B
0004 C083           PUSH   DPH
0006 C082           PUSH   DPL
0008 C0D0           PUSH   PSW
000A C000           PUSH   AR0
000C C001           PUSH   AR1
000E C002           PUSH   AR2
0010 C003           PUSH   AR3
0012 C004           PUSH   AR4
0014 C005           PUSH   AR5
0016 C006           PUSH   AR6
0018 EF             MOV    A,R7
0019 C007           PUSH   AR7
                                           ; SOURCE LINE # 1118 
001B 209803         JB     RI,$ + 6
001E 020000  R      LJMP   ?NXT197
                                           ; SOURCE LINE # 1120 
0021 C298           CLR    RI
                                           ; SOURCE LINE # 1121 
0023 E599           MOV    A,SBUF
0025 900000  R      MOV    DPTR,#rxChr
0028 F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 1122 
0029 E500    R      MOV    A,rxState
002B B41F02         CJNE   A,#01FH,?LAB257
002E 8072           SJMP   ?CASE177
0030         ?LAB257:
0030 500F           JNC    ?LAB256
0032 E500    R      MOV    A,rxState
0034 24E4           ADD    A,#0E4H
0036 6024           JZ     ?CASE174
0038 14             DEC    A
0039 606A           JZ     ?CASE175
003B 14             DEC    A
003C 601B           JZ     ?CASE176
003E 020000  R      LJMP   ?DEFAULT5
0041         ?LAB256:
0041 E500    R      MOV    A,rxState
0043 24E0           ADD    A,#0E0H
0045 7003           JNZ    $ + 5
0047 020000  R      LJMP   ?CASE178
004A 14             DEC    A
004B 7003           JNZ    $ + 5
004D 020000  R      LJMP   ?CASE179
0050 14             DEC    A
0051 7003           JNZ    $ + 5
0053 020000  R      LJMP   ?NXT194
0056 020000  R      LJMP   ?NXT194
0059         ?CASE176:
                                           ; SOURCE LINE # 1125 
0059 750017  R      MOV    state,#017H
005C         ?CASE174:
                                           ; SOURCE LINE # 1127 
005C 900000  R      MOV    DPTR,#rxChr
005F E0             MOVX   A,@DPTR
0060 75F00A         MOV    B,#00AH
0063 A4             MUL    AB
0064 F500    R      MOV    StopTh1,A
                                           ; SOURCE LINE # 1128 
0066 7F07           MOV    R7,#007H
0068 7D0C           MOV    R5,#00CH
006A 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 1129 
006D 75F00A         MOV    B,#00AH
0070 E500    R      MOV    A,StartTh2
0072 84             DIV    AB
0073 2430           ADD    A,#030H
0075 FF             MOV    R7,A
0076 120000  R      LCALL  _gPutc
0079 7F30           MOV    R7,#030H
007B 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 1130 
007E 7F08           MOV    R7,#008H
0080 7D0C           MOV    R5,#00CH
0082 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 1131 
0085 75F00A         MOV    B,#00AH
0088 E500    R      MOV    A,StopTh1
008A 84             DIV    AB
008B 2430           ADD    A,#030H
008D FF             MOV    R7,A
008E 120000  R      LCALL  _gPutc
0091 7F30           MOV    R7,#030H
0093 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 1132 
0096 7E70           MOV    R6,#070H
0098 7F03           MOV    R7,#003H
009A AD00    R      MOV    R5,StopTh1
009C 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 1133 
009F 020000  R      LJMP   ?NXT197
00A2         ?CASE177:
                                           ; SOURCE LINE # 1135 
00A2 750018  R      MOV    state,#018H
00A5         ?CASE175:
                                           ; SOURCE LINE # 1137 
00A5 900000  R      MOV    DPTR,#rxChr
00A8 E0             MOVX   A,@DPTR
00A9 75F00A         MOV    B,#00AH
00AC A4             MUL    AB
00AD F500    R      MOV    StartTh2,A
                                           ; SOURCE LINE # 1138 
00AF 7F07           MOV    R7,#007H
00B1 7D0C           MOV    R5,#00CH
00B3 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 1139 
00B6 75F00A         MOV    B,#00AH
00B9 E500    R      MOV    A,StartTh2
00BB 84             DIV    AB
00BC 2430           ADD    A,#030H
00BE FF             MOV    R7,A
00BF 120000  R      LCALL  _gPutc
00C2 7F30           MOV    R7,#030H
00C4 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 1140 
00C7 7F08           MOV    R7,#008H
00C9 7D0C           MOV    R5,#00CH
00CB 120000  R      LCALL  _gGotoXY
                                           ; SOURCE LINE # 1141 
00CE 75F00A         MOV    B,#00AH
00D1 E500    R      MOV    A,StopTh1
00D3 84             DIV    AB
00D4 2430           ADD    A,#030H
00D6 FF             MOV    R7,A
00D7 120000  R      LCALL  _gPutc
00DA 7F30           MOV    R7,#030H
00DC 120000  R      LCALL  _gPutc
                                           ; SOURCE LINE # 1142 
00DF 7E70           MOV    R6,#070H
00E1 7F04           MOV    R7,#004H
00E3 AD00    R      MOV    R5,StartTh2
00E5 120000  R      LCALL  _ROM_Write
                                           ; SOURCE LINE # 1143 
00E8 805A           SJMP   ?NXT197
00EA         ?CASE178:
                                           ; SOURCE LINE # 1145 
00EA 900000  R      MOV    DPTR,#rxChr
00ED E0             MOVX   A,@DPTR
00EE FC             MOV    R4,A
00EF E500    R      MOV    A,rxCnt
00F1 2400    R      ADD    A,#LOW (rxBuf)
00F3 F582           MOV    DPL,A
00F5 E4             CLR    A
00F6 3400    R      ADDC   A,#HIGH (rxBuf)
00F8 F583           MOV    DPH,A
00FA EC             MOV    A,R4
00FB F0             MOVX   @DPTR,A
                                           ; SOURCE LINE # 1146 
00FC E500    R      MOV    A,rxCnt
00FE B43F0B         CJNE   A,#03FH,?ELSE89
                                           ; SOURCE LINE # 1148 
0101 E4             CLR    A
0102 F500    R      MOV    rxCnt,A
                                           ; SOURCE LINE # 1149 
0104 E500    R      MOV    A,FPGA
0106 240C           ADD    A,#00CH
0108 F500    R      MOV    state,A
010A 8038           SJMP   ?NXT194
010C         ?ELSE89:
                                           ; SOURCE LINE # 1153 
010C 0500    R      INC    rxCnt
                                           ; SOURCE LINE # 1154 
010E E500    R      MOV    A,rxCnt
0110 2480           ADD    A,#080H
0112 FF             MOV    R7,A
0113 120000  R      LCALL  _SendChar
                                           ; SOURCE LINE # 1156 
0116 802C           SJMP   ?NXT197
0118         ?CASE179:
                                           ; SOURCE LINE # 1158 
0118 900000  R      MOV    DPTR,#rxChr
011B E0             MOVX   A,@DPTR
011C 24BF           ADD    A,#0BFH
011E 600F           JZ     ?CASE181
0120 14             DEC    A
0121 6021           JZ     ?NXT196
0123 14             DEC    A
0124 6011           JZ     ?CASE183
0126 14             DEC    A
0127 6013           JZ     ?CASE184
0129 24FE           ADD    A,#0FEH
012B 6014           JZ     ?CASE185
012D 8015           SJMP   ?NXT194
012F         ?CASE181:
                                           ; SOURCE LINE # 1161 
012F 750013  R      MOV    next,#013H
                                           ; SOURCE LINE # 1162 
0132 750012  R      MOV    state,#012H
                                           ; SOURCE LINE # 1163 
0135 800D           SJMP   ?NXT194
0137         ?CASE183:
                                           ; SOURCE LINE # 1168 
0137 750015  R      MOV    state,#015H
                                           ; SOURCE LINE # 1169 
013A 8008           SJMP   ?NXT194
013C         ?CASE184:
                                           ; SOURCE LINE # 1171 
013C 750016  R      MOV    state,#016H
                                           ; SOURCE LINE # 1172 
013F 8003           SJMP   ?NXT194
0141         ?CASE185:
                                           ; SOURCE LINE # 1174 
0141 750035  R      MOV    state,#035H
0144         ?NXT196:

0144         ?DEFAULT5:

0144         ?NXT194:

0144         ?NXT197:
                                           ; SOURCE LINE # 1187 
0144 D007           POP    AR7
0146 D006           POP    AR6
0148 D005           POP    AR5
014A D004           POP    AR4
014C D003           POP    AR3
014E D002           POP    AR2
0150 D001           POP    AR1
0152 D000           POP    AR0
0154 D0D0           POP    PSW
0156 D082           POP    DPL
0158 D083           POP    DPH
015A D0F0           POP    B
015C D0E0           POP    ACC
015E 32             RETI   

            ; FUNCTION Serial (END)

            ; FUNCTION Timer1_OneSec (BEGIN)
                                           ; SOURCE LINE # 1200 
0000 C0E0           PUSH   ACC
0002 C0F0           PUSH   B
0004 C0D0           PUSH   PSW
                                           ; SOURCE LINE # 1196 
0006 C28F           CLR    TF1
                                           ; SOURCE LINE # 1197 
0008 758C4C         MOV    TH0,#04CH
000B 758A00         MOV    TL0,#000H
                                           ; SOURCE LINE # 1198 
000E 0500    R      INC    beepCnt
                                           ; SOURCE LINE # 1199 
0010 E500    R      MOV    A,beepCnt
0012 B50002  R      CJNE   A,beepLmt,?NXT201
                                           ; SOURCE LINE # 1200 
0015 C290           CLR    BEEP
0017         ?NXT201:
0017 D0D0           POP    PSW
0019 D0F0           POP    B
001B D0E0           POP    ACC
001D 32             RETI   

            ; FUNCTION Timer1_OneSec (END)

C51 COMPILER V6.11.4C,  MAIN                      06/07/113  08:53:08  PAGE  3

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

rxBuf. . . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   0000H   64   
offset . . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   0040H   32   
Interval . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   0060H   128  
tSave. . . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   00E0H   7    
rxCnt. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0000H   1    
StopTh1. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0001H   1    
StartTh2 . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0002H   1    
FPGA . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0003H   1    
scrn . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0004H   1    
prntCh . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0005H   1    
jtrCh. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0006H   1    
system . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0007H   1    
rxState. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0008H   1    
last . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0009H   1    
Start. . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    000AH   1    
Stop . . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    000BH   1    
Counter. . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    000CH   4    
Whole. . . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0010H   4    
EstJtr . . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0014H   4    
time . . . . . . . . . . . . . . . . .  PUBLIC  XDATA   ARRAY   00E7H   7    
CurCol . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0018H   1    
DigitKey . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0019H   1    
qHits. . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    001AH   1    
qReadings. . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    001BH   1    
qRear. . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    001CH   1    
qPtr . . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    001DH   1    
Key. . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    001EH   1    
p. . . . . . . . . . . . . . . . . . .  PUBLIC  DATA    CHAR    001FH   1    
AllStops . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0000H   1    
multi. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0001H   1    
rxFlag . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0002H   1    
rtc_Problem. . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0003H   1    
isInit . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0004H   1    
run. . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0005H   1    
mStr . . . . . . . . . . . . . . . . .  PUBLIC  DATA    PTR     0020H   3    
rxChr. . . . . . . . . . . . . . . . .  PUBLIC  XDATA   BASE    00EEH   1    
state. . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0023H   1    
next . . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0024H   1    
min. . . . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0025H   4    
max. . . . . . . . . . . . . . . . . .  PUBLIC  DATA    LONG    0029H   4    
SelectLines. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  device?085 . . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
  device?085 . . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
Calculate. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  FPGA_No?086. . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
  FPGA_No?086. . . . . . . . . . . . .  PARAM   DATA    BASE    0000H   1    
pp?087 . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0001H   1    
SendFormatedData . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
pp?089 . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0004H   1    
dg?090 . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0009H   1    
Divisor?091. . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0000H   4    
tempInterval?092 . . . . . . . . . . .  PUBLIC  DATA    BASE    0005H   4    
Display. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  FPGA_No?093. . . . . . . . . . . . .  PARAM   DATA    BASE    0004H   1    
  Reference?094. . . . . . . . . . . .  PARAM   DATA    LONG    0000H   4    
  FPGA_No?093. . . . . . . . . . . . .  PARAM   DATA    BASE    0004H   1    
  Reference?094. . . . . . . . . . . .  PARAM   DATA    LONG    0000H   4    
pp?095 . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0005H   1    
Print. . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  Chan?096 . . . . . . . . . . . . . .  PARAM   DATA    BASE    0004H   1    
  Reference?097. . . . . . . . . . . .  PARAM   DATA    LONG    0000H   4    
  Chan?096 . . . . . . . . . . . . . .  PARAM   DATA    BASE    0004H   1    
  Reference?097. . . . . . . . . . . .  PARAM   DATA    LONG    0000H   4    
Initialize . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
rDisp_Time . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  tm?099 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
  tm?099 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
rDisp_Date . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  tm?100 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
  tm?100 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
rPrint_Time. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  tm?101 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
  tm?101 . . . . . . . . . . . . . . .  PARAM   DATA    PTR     0000H   3    
ROM_WritePage. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
  addr?102 . . . . . . . . . . . . . .  PARAM   DATA    U_INT  0000H   2    
  addr?102 . . . . . . . . . . . . . .  PARAM   DATA    U_INT  0000H   2    
pp?103 . . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    0002H   1    
beepCnt. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    002DH   1    
beepLmt. . . . . . . . . . . . . . . .  PUBLIC  DATA    BASE    002EH   1    
autoprint. . . . . . . . . . . . . . .  PUBLIC  DATA    BIT     0006H   1    
main . . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
KeyInt . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
StartInt . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
Serial . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
Timer1_OneSec. . . . . . . . . . . . .  PUBLIC  CODE    PROC    -----   -----
SendChar . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
Delay25ms. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
gGotoXY. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
gPutc. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
_LongToAscii?BIT . . . . . . . . . . .  EXTERN  DATA    BIT     -----   -----
LongToAscii. . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
gPutStr. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
PrintString. . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
DelayHalfSec . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
gInitialize. . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
_gClear?BIT. . . . . . . . . . . . . .  EXTERN  DATA    BIT     -----   -----
gClear . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
gWriteCommand. . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
ROM_Read . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
_gDrawRect?BYTE. . . . . . . . . . . .  EXTERN  DATA    CHAR    -----   -----
_gDrawRect?BIT . . . . . . . . . . . .  EXTERN  DATA    BIT     -----   -----
gDrawRect. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
rBrstReadClk . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
rWriteClk. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
I2C_start. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
I2C_write. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
I2C_stop . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
Delay5ms . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
ROM_Write. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    -----   -----
C51 COMPILER V6.11.4C,  MAIN                      06/07/113  08:53:08  PAGE  4



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   12028    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    239    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     47      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      7    ----
END OF MODULE INFORMATION.

C51 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
